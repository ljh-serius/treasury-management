{"version":3,"file":"static/js/75517.2df886e5.chunk.js","mappings":"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","sources":["pages/Analysis/TrainingDevelopment/SkillDevelopment/SkillAssessments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function SkillAssessmentsDashboard({ fetchItems }) {\r\n  const [assessmentData, setAssessmentData] = useState([]);\r\n  const [proficiencyDistribution, setProficiencyDistribution] = useState([]);\r\n  const [assessmentTrendsData, setAssessmentTrendsData] = useState([]);\r\n  const [scoreBySkillData, setScoreBySkillData] = useState([]);\r\n  const [averageScore, setAverageScore] = useState(0);\r\n  const [totalAssessments, setTotalAssessments] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setAssessmentData(data);\r\n      processAssessmentData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processAssessmentData = (data) => {\r\n    // Total Assessments\r\n    setTotalAssessments(data.length);\r\n\r\n    // Calculate Average Score\r\n    const totalScore = data.reduce((acc, assessment) => acc + Number(assessment.score), 0);\r\n    setAverageScore(totalScore / data.length);\r\n\r\n    // Assessments by Proficiency Level\r\n    const proficiencyCounts = data.reduce((acc, assessment) => {\r\n      acc[assessment.proficiencyLevel] = (acc[assessment.proficiencyLevel] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setProficiencyDistribution(Object.keys(proficiencyCounts).map(key => ({\r\n      name: key,\r\n      y: proficiencyCounts[key],\r\n    })));\r\n\r\n    // Assessment Trends over Time\r\n    const trendsData = data.reduce((acc, assessment) => {\r\n      const month = new Date(assessment.assessmentDate).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setAssessmentTrendsData(Object.keys(trendsData).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: trendsData[key],\r\n    })));\r\n\r\n    // Scores by Skill\r\n    const skillScores = data.reduce((acc, assessment) => {\r\n      acc[assessment.skillName] = (acc[assessment.skillName] || 0) + Number(assessment.score);\r\n      return acc;\r\n    }, {});\r\n\r\n    setScoreBySkillData(Object.keys(skillScores).map(key => ({\r\n      name: key,\r\n      y: skillScores[key] / data.filter(assessment => assessment.skillName === key).length, // Average score by skill\r\n    })));\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const proficiencyChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Assessments by Proficiency Level',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Proficiency Level',\r\n        colorByPoint: true,\r\n        data: proficiencyDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const assessmentTrendsChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Assessment Trends Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: assessmentTrendsData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Number of Assessments',\r\n        data: assessmentTrendsData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const scoreBySkillChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Average Score by Skill',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Skill',\r\n        data: scoreBySkillData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Skill Assessments Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Assessments</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAssessments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Score</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageScore.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={proficiencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={assessmentTrendsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={scoreBySkillChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["SkillAssessmentsDashboard","_ref","fetchItems","assessmentData","setAssessmentData","useState","proficiencyDistribution","setProficiencyDistribution","assessmentTrendsData","setAssessmentTrendsData","scoreBySkillData","setScoreBySkillData","averageScore","setAverageScore","totalAssessments","setTotalAssessments","loading","setLoading","useEffect","async","data","processAssessmentData","fetchData","length","totalScore","reduce","acc","assessment","Number","score","proficiencyCounts","proficiencyLevel","Object","keys","map","key","name","y","trendsData","month","Date","assessmentDate","getMonth","skillScores","skillName","filter","proficiencyChartOptions","chart","type","title","text","series","colorByPoint","assessmentTrendsChartOptions","xAxis","categories","scoreBySkillChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}