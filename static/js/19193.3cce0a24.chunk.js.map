{"version":3,"file":"static/js/19193.3cce0a24.chunk.js","mappings":"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","sources":["pages/Analysis/LogisticsSupplyChain/Procurement/PurchaseOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function PurchaseOrdersDashboard({ fetchItems }) {\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n  const [quantityDistribution, setQuantityDistribution] = useState([]);\r\n  const [totalAmountTrends, setTotalAmountTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setOrderData(data);\r\n      processOrderData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processOrderData = (data) => {\r\n    // Total Orders\r\n    setTotalOrders(data.length);\r\n\r\n    // Quantity Distribution for Pie Chart\r\n    const quantityCounts = data.reduce((acc, order) => {\r\n      acc[order.quantity] = (acc[order.quantity] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setQuantityDistribution(Object.keys(quantityCounts).map(key => ({\r\n      name: `Quantity: ${key}`,\r\n      y: quantityCounts[key],\r\n    })));\r\n\r\n    // Total Amount Trends for Line Chart\r\n    const trendsData = data.map(order => ({\r\n      date: new Date(order.orderDate).getTime(),\r\n      amount: order.totalAmount,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setTotalAmountTrends(trendsData);\r\n  };\r\n\r\n  // Highcharts options for Quantity Distribution\r\n  const quantityChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Quantity Distribution' },\r\n    series: [{\r\n      name: 'Quantity',\r\n      colorByPoint: true,\r\n      data: quantityDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Total Amount Trends\r\n  const totalAmountChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Total Amount Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Order Date' } },\r\n    yAxis: { title: { text: 'Total Amount' } },\r\n    series: [{\r\n      name: 'Total Amount',\r\n      data: totalAmountTrends.map(item => [item.date, item.amount]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Purchase Orders Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Orders</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalOrders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Quantity Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={quantityChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Total Amount Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={totalAmountChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["PurchaseOrdersDashboard","_ref","fetchItems","orderData","setOrderData","useState","totalOrders","setTotalOrders","quantityDistribution","setQuantityDistribution","totalAmountTrends","setTotalAmountTrends","loading","setLoading","useEffect","async","data","processOrderData","fetchData","length","quantityCounts","reduce","acc","order","quantity","Object","keys","map","key","name","y","trendsData","date","Date","orderDate","getTime","amount","totalAmount","sort","a","b","quantityChartOptions","chart","type","title","text","series","colorByPoint","totalAmountChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}