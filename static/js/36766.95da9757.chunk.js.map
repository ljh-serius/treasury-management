{"version":3,"file":"static/js/36766.95da9757.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Milestones/MilestoneReporting.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function MilestoneReportingDashboard({ fetchData }) {\r\n  const [reportData, setReportData] = useState([]);\r\n  const [totalReports, setTotalReports] = useState(0);\r\n  const [urgentReports, setUrgentReports] = useState(0);\r\n  const [reportTrends, setReportTrends] = useState([]);\r\n  const [tagDistribution, setTagDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setReportData(data);\r\n      processReportData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processReportData = (data) => {\r\n    // Total Reports\r\n    setTotalReports(data.length);\r\n\r\n    // Count Urgent Reports\r\n    const urgent = data.filter(report => report.tags.includes('urgent')).length;\r\n    setUrgentReports(urgent);\r\n\r\n    // Report Trends for Line Chart\r\n    const trendData = data.map(report => ({\r\n      date: new Date(report.reportingDate).getTime(),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setReportTrends(trendData);\r\n\r\n    // Tag Distribution for Pie Chart\r\n    const tagCounts = data.reduce((acc, report) => {\r\n      report.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n    setTagDistribution(Object.keys(tagCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: tagCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Report Trends\r\n  const reportTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Reporting Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Number of Reports' } },\r\n    series: [{\r\n      name: 'Reports',\r\n      data: reportTrends.map(item => [item.date]),\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Tag Distribution\r\n  const tagChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tag Distribution in Reports' },\r\n    series: [{\r\n      name: 'Tags',\r\n      colorByPoint: true,\r\n      data: tagDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Milestone Reporting Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Reports</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalReports}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Urgent Reports</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {urgentReports}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Report Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={reportTrendChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Tag Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["MilestoneReportingDashboard","_ref","fetchData","reportData","setReportData","useState","totalReports","setTotalReports","urgentReports","setUrgentReports","reportTrends","setReportTrends","tagDistribution","setTagDistribution","loading","setLoading","useEffect","async","data","processReportData","fetchDataAsync","length","urgent","filter","report","tags","includes","trendData","map","date","Date","reportingDate","getTime","sort","a","b","tagCounts","reduce","acc","forEach","tag","Object","keys","key","name","charAt","toUpperCase","slice","y","reportTrendChartOptions","chart","type","title","text","xAxis","yAxis","series","item","tagChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}