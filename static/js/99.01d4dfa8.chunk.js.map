{"version":3,"file":"static/js/99.01d4dfa8.chunk.js","mappings":"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","sources":["components/Management/Projects.js"],"sourcesContent":["\r\nimport {\r\n    fetchDocuments,\r\n    addDocument,\r\n    updateDocument,\r\n    deleteDocument,\r\n    fetchDocumentsBySelectValue,\r\n    fetchDocumentsByFieldValue\r\n} from '../../utils/firebaseCrudHelpers';\r\n\r\nimport { fetchItemsByField as fetchEmployeesByField } from './Employees';\r\nimport { fetchItems as fetchEmployees } from './Employees';\r\nimport { fetchItemsBySelectValue as fetchPartnersBySelectValue } from './Partners';\r\n// Part\r\nconst organizationId = JSON.parse(localStorage.getItem('userData')).organizationId;\r\n\r\nconst managers = (await fetchEmployeesByField('position', 'manager')).map((manager) => {\r\n    return {\r\n        id: manager.id,\r\n        label: manager.name\r\n    }\r\n})\r\n\r\n\r\nconst employees = (await fetchEmployees()).map((manager) => {\r\n    return {\r\n      id: manager.id,\r\n      label: manager.name\r\n    }\r\n  })\r\n  \r\n\r\nexport const fieldsConfig = {\r\n    name: { label: 'Project Name', type: 'text', faker: 'commerce.productName' },\r\n    description: { label: 'Description', type: 'text', multiline: true, rows: 4, faker: 'lorem.paragraphs' },\r\n    startDate: { label: 'Start Date', type: 'date', faker: 'date.past' },\r\n    endDate: { label: 'End Date', type: 'date', faker: 'date.future' },\r\n    status: {\r\n        label: 'Status',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'not_started', label: 'Not Started' },\r\n            { id: 'in_progress', label: 'In Progress' },\r\n            { id: 'completed', label: 'Completed' },\r\n            { id: 'on_hold', label: 'On Hold' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    managerName: {\r\n        label: 'Manager Name',\r\n        type: 'select',\r\n        options: managers,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    teamMembers: {\r\n        label: 'Team Members',\r\n        type: 'select',\r\n        options: employees,\r\n        multiple: true,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    budget: { label: 'Budget', type: 'number', faker: 'finance.amount' },\r\n    priority: {\r\n        label: 'Priority',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'low', label: 'Low' },\r\n            { id: 'medium', label: 'Medium' },\r\n            { id: 'high', label: 'High' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    projectType: {\r\n        label: 'Project Type',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'internal', label: 'Internal' },\r\n            { id: 'client', label: 'Client' },\r\n            { id: 'rnd', label: 'R&D' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    clientName: {\r\n        label: 'Client Name',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'client1', label: 'Client 1' },\r\n            { id: 'client2', label: 'Client 2' },\r\n            { id: 'client3', label: 'Client 3' },\r\n            { id: 'client4', label: 'Client 4' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    phase: {\r\n        label: 'Project Phase',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'planning', label: 'Planning' },\r\n            { id: 'execution', label: 'Execution' },\r\n            { id: 'closure', label: 'Closure' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    progress: { label: 'Progress (%)', type: 'number', faker: 'datatype.number' },\r\n    risks: {\r\n        label: 'Risks Identified',\r\n        type: 'select',\r\n        link: '/risks',\r\n        options: [\r\n            { id: 'internal', label: 'Internal' },\r\n            { id: 'client', label: 'Client' },\r\n            { id: 'rnd', label: 'R&D' },\r\n        ],\r\n        multiple: true,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    lastUpdated: { label: 'Last Updated', type: 'date', faker: 'date.recent' },\r\n    estimatedCompletion: { label: 'Estimated Completion', type: 'date', faker: 'date.future' },\r\n    actualCompletion: { label: 'Actual Completion', type: 'date', faker: 'date.future' },\r\n    revenueGenerated: { label: 'Revenue Generated', type: 'number', faker: 'finance.amount' },\r\n    dependencies: {\r\n        label: 'Dependencies',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'dep1', label: 'Dependency 1' },\r\n            { id: 'dep2', label: 'Dependency 2' },\r\n            { id: 'dep3', label: 'Dependency 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    projectCategory: {\r\n        label: 'Project Category',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'category1', label: 'Category 1' },\r\n            { id: 'category2', label: 'Category 2' },\r\n            { id: 'category3', label: 'Category 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    resourceAllocation: { label: 'Resource Allocation', type: 'text', faker: 'lorem.words' },\r\n    technologyStack: {\r\n        label: 'Technology Stack',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'tech1', label: 'Tech Stack 1' },\r\n            { id: 'tech2', label: 'Tech Stack 2' },\r\n            { id: 'tech3', label: 'Tech Stack 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    stakeholders: {\r\n        label: 'Stakeholders',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'stakeholder1', label: 'Stakeholder 1' },\r\n            { id: 'stakeholder2', label: 'Stakeholder 2' },\r\n            { id: 'stakeholder3', label: 'Stakeholder 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    complianceRequirements: { label: 'Compliance Requirements', type: 'text', faker: 'lorem.sentence' },\r\n    riskMitigation: { label: 'Risk Mitigation', type: 'text', faker: 'lorem.sentence' },\r\n    criticalPath: {\r\n        label: 'Critical Path',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'present', label: 'Present' },\r\n            { id: 'absent', label: 'Absent' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    milestones: { label: 'Milestones', type: 'text', faker: 'lorem.words' },\r\n    KPIs: { label: 'KPIs', type: 'text', faker: 'lorem.words' },\r\n    projectSponsor: {\r\n        label: 'Project Sponsor',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'sponsor1', label: 'Sponsor 1' },\r\n            { id: 'sponsor2', label: 'Sponsor 2' },\r\n            { id: 'sponsor3', label: 'Sponsor 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    businessImpact: {\r\n        label: 'Business Impact',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'low', label: 'Low Impact' },\r\n            { id: 'medium', label: 'Medium Impact' },\r\n            { id: 'high', label: 'High Impact' },\r\n            { id: 'critical', label: 'Critical Impact' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    operatingCosts: { label: 'Operating Costs', type: 'number', faker: 'finance.amount' },\r\n    userStories: {\r\n        label: 'User Stories',\r\n        type: 'text',\r\n        multiline: true,\r\n        rows: 4,\r\n        faker: 'lorem.paragraphs',\r\n    },\r\n    codeRepository: { label: 'Code Repository', type: 'text', faker: 'internet.url' },\r\n    documentation: { label: 'Documentation', type: 'text', faker: 'lorem.paragraph' },\r\n};\r\n\r\nexport const headCells = Object.keys(fieldsConfig).map(key => ({\r\n    id: key,\r\n    label: fieldsConfig[key].label,\r\n}));\r\n\r\nexport const entityName = 'Projects';\r\n\r\nexport async function fetchItems() {\r\n    return await fetchDocuments(organizationId, 'projects');\r\n} export const addItem = (item) => addDocument(organizationId, 'projects', item);\r\nexport const updateItem = (id, item) => updateDocument(organizationId, 'projects', id, item);\r\nexport const deleteItem = (id) => deleteDocument(organizationId, 'projects', id);\r\n\r\n\r\n\r\n"],"names":["organizationId","JSON","parse","localStorage","getItem","managers","fetchEmployeesByField","map","manager","id","label","name","fieldsConfig","type","faker","description","multiline","rows","startDate","endDate","status","options","managerName","teamMembers","fetchEmployees","multiple","budget","priority","projectType","clientName","phase","progress","risks","link","lastUpdated","estimatedCompletion","actualCompletion","revenueGenerated","dependencies","projectCategory","resourceAllocation","technologyStack","stakeholders","complianceRequirements","riskMitigation","criticalPath","milestones","KPIs","projectSponsor","businessImpact","operatingCosts","userStories","codeRepository","documentation","headCells","Object","keys","key","entityName","async","fetchItems","fetchDocuments","addItem","item","addDocument","updateItem","updateDocument","deleteItem","deleteDocument"],"sourceRoot":""}