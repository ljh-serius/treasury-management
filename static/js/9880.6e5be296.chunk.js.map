{"version":3,"file":"static/js/9880.6e5be296.chunk.js","mappings":"uMAAO,MAAMA,EAAe,CACxBC,OAAQ,CAAEC,MAAO,UAAWC,KAAM,OAAQC,MAAO,iBACjDC,SAAU,CAAEH,MAAO,YAAaC,KAAM,OAAQC,MAAO,uBACrDE,SAAU,CACNJ,MAAO,YACPC,KAAM,SACNI,QAAS,CACL,CAAEC,GAAI,QAASN,MAAO,SACtB,CAAEM,GAAI,WAAYN,MAAO,YACzB,CAAEM,GAAI,cAAeN,MAAO,gBAEhCE,MAAO,uBAEXK,UAAW,CAAEP,MAAO,aAAcC,KAAM,OAAQC,MAAO,gBACvDM,UAAW,CAAER,MAAO,aAAcC,KAAM,OAAQC,MAAO,aACvDO,OAAQ,CACJT,MAAO,SACPC,KAAM,SACNI,QAAS,CACL,CAAEC,GAAI,OAAQN,MAAO,QACrB,CAAEM,GAAI,SAAUN,MAAO,UACvB,CAAEM,GAAI,UAAWN,MAAO,YAE5BE,MAAO,uBAEXQ,KAAM,CACFV,MAAO,OACPC,KAAM,SACNI,QAAS,GACTM,UAAU,EACVT,MAAO,eAEXU,MAAO,CAAEZ,MAAO,QAASC,KAAM,OAAQY,WAAW,EAAMC,KAAM,EAAGZ,MAAO,mBACxEa,UAAW,CAAEf,MAAO,aAAcC,KAAM,OAAQC,MAAO,iBACvDc,eAAgB,CAAEhB,MAAO,mBAAoBC,KAAM,OAAQC,MAAO,iBAClEe,YAAa,CAAEjB,MAAO,eAAgBC,KAAM,OAAQC,MAAO,aAC3DgB,iBAAkB,CAAElB,MAAO,qBAAsBC,KAAM,OAAQC,MAAO,gBAG7DiB,EAAa,oBACbC,EAAiB,mB","sources":["components/Management/ComplianceLegal/Disputes/LegalProceedings.js"],"sourcesContent":["export const fieldsConfig = {\r\n    caseId: { label: 'Case ID', type: 'text', faker: 'datatype.uuid' },\r\n    caseName: { label: 'Case Name', type: 'text', faker: 'company.catchPhrase' },\r\n    caseType: {\r\n        label: 'Case Type',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'civil', label: 'Civil' },\r\n            { id: 'criminal', label: 'Criminal' },\r\n            { id: 'arbitration', label: 'Arbitration' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    courtName: { label: 'Court Name', type: 'text', faker: 'company.name' },\r\n    startDate: { label: 'Start Date', type: 'date', faker: 'date.past' },\r\n    status: {\r\n        label: 'Status',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'open', label: 'Open' },\r\n            { id: 'closed', label: 'Closed' },\r\n            { id: 'settled', label: 'Settled' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    tags: {\r\n        label: 'Tags',\r\n        type: 'select',\r\n        options: [],  // Populate with actual tags\r\n        multiple: true,\r\n        faker: 'lorem.words',\r\n    },\r\n    notes: { label: 'Notes', type: 'text', multiline: true, rows: 4, faker: 'lorem.paragraph' },\r\n    createdBy: { label: 'Created By', type: 'text', faker: 'name.fullName' },\r\n    lastModifiedBy: { label: 'Last Modified By', type: 'text', faker: 'name.fullName' },\r\n    createdDate: { label: 'Created Date', type: 'date', faker: 'date.past' },\r\n    lastModifiedDate: { label: 'Last Modified Date', type: 'date', faker: 'date.recent' },\r\n};\r\n\r\nexport const entityName = 'Legal Proceedings';\r\nexport const collectionName = 'legal-proceedings';"],"names":["fieldsConfig","caseId","label","type","faker","caseName","caseType","options","id","courtName","startDate","status","tags","multiple","notes","multiline","rows","createdBy","lastModifiedBy","createdDate","lastModifiedDate","entityName","collectionName"],"sourceRoot":""}