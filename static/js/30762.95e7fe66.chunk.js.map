{"version":3,"file":"static/js/30762.95e7fe66.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Leads/LeadConversionRates.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function LeadConversionDashboard({ fetchData }) {\r\n  const [leadData, setLeadData] = useState([]);\r\n  const [totalLeads, setTotalLeads] = useState(0);\r\n  const [averageConversionRate, setAverageConversionRate] = useState(0);\r\n  const [highConversionLeads, setHighConversionLeads] = useState(0);\r\n  const [lowConversionLeads, setLowConversionLeads] = useState(0);\r\n  const [conversionRateDistribution, setConversionRateDistribution] = useState([]);\r\n  const [conversionTrends, setConversionTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setLeadData(data);\r\n      processLeadData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processLeadData = (data) => {\r\n    // Total Leads\r\n    setTotalLeads(data.length);\r\n\r\n    // Average Conversion Rate\r\n    const totalRate = data.reduce((acc, lead) => acc + Number(lead.conversionRate), 0);\r\n    setAverageConversionRate(totalRate / data.length);\r\n\r\n    // Count High and Low Conversion Leads\r\n    const highConversion = data.filter(lead => lead.conversionRate >= 75).length;\r\n    const lowConversion = data.filter(lead => lead.conversionRate <= 25).length;\r\n    setHighConversionLeads(highConversion);\r\n    setLowConversionLeads(lowConversion);\r\n\r\n    // Conversion Rate Distribution for Pie Chart\r\n    const rateCounts = data.reduce((acc, lead) => {\r\n      const rate = Math.floor(lead.conversionRate / 10) * 10; // Group by 10%\r\n      acc[rate] = (acc[rate] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setConversionRateDistribution(Object.keys(rateCounts).map(key => ({\r\n      name: `${key}%`,\r\n      y: rateCounts[key],\r\n    })));\r\n\r\n    // Conversion Trends Over Time\r\n    const trends = data.map(lead => ({\r\n      date: new Date(lead.conversionDate).getTime(),\r\n      rate: lead.conversionRate,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setConversionTrends(trends);\r\n  };\r\n\r\n  // Highcharts options for Conversion Rate Distribution\r\n  const conversionRateChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Conversion Rate Distribution' },\r\n    series: [{\r\n      name: 'Leads',\r\n      colorByPoint: true,\r\n      data: conversionRateDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Conversion Trends Over Time\r\n  const conversionTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Conversion Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Conversion Rate (%)' } },\r\n    series: [{\r\n      name: 'Conversion Rate',\r\n      data: conversionTrends.map(item => [item.date, item.rate]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Lead Conversion Rates Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Leads</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalLeads}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Conversion Rate</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageConversionRate.toFixed(2)}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">High Conversion Leads</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {highConversionLeads}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Low Conversion Leads</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {lowConversionLeads}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Conversion Rate Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={conversionRateChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Conversion Trends Over Time Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={conversionTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["LeadConversionDashboard","_ref","fetchData","leadData","setLeadData","useState","totalLeads","setTotalLeads","averageConversionRate","setAverageConversionRate","highConversionLeads","setHighConversionLeads","lowConversionLeads","setLowConversionLeads","conversionRateDistribution","setConversionRateDistribution","conversionTrends","setConversionTrends","loading","setLoading","useEffect","async","data","processLeadData","fetchDataAsync","length","totalRate","reduce","acc","lead","Number","conversionRate","highConversion","filter","lowConversion","rateCounts","rate","Math","floor","Object","keys","map","key","name","y","trends","date","Date","conversionDate","getTime","sort","a","b","conversionRateChartOptions","chart","type","title","text","series","colorByPoint","conversionTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}