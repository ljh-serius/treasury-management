{"version":3,"file":"static/js/96898.5e7ae572.chunk.js","mappings":"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","sources":["pages/Analysis/LogisticsSupplyChain/SupplierContracts/SupplierPerformanceEvaluation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function SupplierEvaluationDashboard({ fetchItems }) {\r\n  const [evaluationData, setEvaluationData] = useState([]);\r\n  const [totalEvaluations, setTotalEvaluations] = useState(0);\r\n  const [scoreDistribution, setScoreDistribution] = useState([]);\r\n  const [evaluationTrends, setEvaluationTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setEvaluationData(data);\r\n      processEvaluationData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processEvaluationData = (data) => {\r\n    // Total Evaluations\r\n    setTotalEvaluations(data.length);\r\n\r\n    // Performance Score Distribution for Pie Chart\r\n    const scoreCounts = data.reduce((acc, evaluation) => {\r\n      const scoreRange = evaluation.performanceScore >= 80 ? 'High Performance' :\r\n        evaluation.performanceScore >= 50 ? 'Medium Performance' : 'Low Performance';\r\n      acc[scoreRange] = (acc[scoreRange] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setScoreDistribution(Object.keys(scoreCounts).map(key => ({\r\n      name: key,\r\n      y: scoreCounts[key],\r\n    })));\r\n\r\n    // Evaluation Date Trends for Line Chart\r\n    const trendsData = data.map(evaluation => ({\r\n      date: new Date(evaluation.evaluationDate).getTime(),\r\n      count: 1,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setEvaluationTrends(trendsData);\r\n  };\r\n\r\n  // Highcharts options for Performance Score Distribution\r\n  const scoreChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Performance Score Distribution' },\r\n    series: [{\r\n      name: 'Scores',\r\n      colorByPoint: true,\r\n      data: scoreDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Evaluation Date Trends\r\n  const evaluationDateChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Evaluation Date Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Evaluations' } },\r\n    series: [{\r\n      name: 'Evaluations',\r\n      data: evaluationTrends.map(item => [item.date, item.count]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Supplier Performance Evaluation Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Evaluations</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEvaluations}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Performance Score Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={scoreChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Evaluation Date Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={evaluationDateChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["SupplierEvaluationDashboard","_ref","fetchItems","evaluationData","setEvaluationData","useState","totalEvaluations","setTotalEvaluations","scoreDistribution","setScoreDistribution","evaluationTrends","setEvaluationTrends","loading","setLoading","useEffect","async","data","processEvaluationData","fetchData","length","scoreCounts","reduce","acc","evaluation","scoreRange","performanceScore","Object","keys","map","key","name","y","trendsData","date","Date","evaluationDate","getTime","count","sort","a","b","scoreChartOptions","chart","type","title","text","series","colorByPoint","evaluationDateChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}