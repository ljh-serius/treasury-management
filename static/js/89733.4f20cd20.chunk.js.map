{"version":3,"file":"static/js/89733.4f20cd20.chunk.js","mappings":"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","sources":["pages/Analysis/CrisisRiskManagement/CrisisManagement/CrisisScenarios.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Box } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst CrisisScenariosAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalScenarios: 0,\r\n    activeScenarios: 0,\r\n    archivedScenarios: 0,\r\n    highLikelihood: 0,\r\n    mediumLikelihood: 0,\r\n    lowLikelihood: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetchItems();\r\n      setData(result);\r\n\r\n      // Calculate KPIs\r\n      const totalScenarios = result.length;\r\n      const activeScenarios = result.filter(scenario => scenario.status === 'active').length;\r\n      const archivedScenarios = result.filter(scenario => scenario.status === 'archived').length;\r\n      const highLikelihood = result.filter(scenario => scenario.likelihood === 'high').length;\r\n      const mediumLikelihood = result.filter(scenario => scenario.likelihood === 'medium').length;\r\n      const lowLikelihood = result.filter(scenario => scenario.likelihood === 'low').length;\r\n\r\n      setKpis({\r\n        totalScenarios,\r\n        activeScenarios,\r\n        archivedScenarios,\r\n        highLikelihood,\r\n        mediumLikelihood,\r\n        lowLikelihood,\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  // Highcharts configuration for Likelihood Distribution\r\n  const likelihoodDistributionOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Likelihood Distribution' },\r\n    xAxis: { categories: ['Likelihood'] },\r\n    series: [\r\n      { name: 'High', data: [kpis.highLikelihood] },\r\n      { name: 'Medium', data: [kpis.mediumLikelihood] },\r\n      { name: 'Low', data: [kpis.lowLikelihood] },\r\n    ],\r\n  };\r\n\r\n  // Highcharts configuration for Status Distribution\r\n  const statusDistributionOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Scenario Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Scenarios',\r\n        data: [\r\n          { name: 'Active', y: kpis.activeScenarios },\r\n          { name: 'Archived', y: kpis.archivedScenarios },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={3}>\r\n        {/* KPIs */}\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Total Scenarios</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalScenarios}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Active Scenarios</Typography>\r\n              <Typography variant=\"h4\">{kpis.activeScenarios}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Archived Scenarios</Typography>\r\n              <Typography variant=\"h4\">{kpis.archivedScenarios}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Highcharts for Likelihood Distribution */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Likelihood Distribution</Typography>\r\n              <HighchartsReact highcharts={Highcharts} options={likelihoodDistributionOptions} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Highcharts for Scenario Status Distribution */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Scenario Status Distribution</Typography>\r\n              <HighchartsReact highcharts={Highcharts} options={statusDistributionOptions} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrisisScenariosAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalScenarios","activeScenarios","archivedScenarios","highLikelihood","mediumLikelihood","lowLikelihood","useEffect","async","result","length","filter","scenario","status","likelihood","fetchData","likelihoodDistributionOptions","chart","type","title","text","xAxis","categories","series","name","statusDistributionOptions","y","_jsx","Box","sx","flexGrow","children","_jsxs","Grid","container","spacing","item","xs","md","Card","CardContent","Typography","variant","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}