{"version":3,"file":"static/js/75551.d5553079.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Tasks/TaskAssignements.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function TasksAssignmentsDashboard({ fetchItems }) {\r\n  const [assignmentData, setAssignmentData] = useState([]);\r\n  const [totalAssignments, setTotalAssignments] = useState(0);\r\n  const [urgentAssignments, setUrgentAssignments] = useState(0);\r\n  const [roleDistribution, setRoleDistribution] = useState([]);\r\n  const [assignmentTrends, setAssignmentTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setAssignmentData(data);\r\n      processAssignmentData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processAssignmentData = (data) => {\r\n    // Total Assignments\r\n    setTotalAssignments(data.length);\r\n\r\n    // Urgent Assignments\r\n    const urgent = data.filter(assignment => assignment.tags.includes('urgent')).length;\r\n    setUrgentAssignments(urgent);\r\n\r\n    // Role Distribution for Pie Chart\r\n    const roleCounts = data.reduce((acc, assignment) => {\r\n      acc[assignment.role] = (acc[assignment.role] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setRoleDistribution(Object.keys(roleCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: roleCounts[key],\r\n    })));\r\n\r\n    // Assignment Trends for Line Chart\r\n    const trendData = data.map(assignment => ({\r\n      date: new Date(assignment.assignmentDate).getTime(),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setAssignmentTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Role Distribution\r\n  const roleChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Role Distribution in Task Assignments' },\r\n    series: [{\r\n      name: 'Roles',\r\n      colorByPoint: true,\r\n      data: roleDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Assignment Trends\r\n  const assignmentTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Task Assignment Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Number of Assignments' } },\r\n    series: [{\r\n      name: 'Assignments',\r\n      data: assignmentTrends.map(item => [item.date]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Task Assignments Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Assignments</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAssignments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Urgent Assignments</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {urgentAssignments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Role Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={roleChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Assignment Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={assignmentTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["TasksAssignmentsDashboard","_ref","fetchItems","assignmentData","setAssignmentData","useState","totalAssignments","setTotalAssignments","urgentAssignments","setUrgentAssignments","roleDistribution","setRoleDistribution","assignmentTrends","setAssignmentTrends","loading","setLoading","useEffect","async","data","processAssignmentData","fetchDataAsync","length","urgent","filter","assignment","tags","includes","roleCounts","reduce","acc","role","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","date","Date","assignmentDate","getTime","sort","a","b","roleChartOptions","chart","type","title","text","series","colorByPoint","assignmentTrendChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}