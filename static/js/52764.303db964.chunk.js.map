{"version":3,"file":"static/js/52764.303db964.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/AccountsReceivable/DebtorAging.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function DebtorAgingDashboard({ fetchItems }) {\r\n  const [debtorData, setDebtorData] = useState([]);\r\n  const [riskLevelDistribution, setRiskLevelDistribution] = useState([]);\r\n  const [overdueAmountByRange, setOverdueAmountByRange] = useState([]);\r\n  const [overdueInvoicesTrendsData, setOverdueInvoicesTrendsData] = useState([]);\r\n  const [averageOverdueDaysTrendsData, setAverageOverdueDaysTrendsData] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [totalOverdueInvoices, setTotalOverdueInvoices] = useState(0);\r\n  const [totalOverdueAmount, setTotalOverdueAmount] = useState(0);\r\n  const [averageOverdueDays, setAverageOverdueDays] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setDebtorData(data);\r\n      processDebtorData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processDebtorData = (data) => {\r\n    // Total Number of Overdue Invoices\r\n    setTotalOverdueInvoices(data.length);\r\n\r\n    // Total Overdue Amount\r\n    const totalAmount = data.reduce((acc, invoice) => acc + Number(invoice.amount), 0);\r\n    setTotalOverdueAmount(totalAmount);\r\n\r\n    // Average Overdue Days\r\n    const totalDays = data.reduce((acc, invoice) => acc + Number(invoice.overdueDays), 0);\r\n    setAverageOverdueDays(totalDays / data.length);\r\n\r\n    // Invoices by Risk Level\r\n    const riskLevelCounts = data.reduce((acc, invoice) => {\r\n      acc[invoice.riskLevel] = (acc[invoice.riskLevel] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setRiskLevelDistribution(Object.keys(riskLevelCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),  // Capitalize risk level\r\n      y: riskLevelCounts[key],\r\n    })));\r\n\r\n    // Overdue Amount by Due Date Range\r\n    const overdueAmountRanges = data.reduce((acc, invoice) => {\r\n      const days = Number(invoice.overdueDays);\r\n      const range = days <= 30 ? '0-30 Days' :\r\n                    days <= 60 ? '31-60 Days' :\r\n                    days <= 90 ? '61-90 Days' : '90+ Days';\r\n      acc[range] = (acc[range] || 0) + Number(invoice.amount);\r\n      return acc;\r\n    }, {});\r\n\r\n    setOverdueAmountByRange(Object.keys(overdueAmountRanges).map(key => ({\r\n      name: key,\r\n      y: overdueAmountRanges[key],\r\n    })));\r\n\r\n    // Overdue Invoices Over Time\r\n    const overdueTrends = data.reduce((acc, invoice) => {\r\n      const month = new Date(invoice.createdDate).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setOverdueInvoicesTrendsData(Object.keys(overdueTrends).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: overdueTrends[key],\r\n    })));\r\n\r\n    // Average Overdue Days Over Time\r\n    const overdueDaysTrends = data.reduce((acc, invoice) => {\r\n      const month = new Date(invoice.createdDate).getMonth() + 1;\r\n      acc[month] = (acc[month] || { totalDays: 0, count: 0 });\r\n      acc[month].totalDays += Number(invoice.overdueDays);\r\n      acc[month].count += 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setAverageOverdueDaysTrendsData(Object.keys(overdueDaysTrends).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: overdueDaysTrends[key].totalDays / overdueDaysTrends[key].count,\r\n    })));\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, invoice) => {\r\n      invoice.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(key => ({\r\n      name: key,\r\n      y: tagsCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const riskLevelChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Invoices by Risk Level',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Risk Levels',\r\n        colorByPoint: true,\r\n        data: riskLevelDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const overdueAmountRangeChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Overdue Amount by Due Date Range',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Overdue Amount',\r\n        data: overdueAmountByRange,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const overdueInvoicesTrendsChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Overdue Invoices Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: overdueInvoicesTrendsData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Number of Overdue Invoices',\r\n        data: overdueInvoicesTrendsData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const averageOverdueDaysTrendsChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Average Overdue Days Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: averageOverdueDaysTrendsData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Average Overdue Days',\r\n        data: averageOverdueDaysTrendsData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Tags Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        data: tagsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Debtor Aging Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Overdue Invoices</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalOverdueInvoices}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Overdue Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalOverdueAmount.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Overdue Days</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageOverdueDays.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={riskLevelChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={overdueAmountRangeChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={overdueInvoicesTrendsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={averageOverdueDaysTrendsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["DebtorAgingDashboard","_ref","fetchItems","debtorData","setDebtorData","useState","riskLevelDistribution","setRiskLevelDistribution","overdueAmountByRange","setOverdueAmountByRange","overdueInvoicesTrendsData","setOverdueInvoicesTrendsData","averageOverdueDaysTrendsData","setAverageOverdueDaysTrendsData","tagsDistribution","setTagsDistribution","totalOverdueInvoices","setTotalOverdueInvoices","totalOverdueAmount","setTotalOverdueAmount","averageOverdueDays","setAverageOverdueDays","loading","setLoading","useEffect","async","data","processDebtorData","fetchData","length","totalAmount","reduce","acc","invoice","Number","amount","totalDays","overdueDays","riskLevelCounts","riskLevel","Object","keys","map","key","name","charAt","toUpperCase","slice","y","overdueAmountRanges","days","range","overdueTrends","month","Date","createdDate","getMonth","overdueDaysTrends","count","tagsCounts","tags","forEach","tag","riskLevelChartOptions","chart","type","title","text","series","colorByPoint","overdueAmountRangeChartOptions","overdueInvoicesTrendsChartOptions","xAxis","categories","averageOverdueDaysTrendsChartOptions","tagsChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}