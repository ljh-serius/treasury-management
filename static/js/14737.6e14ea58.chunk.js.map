{"version":3,"file":"static/js/14737.6e14ea58.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/BankAccounts/ReconciliationStatements.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function ReconciliationStatementsAnalysisDashboard({ fetchItems }) {\r\n  const [statementsData, setStatementsData] = useState([]);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [totalBalance, setTotalBalance] = useState(0);\r\n  const [totalLateFees, setTotalLateFees] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setStatementsData(data);\r\n      processStatementsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processStatementsData = (data) => {\r\n    // Currency Distribution\r\n    const currencyCounts = data.reduce((acc, statement) => {\r\n      acc[statement.currency] = (acc[statement.currency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, statement) => {\r\n      acc[statement.status] = (acc[statement.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total Balance, Late Payment Fees, and Eco Contribution\r\n    const totals = data.reduce(\r\n      (acc, statement) => {\r\n        acc.balance += Number(statement.balance) || 0;\r\n        acc.lateFees += Number(statement.latePaymentFee) || 0;\r\n        acc.ecoContribution += Number(statement.ecoContribution) || 0;\r\n        return acc;\r\n      },\r\n      { balance: 0, lateFees: 0, ecoContribution: 0 }\r\n    );\r\n\r\n    setTotalBalance(totals.balance);\r\n    setTotalLateFees(totals.lateFees);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n  };\r\n\r\n  const currencyChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Currency Distribution' },\r\n    series: [{ name: 'Currencies', colorByPoint: true, data: currencyDistribution }],\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Statement Status Distribution' },\r\n    series: [{ name: 'Status', data: statusDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Reconciliation Statements Analysis Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Balance</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalBalance.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total balance across all reconciliation statements.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Late Payment Fees</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalLateFees.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total late payment fees across all statements.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ReconciliationStatementsAnalysisDashboard","_ref","fetchItems","statementsData","setStatementsData","useState","currencyDistribution","setCurrencyDistribution","statusDistribution","setStatusDistribution","totalBalance","setTotalBalance","totalLateFees","setTotalLateFees","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processStatementsData","fetchData","currencyCounts","reduce","acc","statement","currency","Object","keys","map","key","name","y","statusCounts","status","totals","balance","Number","lateFees","latePaymentFee","ecoContribution","currencyChartOptions","chart","type","title","text","series","colorByPoint","statusChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}