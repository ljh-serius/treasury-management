{"version":3,"file":"static/js/68072.21068544.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/AccountsPayable/VendorInvoices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function VendorInvoiceAnalysisDashboard({ fetchItems }) {\r\n  const [invoicesData, setInvoicesData] = useState([]);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [paymentTermsDistribution, setPaymentTermsDistribution] = useState([]);\r\n  const [monthlyTrendsData, setMonthlyTrendsData] = useState([]);\r\n  const [topVendors, setTopVendors] = useState([]);\r\n  const [totalAmountExclVAT, setTotalAmountExclVAT] = useState(0);\r\n  const [totalAmountInclVAT, setTotalAmountInclVAT] = useState(0);\r\n  const [totalVatAmount, setTotalVatAmount] = useState(0);\r\n  const [latePaymentFees, setLatePaymentFees] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setInvoicesData(data);\r\n      processInvoiceData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processInvoiceData = (data) => {\r\n    // Currency Distribution\r\n    const currencyCounts = data.reduce((acc, invoice) => {\r\n      acc[invoice.preferredCurrency] = (acc[invoice.preferredCurrency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Payment Terms Distribution\r\n    const paymentTermsCounts = data.reduce((acc, invoice) => {\r\n      acc[invoice.paymentTerms] = (acc[invoice.paymentTerms] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setPaymentTermsDistribution(Object.keys(paymentTermsCounts).map(key => ({\r\n      name: key,\r\n      y: paymentTermsCounts[key],\r\n    })));\r\n\r\n    // Monthly Trends Data (based on 'issuedAt')\r\n    const trendCounts = data.reduce((acc, invoice) => {\r\n      const month = new Date(invoice.issuedAt).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setMonthlyTrendsData(Object.keys(trendCounts).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: trendCounts[key],\r\n    })));\r\n\r\n    // Total Amounts Excluding and Including VAT\r\n    const totals = data.reduce(\r\n      (acc, invoice) => {\r\n        acc.exclVAT += Number(invoice.totalAmountExclVAT) || 0;\r\n        acc.inclVAT += Number(invoice.totalAmountInclVAT) || 0;\r\n        acc.vatAmount += Number(invoice.vatAmount) || 0;\r\n        acc.lateFees += Number(invoice.latePaymentFee) || 0;\r\n        acc.ecoContribution += Number(invoice.ecoContribution) || 0;\r\n        return acc;\r\n      },\r\n      { exclVAT: 0, inclVAT: 0, vatAmount: 0, lateFees: 0, ecoContribution: 0 }\r\n    );\r\n\r\n    setTotalAmountExclVAT(totals.exclVAT);\r\n    setTotalAmountInclVAT(totals.inclVAT);\r\n    setTotalVatAmount(totals.vatAmount);\r\n    setLatePaymentFees(totals.lateFees);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n\r\n    // Top 5 Vendors by Total Amount Excluding VAT\r\n    const topVendorsList = data\r\n      .sort((a, b) => Number(b.totalAmountExclVAT) - Number(a.totalAmountExclVAT))\r\n      .slice(0, 5);\r\n    setTopVendors(topVendorsList);\r\n  };\r\n\r\n  const currencyChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Currency Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Currencies',\r\n        colorByPoint: true,\r\n        data: currencyDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const paymentTermsChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Payment Terms Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Payment Terms',\r\n        data: paymentTermsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const monthlyTrendsChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Monthly Invoice Trends',\r\n    },\r\n    xAxis: {\r\n      categories: monthlyTrendsData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Number of Invoices',\r\n        data: monthlyTrendsData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Vendor Invoice Analysis Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Amount (Excl. VAT)</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalAmountExclVAT.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Total value of all invoices excluding VAT.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Amount (Incl. VAT)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalAmountInclVAT.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Total value of all invoices including VAT.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">VAT Total</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalVatAmount.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Total VAT amount across all invoices.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution Total</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Total Eco contribution across all invoices (specific to French regulations).\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Late Payment Fees</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${latePaymentFees.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Total late payment fees across all invoices.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Top 5 Vendors by Total Amount (Excl. VAT)</Typography>\r\n                <ol>\r\n                  {topVendors.map(invoice => (\r\n                    <li key={invoice.invoiceId}>\r\n                      <Typography variant=\"body2\">\r\n                        {invoice.providerDetails} - Value: ${Number(invoice.totalAmountExclVAT).toFixed(2)}\r\n                      </Typography>\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={paymentTermsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={monthlyTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["VendorInvoiceAnalysisDashboard","_ref","fetchItems","invoicesData","setInvoicesData","useState","currencyDistribution","setCurrencyDistribution","paymentTermsDistribution","setPaymentTermsDistribution","monthlyTrendsData","setMonthlyTrendsData","topVendors","setTopVendors","totalAmountExclVAT","setTotalAmountExclVAT","totalAmountInclVAT","setTotalAmountInclVAT","totalVatAmount","setTotalVatAmount","latePaymentFees","setLatePaymentFees","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processInvoiceData","fetchData","currencyCounts","reduce","acc","invoice","preferredCurrency","Object","keys","map","key","name","y","paymentTermsCounts","paymentTerms","trendCounts","month","Date","issuedAt","getMonth","totals","exclVAT","Number","inclVAT","vatAmount","lateFees","latePaymentFee","ecoContribution","topVendorsList","sort","a","b","slice","currencyChartOptions","chart","type","title","text","series","colorByPoint","paymentTermsChartOptions","monthlyTrendsChartOptions","xAxis","categories","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","providerDetails","invoiceId","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}