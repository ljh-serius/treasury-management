{"version":3,"file":"static/js/89164.140cf827.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Invoices/InvoiceTemplates.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function InvoiceTemplatesDashboard({ fetchItems }) {\r\n  const [templateData, setTemplateData] = useState([]);\r\n  const [templateTypeDistribution, setTemplateTypeDistribution] = useState([]);\r\n  const [totalTemplates, setTotalTemplates] = useState(0);\r\n  const [recurringTemplates, setRecurringTemplates] = useState(0);\r\n  const [oneTimeTemplates, setOneTimeTemplates] = useState(0);\r\n  const [lastModifiedTemplates, setLastModifiedTemplates] = useState([]);\r\n  const [revenueContribution, setRevenueContribution] = useState([]);\r\n  const [createdByDistribution, setCreatedByDistribution] = useState([]);\r\n  const [averageTemplateRevenue, setAverageTemplateRevenue] = useState(0);\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setTemplateData(data);\r\n      processTemplateData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processTemplateData = (data) => {\r\n    // Total Templates\r\n    setTotalTemplates(data.length);\r\n\r\n    // Count Recurring and One-time Templates\r\n    const recurring = data.filter(template => template.tags.includes('recurring')).length;\r\n    const oneTime = data.filter(template => template.tags.includes('one-time')).length;\r\n    setRecurringTemplates(recurring);\r\n    setOneTimeTemplates(oneTime);\r\n\r\n    // Last Modified Templates (last 30 days)\r\n    const recentTemplates = data.filter(template => new Date(template.lastModifiedDate) > new Date(Date.now() - 30 * 24 * 60 * 60 * 1000));\r\n    setLastModifiedTemplates(recentTemplates.length);\r\n\r\n    // Revenue Contribution by Template\r\n    const revenueData = data.map(template => ({\r\n      name: template.templateName,\r\n      y: Number(template.revenueContribution),\r\n    }));\r\n    setRevenueContribution(revenueData);\r\n\r\n    // Total and Average Revenue\r\n    const totalRev = revenueData.reduce((acc, curr) => acc + curr.y, 0);\r\n    setTotalRevenue(totalRev);\r\n    setAverageTemplateRevenue(totalRev / data.length);\r\n\r\n    // Created By Distribution\r\n    const createdByCounts = data.reduce((acc, template) => {\r\n      acc[template.createdBy] = (acc[template.createdBy] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setCreatedByDistribution(Object.keys(createdByCounts).map(key => ({\r\n      name: key,\r\n      y: createdByCounts[key],\r\n    })));\r\n\r\n    // Template Type Distribution\r\n    const typeCounts = {\r\n      'Recurring Templates': recurring,\r\n      'One-time Templates': oneTime,\r\n    };\r\n    setTemplateTypeDistribution(Object.keys(typeCounts).map(key => ({\r\n      name: key,\r\n      y: typeCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options\r\n  const templateTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Template Type Distribution' },\r\n    series: [{\r\n      name: 'Template Types',\r\n      colorByPoint: true,\r\n      data: templateTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  const revenueChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Revenue Contribution by Template' },\r\n    series: [{\r\n      name: 'Revenue',\r\n      data: revenueContribution,\r\n    }],\r\n  };\r\n\r\n  const createdByChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Templates Created by User' },\r\n    series: [{\r\n      name: 'Created By',\r\n      colorByPoint: true,\r\n      data: createdByDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Invoice Templates Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Templates</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalTemplates}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Recurring Templates</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {recurringTemplates}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">One-time Templates</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {oneTimeTemplates}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Last Modified in 30 Days</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {lastModifiedTemplates}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Revenue from Templates</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalRevenue.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Revenue per Template</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageTemplateRevenue.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Template Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={templateTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Revenue Contribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={revenueChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Created By Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={createdByChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["InvoiceTemplatesDashboard","_ref","fetchItems","templateData","setTemplateData","useState","templateTypeDistribution","setTemplateTypeDistribution","totalTemplates","setTotalTemplates","recurringTemplates","setRecurringTemplates","oneTimeTemplates","setOneTimeTemplates","lastModifiedTemplates","setLastModifiedTemplates","revenueContribution","setRevenueContribution","createdByDistribution","setCreatedByDistribution","averageTemplateRevenue","setAverageTemplateRevenue","totalRevenue","setTotalRevenue","loading","setLoading","useEffect","async","data","processTemplateData","fetchDataAsync","length","recurring","filter","template","tags","includes","oneTime","recentTemplates","Date","lastModifiedDate","now","revenueData","map","name","templateName","y","Number","totalRev","reduce","acc","curr","createdByCounts","createdBy","Object","keys","key","typeCounts","templateTypeChartOptions","chart","type","title","text","series","colorByPoint","revenueChartOptions","createdByChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}