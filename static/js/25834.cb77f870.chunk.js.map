{"version":3,"file":"static/js/25834.cb77f870.chunk.js","mappings":"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","sources":["pages/Analysis/CorporateSocialResponsibility/CommunityOutreach/CommunityInvestment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst CommunityInvestmentAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response || []); // Ensure data is an array\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // KPIs\r\n  const totalInvestment = data.reduce((sum, record) => sum + Number(record.investmentAmount), 0);\r\n  const ongoingProjects = data.filter((record) => record.status === 'ongoing').length;\r\n  const completedProjects = data.filter((record) => record.status === 'completed').length;\r\n\r\n  // Community Benefited Distribution\r\n  const communityMap = data.reduce((acc, record) => {\r\n    acc[record.communityBenefited] = (acc[record.communityBenefited] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const communityDistribution = Object.keys(communityMap).map(community => ({\r\n    name: community,\r\n    y: communityMap[community],\r\n  }));\r\n\r\n  // Highcharts options for Community Benefited Distribution\r\n  const communityChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Community Benefited Distribution' },\r\n    series: [{\r\n      name: 'Communities',\r\n      colorByPoint: true,\r\n      data: communityDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Investment over Time\r\n  const investmentChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Investment Over Time' },\r\n    xAxis: {\r\n      categories: data.map(record => new Date(record.startDate).getFullYear()),\r\n      title: { text: 'Year' }\r\n    },\r\n    yAxis: { title: { text: 'Investment Amount' } },\r\n    series: [{\r\n      name: 'Investment Amount',\r\n      data: data.map(record => record.investmentAmount),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Investment Amount</Typography>\r\n          <Typography variant=\"h4\">${totalInvestment.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Ongoing Projects</Typography>\r\n          <Typography variant=\"h4\">{ongoingProjects}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Completed Projects</Typography>\r\n          <Typography variant=\"h4\">{completedProjects}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={communityChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={investmentChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{record.projectName}:</Typography>\r\n              {Array.isArray(record.tags) ? record.tags.map((tag, tagIndex) => (\r\n                <Chip key={tagIndex} label={tag.label} style={{ margin: '5px' }} />\r\n              )) : 'No Tags'}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CommunityInvestmentAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalInvestment","reduce","sum","record","Number","investmentAmount","ongoingProjects","filter","status","length","completedProjects","communityMap","acc","communityBenefited","communityChartOptions","chart","type","title","text","series","name","colorByPoint","Object","keys","map","community","y","investmentChartOptions","xAxis","categories","Date","startDate","getFullYear","yAxis","_jsxs","Grid","container","spacing","item","xs","md","Card","variant","gutterBottom","toFixed","HighchartsReact","highcharts","Highcharts","options","index","projectName","Array","isArray","tags","tag","tagIndex","Chip","label","style","margin"],"sourceRoot":""}