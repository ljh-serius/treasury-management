{"version":3,"file":"static/js/17095.ab1cd834.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Opportunities/OpportunityStages.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function OpportunityStagesDashboard({ fetchData }) {\r\n  const [stageData, setStageData] = useState([]);\r\n  const [totalStages, setTotalStages] = useState(0);\r\n  const [stagesInProgress, setStagesInProgress] = useState(0);\r\n  const [completedStages, setCompletedStages] = useState(0);\r\n  const [stageDistribution, setStageDistribution] = useState([]);\r\n  const [stageOrderTrends, setStageOrderTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setStageData(data);\r\n      processStageData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processStageData = (data) => {\r\n    // Total Stages\r\n    setTotalStages(data.length);\r\n\r\n    // Count Stages In Progress and Completed Stages\r\n    const inProgress = data.filter(stage => stage.tags.includes('in-progress')).length;\r\n    const completed = data.filter(stage => stage.tags.includes('completed')).length;\r\n    setStagesInProgress(inProgress);\r\n    setCompletedStages(completed);\r\n\r\n    // Stage Distribution for Pie Chart\r\n    const stageCounts = data.reduce((acc, stage) => {\r\n      acc[stage.stageName] = (acc[stage.stageName] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStageDistribution(Object.keys(stageCounts).map(key => ({\r\n      name: key,\r\n      y: stageCounts[key],\r\n    })));\r\n\r\n    // Stage Order Trends\r\n    const orderTrends = data.map(stage => ({\r\n      order: stage.stageOrder,\r\n      name: stage.stageName,\r\n    })).sort((a, b) => a.order - b.order);\r\n    setStageOrderTrends(orderTrends);\r\n  };\r\n\r\n  // Highcharts options for Stage Distribution\r\n  const stageDistributionChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Stage Distribution' },\r\n    series: [{\r\n      name: 'Stages',\r\n      colorByPoint: true,\r\n      data: stageDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Stage Order Trends\r\n  const stageOrderChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Stage Order Trends' },\r\n    xAxis: { title: { text: 'Order' } },\r\n    yAxis: { title: { text: 'Stage Name' } },\r\n    series: [{\r\n      name: 'Stages by Order',\r\n      data: stageOrderTrends.map(item => [item.order, item.name]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Opportunity Stages Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Stages</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalStages}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Stages In Progress</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {stagesInProgress}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Completed Stages</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {completedStages}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Stage Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={stageDistributionChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Stage Order Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={stageOrderChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["OpportunityStagesDashboard","_ref","fetchData","stageData","setStageData","useState","totalStages","setTotalStages","stagesInProgress","setStagesInProgress","completedStages","setCompletedStages","stageDistribution","setStageDistribution","stageOrderTrends","setStageOrderTrends","loading","setLoading","useEffect","async","data","processStageData","fetchDataAsync","length","inProgress","filter","stage","tags","includes","completed","stageCounts","reduce","acc","stageName","Object","keys","map","key","name","y","orderTrends","order","stageOrder","sort","a","b","stageDistributionChartOptions","chart","type","title","text","series","colorByPoint","stageOrderChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}