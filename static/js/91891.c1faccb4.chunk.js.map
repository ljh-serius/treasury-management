{"version":3,"file":"static/js/91891.c1faccb4.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Invoices/RecurringInvoices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function RecurringInvoicesDashboard({ fetchData }) {\r\n  const [invoiceData, setInvoiceData] = useState([]);\r\n  const [totalInvoices, setTotalInvoices] = useState(0);\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n  const [monthlyInvoices, setMonthlyInvoices] = useState(0);\r\n  const [quarterlyInvoices, setQuarterlyInvoices] = useState(0);\r\n  const [annuallyInvoices, setAnnuallyInvoices] = useState(0);\r\n  const [frequencyDistribution, setFrequencyDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setInvoiceData(data);\r\n      processInvoiceData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processInvoiceData = (data) => {\r\n    // Total Invoices\r\n    setTotalInvoices(data.length);\r\n\r\n    // Total Revenue\r\n    const totalAmount = data.reduce((acc, invoice) => acc + Number(invoice.amount), 0);\r\n    setTotalRevenue(totalAmount);\r\n\r\n    // Count Monthly, Quarterly, and Annually Invoices\r\n    const monthly = data.filter(invoice => invoice.frequency === 'monthly').length;\r\n    const quarterly = data.filter(invoice => invoice.frequency === 'quarterly').length;\r\n    const annually = data.filter(invoice => invoice.frequency === 'annually').length;\r\n    setMonthlyInvoices(monthly);\r\n    setQuarterlyInvoices(quarterly);\r\n    setAnnuallyInvoices(annually);\r\n\r\n    // Frequency Distribution for Pie Chart\r\n    setFrequencyDistribution([\r\n      { name: 'Monthly', y: monthly },\r\n      { name: 'Quarterly', y: quarterly },\r\n      { name: 'Annually', y: annually },\r\n    ]);\r\n  };\r\n\r\n  // Highcharts options for Frequency Distribution\r\n  const frequencyChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Invoice Frequency Distribution' },\r\n    series: [{\r\n      name: 'Invoices',\r\n      colorByPoint: true,\r\n      data: frequencyDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Recurring Invoices Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Recurring Invoices</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalInvoices}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Revenue from Recurring Invoices</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalRevenue.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Monthly Invoices</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {monthlyInvoices}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Quarterly Invoices</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {quarterlyInvoices}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Annually Invoices</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {annuallyInvoices}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Frequency Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={frequencyChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["RecurringInvoicesDashboard","_ref","fetchData","invoiceData","setInvoiceData","useState","totalInvoices","setTotalInvoices","totalRevenue","setTotalRevenue","monthlyInvoices","setMonthlyInvoices","quarterlyInvoices","setQuarterlyInvoices","annuallyInvoices","setAnnuallyInvoices","frequencyDistribution","setFrequencyDistribution","loading","setLoading","useEffect","async","data","processInvoiceData","fetchDataAsync","length","totalAmount","reduce","acc","invoice","Number","amount","monthly","filter","frequency","quarterly","annually","name","y","frequencyChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}