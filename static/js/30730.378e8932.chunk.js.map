{"version":3,"file":"static/js/30730.378e8932.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/SustainabilityReports/EnergyConsumption.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function EnergyConsumptionDashboard({ fetchItems }) {\r\n  const [energyData, setEnergyData] = useState([]);\r\n  const [totalConsumption, setTotalConsumption] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [energyTypeDistribution, setEnergyTypeDistribution] = useState([]);\r\n  const [reductionTrends, setReductionTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setEnergyData(data);\r\n      processEnergyData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processEnergyData = (data) => {\r\n    // Total Energy Consumption and Cost\r\n    const totalEnergy = data.reduce((acc, record) => acc + Number(record.totalConsumption), 0);\r\n    const totalCostAmount = data.reduce((acc, record) => acc + Number(record.cost), 0);\r\n    setTotalConsumption(totalEnergy);\r\n    setTotalCost(totalCostAmount);\r\n\r\n    // Energy Type Distribution for Pie Chart\r\n    const energyTypeCounts = data.reduce((acc, record) => {\r\n      acc[record.energyType] = (acc[record.energyType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setEnergyTypeDistribution(Object.keys(energyTypeCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: energyTypeCounts[key],\r\n    })));\r\n\r\n    // Reduction Trends (Achieved vs Target) for Line Chart\r\n    const reductionData = data.map(record => ({\r\n      date: new Date(record.year).getTime(),\r\n      target: Number(record.reductionTarget),\r\n      achieved: Number(record.achievedReduction),\r\n    }));\r\n    setReductionTrends(reductionData);\r\n  };\r\n\r\n  // Highcharts options for Energy Type Distribution\r\n  const energyTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Energy Type Distribution' },\r\n    series: [{\r\n      name: 'Energy Types',\r\n      colorByPoint: true,\r\n      data: energyTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Reduction Trends (Achieved vs Target)\r\n  const reductionTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Reduction Target vs Achieved' },\r\n    xAxis: { type: 'datetime', title: { text: 'Year' } },\r\n    yAxis: { title: { text: 'Reduction (%)' } },\r\n    series: [\r\n      {\r\n        name: 'Target Reduction (%)',\r\n        data: reductionTrends.map(item => [item.date, item.target]),\r\n      },\r\n      {\r\n        name: 'Achieved Reduction (%)',\r\n        data: reductionTrends.map(item => [item.date, item.achieved]),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Energy Consumption Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Consumption (MWh)</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalConsumption.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Cost ($)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalCost.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Energy Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={energyTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Reduction Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={reductionTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["EnergyConsumptionDashboard","_ref","fetchItems","energyData","setEnergyData","useState","totalConsumption","setTotalConsumption","totalCost","setTotalCost","energyTypeDistribution","setEnergyTypeDistribution","reductionTrends","setReductionTrends","loading","setLoading","useEffect","async","data","processEnergyData","fetchDataAsync","totalEnergy","reduce","acc","record","Number","totalCostAmount","cost","energyTypeCounts","energyType","Object","keys","map","key","name","charAt","toUpperCase","slice","y","reductionData","date","Date","year","getTime","target","reductionTarget","achieved","achievedReduction","energyTypeChartOptions","chart","type","title","text","series","colorByPoint","reductionTrendChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}