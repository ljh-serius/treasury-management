{"version":3,"file":"static/js/90216.65008147.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/SustainabilityReports/CarbonFootprintTracking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function CarbonFootprintDashboard({ fetchItems }) {\r\n  const [emissionsData, setEmissionsData] = useState([]);\r\n  const [scope1Total, setScope1Total] = useState(0);\r\n  const [scope2Total, setScope2Total] = useState(0);\r\n  const [scope3Total, setScope3Total] = useState(0);\r\n  const [totalEmissions, setTotalEmissions] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setEmissionsData(data);\r\n      processEmissionsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processEmissionsData = (data) => {\r\n    // Calculate total emissions for each scope\r\n    const totals = data.reduce(\r\n      (acc, record) => {\r\n        acc.scope1 += Number(record.scope1Emissions) || 0;\r\n        acc.scope2 += Number(record.scope2Emissions) || 0;\r\n        acc.scope3 += Number(record.scope3Emissions) || 0;\r\n        acc.totalEmissions += Number(record.totalEmissions) || 0;\r\n        return acc;\r\n      },\r\n      { scope1: 0, scope2: 0, scope3: 0, totalEmissions: 0 }\r\n    );\r\n\r\n    setScope1Total(totals.scope1);\r\n    setScope2Total(totals.scope2);\r\n    setScope3Total(totals.scope3);\r\n    setTotalEmissions(totals.totalEmissions);\r\n  };\r\n\r\n  const emissionsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Total Emissions Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Emissions',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Scope 1 Emissions', y: scope1Total },\r\n          { name: 'Scope 2 Emissions', y: scope2Total },\r\n          { name: 'Scope 3 Emissions', y: scope3Total },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Carbon Footprint Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* Total Number of Records */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Records</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {emissionsData.length}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total number of carbon footprint records tracked.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Emissions (tons CO2e)</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEmissions.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total emissions across all scopes (Scope 1, 2, 3).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={emissionsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CarbonFootprintDashboard","_ref","fetchItems","emissionsData","setEmissionsData","useState","scope1Total","setScope1Total","scope2Total","setScope2Total","scope3Total","setScope3Total","totalEmissions","setTotalEmissions","loading","setLoading","useEffect","async","data","processEmissionsData","fetchData","totals","reduce","acc","record","scope1","Number","scope1Emissions","scope2","scope2Emissions","scope3","scope3Emissions","emissionsChartOptions","chart","type","title","text","series","name","colorByPoint","y","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","length","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}