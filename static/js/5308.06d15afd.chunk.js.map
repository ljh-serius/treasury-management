{"version":3,"file":"static/js/5308.06d15afd.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Milestones/MilestoneCompletion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function MilestoneCompletionDashboard({ fetchItems }) {\r\n  const [completionData, setCompletionData] = useState([]);\r\n  const [totalMilestones, setTotalMilestones] = useState(0);\r\n  const [delayedMilestones, setDelayedMilestones] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [completionTrends, setCompletionTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setCompletionData(data);\r\n      processCompletionData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processCompletionData = (data) => {\r\n    // Total Milestones\r\n    setTotalMilestones(data.length);\r\n\r\n    // Count Delayed Milestones\r\n    const delayed = data.filter(item => item.status === 'delayed').length;\r\n    setDelayedMilestones(delayed);\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, item) => {\r\n      acc[item.status] = (acc[item.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Completion Trends for Line Chart\r\n    const trendData = data.map(item => ({\r\n      date: new Date(item.completionDate).getTime(),\r\n      status: item.status,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setCompletionTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Milestone Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Completion Trends\r\n  const completionTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Milestone Completion Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Completion Date' } },\r\n    yAxis: { title: { text: 'Milestone Status' } },\r\n    series: [{\r\n      name: 'Completion Date',\r\n      data: completionTrends.map(item => [item.date]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Milestone Completion Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Milestones</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalMilestones}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Delayed Milestones</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {delayedMilestones}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Completion Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={completionTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["MilestoneCompletionDashboard","_ref","fetchItems","completionData","setCompletionData","useState","totalMilestones","setTotalMilestones","delayedMilestones","setDelayedMilestones","statusDistribution","setStatusDistribution","completionTrends","setCompletionTrends","loading","setLoading","useEffect","async","data","processCompletionData","fetchDataAsync","length","delayed","filter","item","status","statusCounts","reduce","acc","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","date","Date","completionDate","getTime","sort","a","b","statusChartOptions","chart","type","title","text","series","colorByPoint","completionTrendChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}