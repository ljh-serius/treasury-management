{"version":3,"file":"static/js/409.3f0e7d3a.chunk.js","mappings":"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","sources":["pages/Analysis/RealEstatePropertyManagement/Buildings/PropertyTaxes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function PropertyTaxesDashboard({ fetchItems }) {\r\n  const [taxData, setTaxData] = useState([]);\r\n  const [totalTaxesDue, setTotalTaxesDue] = useState(0);\r\n  const [pendingPayments, setPendingPayments] = useState(0);\r\n  const [overduePayments, setOverduePayments] = useState(0);\r\n  const [paymentStatusDistribution, setPaymentStatusDistribution] = useState([]);\r\n  const [taxAmountTrends, setTaxAmountTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setTaxData(data);\r\n      processTaxData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processTaxData = (data) => {\r\n    // Total Taxes Due\r\n    const totalDue = data.reduce((acc, tax) => acc + Number(tax.amountDue), 0);\r\n    setTotalTaxesDue(totalDue);\r\n\r\n    // Count Pending and Overdue Payments\r\n    const pending = data.filter(tax => tax.paymentStatus === 'pending').length;\r\n    const overdue = data.filter(tax => tax.paymentStatus === 'overdue').length;\r\n    setPendingPayments(pending);\r\n    setOverduePayments(overdue);\r\n\r\n    // Payment Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, tax) => {\r\n      acc[tax.paymentStatus] = (acc[tax.paymentStatus] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setPaymentStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Tax Amount Trends for Line Chart\r\n    const trends = data.map(tax => ({\r\n      date: new Date(tax.taxYear).getTime(),\r\n      value: Number(tax.amountDue),\r\n    }));\r\n    setTaxAmountTrends(trends);\r\n  };\r\n\r\n  // Highcharts options for Payment Status Distribution\r\n  const paymentStatusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Payment Status Distribution' },\r\n    series: [{\r\n      name: 'Payment Status',\r\n      colorByPoint: true,\r\n      data: paymentStatusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Tax Amount Trends\r\n  const taxAmountTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Tax Amount Trends by Year' },\r\n    xAxis: { type: 'datetime', title: { text: 'Year' } },\r\n    yAxis: { title: { text: 'Amount Due' } },\r\n    series: [{\r\n      name: 'Amount Due',\r\n      data: taxAmountTrends.map(item => [item.date, item.value]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Property Taxes Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Taxes Due</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalTaxesDue.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Pending Payments</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {pendingPayments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Overdue Payments</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {overduePayments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Payment Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={paymentStatusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Tax Amount Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={taxAmountTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["PropertyTaxesDashboard","_ref","fetchItems","taxData","setTaxData","useState","totalTaxesDue","setTotalTaxesDue","pendingPayments","setPendingPayments","overduePayments","setOverduePayments","paymentStatusDistribution","setPaymentStatusDistribution","taxAmountTrends","setTaxAmountTrends","loading","setLoading","useEffect","async","data","processTaxData","fetchDataAsync","totalDue","reduce","acc","tax","Number","amountDue","pending","filter","paymentStatus","length","overdue","statusCounts","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trends","date","Date","taxYear","getTime","value","paymentStatusChartOptions","chart","type","title","text","series","colorByPoint","taxAmountTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}