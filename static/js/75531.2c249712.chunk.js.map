{"version":3,"file":"static/js/75531.2c249712.chunk.js","mappings":"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","sources":["pages/Analysis/GovernanceStrategy/KpisAnalytics/Benchmarking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function BenchmarkingDashboard({ fetchItems }) {\r\n  const [benchmarkData, setBenchmarkData] = useState([]);\r\n  const [totalBenchmarks, setTotalBenchmarks] = useState(0);\r\n  const [industryStandardDistribution, setIndustryStandardDistribution] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setBenchmarkData(data);\r\n      processBenchmarkData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processBenchmarkData = (data) => {\r\n    setTotalBenchmarks(data.length);\r\n\r\n    const industryMap = {};\r\n    const tagsMap = {};\r\n\r\n    data.forEach((item) => {\r\n      // Process industry standard distribution\r\n      const industry = item.industryStandard;\r\n      industryMap[industry] = (industryMap[industry] || 0) + 1;\r\n\r\n      // Process tags distribution\r\n      item.tags.forEach(tag => {\r\n        tagsMap[tag] = (tagsMap[tag] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    const industryArray = Object.entries(industryMap).map(([industry, count]) => ({\r\n      name: industry,\r\n      y: count,\r\n    }));\r\n\r\n    const tagsArray = Object.entries(tagsMap).map(([tag, count]) => ({\r\n      name: tag,\r\n      y: count,\r\n    }));\r\n\r\n    setIndustryStandardDistribution(industryArray);\r\n    setTagsDistribution(tagsArray);\r\n  };\r\n\r\n  // Highcharts options for Industry Standard Distribution\r\n  const industryChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Industry Standard Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Industry Standard',\r\n        colorByPoint: true,\r\n        data: industryStandardDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for Tags Distribution\r\n  const tagsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tags Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        colorByPoint: true,\r\n        data: tagsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Benchmarking Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Benchmarks</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalBenchmarks}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Industry Standard Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={industryChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Tags Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["BenchmarkingDashboard","_ref","fetchItems","benchmarkData","setBenchmarkData","useState","totalBenchmarks","setTotalBenchmarks","industryStandardDistribution","setIndustryStandardDistribution","tagsDistribution","setTagsDistribution","loading","setLoading","useEffect","async","data","processBenchmarkData","fetchData","length","industryMap","tagsMap","forEach","item","industry","industryStandard","tags","tag","industryArray","Object","entries","map","_ref2","count","name","y","tagsArray","_ref3","industryChartOptions","chart","type","title","text","series","colorByPoint","tagsChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}