{"version":3,"file":"static/js/95222.4ba5cdde.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/Budget/VarianceAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function VarianceAnalysisDashboard({ fetchItems }) {\r\n  const [varianceData, setVarianceData] = useState([]);\r\n  const [varianceDistribution, setVarianceDistribution] = useState([]);\r\n  const [totalBudgetedAmount, setTotalBudgetedAmount] = useState(0);\r\n  const [totalActualAmount, setTotalActualAmount] = useState(0);\r\n  const [totalVarianceAmount, setTotalVarianceAmount] = useState(0);\r\n  const [variancePercentage, setVariancePercentage] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setVarianceData(data);\r\n      processVarianceData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processVarianceData = (data) => {\r\n    // Variance Distribution\r\n    const varianceCounts = data.reduce((acc, variance) => {\r\n      const varianceAmt = Number(variance.varianceAmount);\r\n      acc[varianceAmt] = (acc[varianceAmt] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setVarianceDistribution(Object.keys(varianceCounts).map(key => ({\r\n      name: `Variance: ${key}`,\r\n      y: varianceCounts[key],\r\n    })));\r\n\r\n    // Total Budgeted, Actual, and Variance Amounts\r\n    const totals = data.reduce(\r\n      (acc, variance) => {\r\n        acc.budgetedAmount += Number(variance.budgetedAmount) || 0;\r\n        acc.actualAmount += Number(variance.actualAmount) || 0;\r\n        acc.varianceAmount += Number(variance.varianceAmount) || 0;\r\n        acc.ecoContribution += Number(variance.ecoContribution) || 0;\r\n        acc.variancePercentage += Number(variance.variancePercentage) || 0;\r\n        return acc;\r\n      },\r\n      { budgetedAmount: 0, actualAmount: 0, varianceAmount: 0, ecoContribution: 0, variancePercentage: 0 }\r\n    );\r\n\r\n    setTotalBudgetedAmount(totals.budgetedAmount);\r\n    setTotalActualAmount(totals.actualAmount);\r\n    setTotalVarianceAmount(totals.varianceAmount);\r\n    setVariancePercentage(totals.variancePercentage / data.length);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n  };\r\n\r\n  const varianceChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Variance Distribution' },\r\n    series: [{ name: 'Variance Amount', data: varianceDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Variance Analysis Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Budgeted Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalBudgetedAmount.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total budgeted amount across all departments.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Actual Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalActualAmount.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total actual amount across all departments.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Variance Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalVarianceAmount.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total variance across all departments.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={varianceChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["VarianceAnalysisDashboard","_ref","fetchItems","varianceData","setVarianceData","useState","varianceDistribution","setVarianceDistribution","totalBudgetedAmount","setTotalBudgetedAmount","totalActualAmount","setTotalActualAmount","totalVarianceAmount","setTotalVarianceAmount","variancePercentage","setVariancePercentage","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processVarianceData","fetchData","varianceCounts","reduce","acc","variance","varianceAmt","Number","varianceAmount","Object","keys","map","key","name","y","totals","budgetedAmount","actualAmount","ecoContribution","length","varianceChartOptions","chart","type","title","text","series","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}