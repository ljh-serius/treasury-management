{"version":3,"file":"static/js/57003.730bb6d5.chunk.js","mappings":"wTAOe,SAASA,EAA0BC,GAAkB,IAAjB,WAAEC,GAAYD,EAC/D,MAAOE,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,KACtDG,EAAsBC,IAA2BJ,EAAAA,EAAAA,UAAS,IAC1DK,EAAsBC,IAA2BN,EAAAA,EAAAA,UAAS,IAC1DO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,IACxCS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IAEvCW,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAahB,IACnBE,EAAmBc,GACnBC,EAAuBD,GACvBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAAClB,IAEJ,MAAMiB,EAA0BD,IAE9B,MAAMG,EAAeH,EAAKI,QAAO,CAACC,EAAKC,KACrCD,EAAIC,EAAWC,SAAWF,EAAIC,EAAWC,SAAW,GAAK,EAClDF,IACN,CAAC,GAEJhB,EAAsBmB,OAAOC,KAAKN,GAAcO,KAAIC,IAAG,CACrDC,KAAMD,EACNE,EAAGV,EAAaQ,QAIlB,MAAMG,EAASd,EAAKI,QAClB,CAACC,EAAKC,KACJD,EAAIU,YAAcC,OAAOV,EAAWW,eAAiB,EACrDZ,EAAIa,iBAAmBF,OAAOV,EAAWY,kBAAoB,EAC7Db,EAAIX,aAAesB,OAAOV,EAAWa,aAAe,EAC7Cd,IAET,CAAEU,WAAY,EAAGG,gBAAiB,EAAGxB,YAAa,IAGpDH,EAAwBuB,EAAOC,YAC/BtB,EAAwBqB,EAAOI,iBAC/BvB,EAAemB,EAAOpB,YAAY,EAG9B0B,EAAqB,CACzBC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,kCACfC,OAAQ,CAAC,CAAEb,KAAM,cAAec,cAAc,EAAM1B,KAAMZ,KAG5D,OACEuC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAM5C,EAAQqC,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,kCAGtCN,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,SAAA,EAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,4BACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEyB,WAAY,QAAStB,SAAA,CAAC,IAC/D3C,EAAqBkE,QAAQ,OAEjCtB,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAOZ,SAAC,oDAIlCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,uBACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,OAAON,GAAI,CAAEyB,WAAY,QAAStB,SAC9DvC,KAEHwC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAOZ,SAAC,sDAIlCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,sBACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,SAASN,GAAI,CAAEyB,WAAY,QAAStB,SAAA,CAAC,IAChEzC,EAAqBgE,QAAQ,OAEjCtB,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAOZ,SAAC,2DAMlCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAASxC,cAM9D,C","sources":["pages/Analysis/FinancialManagement/Investments/EquityInvestments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function EquityInvestmentsDashboard({ fetchItems }) {\r\n  const [investmentsData, setInvestmentsData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [totalInvestmentValue, setTotalInvestmentValue] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [totalShares, setTotalShares] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setInvestmentsData(data);\r\n      processInvestmentsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processInvestmentsData = (data) => {\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, investment) => {\r\n      acc[investment.status] = (acc[investment.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total Investment Value and Eco Contribution\r\n    const totals = data.reduce(\r\n      (acc, investment) => {\r\n        acc.totalValue += Number(investment.currentValue) || 0;\r\n        acc.ecoContribution += Number(investment.ecoContribution) || 0;\r\n        acc.totalShares += Number(investment.sharesHeld) || 0;\r\n        return acc;\r\n      },\r\n      { totalValue: 0, ecoContribution: 0, totalShares: 0 }\r\n    );\r\n\r\n    setTotalInvestmentValue(totals.totalValue);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n    setTotalShares(totals.totalShares);\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Investment Status Distribution' },\r\n    series: [{ name: 'Investments', colorByPoint: true, data: statusDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Equity Investments Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Investment Value</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalInvestmentValue.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total current value of all investments.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Shares Held</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalShares}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total shares held across all investments.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["EquityInvestmentsDashboard","_ref","fetchItems","investmentsData","setInvestmentsData","useState","statusDistribution","setStatusDistribution","totalInvestmentValue","setTotalInvestmentValue","ecoContributionTotal","setEcoContributionTotal","totalShares","setTotalShares","loading","setLoading","useEffect","async","data","processInvestmentsData","fetchData","statusCounts","reduce","acc","investment","status","Object","keys","map","key","name","y","totals","totalValue","Number","currentValue","ecoContribution","sharesHeld","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}