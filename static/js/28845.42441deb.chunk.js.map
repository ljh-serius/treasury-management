{"version":3,"file":"static/js/28845.42441deb.chunk.js","mappings":"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","sources":["pages/Analysis/LogisticsSupplyChain/Shipping/FreightManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function FreightManagementDashboard({ fetchItems }) {\r\n  const [freightData, setFreightData] = useState([]);\r\n  const [totalFreight, setTotalFreight] = useState(0);\r\n  const [freightTypeDistribution, setFreightTypeDistribution] = useState([]);\r\n  const [costTrends, setCostTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setFreightData(data);\r\n      processFreightData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processFreightData = (data) => {\r\n    // Total Freight\r\n    setTotalFreight(data.length);\r\n  \r\n    // Freight Type Distribution for Pie Chart\r\n    const typeCounts = data.reduce((acc, freight) => {\r\n      acc[freight.freightType] = (acc[freight.freightType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setFreightTypeDistribution(Object.keys(typeCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: typeCounts[key],\r\n    })));\r\n  \r\n    // Cost Trends for Line Chart\r\n    const trendsData = data.map(freight => ({\r\n      date: new Date(freight.departureDate).getTime(), // Ensure date is a timestamp\r\n      amount: parseFloat(freight.cost), // Ensure cost is a number\r\n    })).sort((a, b) => a.date - b.date);\r\n    setCostTrends(trendsData);\r\n  };\r\n  \r\n  // Highcharts options for Cost Trends\r\n  const costChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Freight Cost Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Departure Date' } },\r\n    yAxis: { title: { text: 'Cost' } },\r\n    series: [{\r\n      name: 'Freight Cost',\r\n      data: costTrends.map(item => [item.date, item.amount]), // Properly formatted data for Highcharts\r\n    }],\r\n  };\r\n  \r\n  // Highcharts options for Freight Type Distribution\r\n  const freightTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Freight Type Distribution' },\r\n    series: [{\r\n      name: 'Freight Types',\r\n      colorByPoint: true,\r\n      data: freightTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Freight Management Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Freight Shipments</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalFreight}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Freight Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={freightTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Cost Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={costChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["FreightManagementDashboard","_ref","fetchItems","freightData","setFreightData","useState","totalFreight","setTotalFreight","freightTypeDistribution","setFreightTypeDistribution","costTrends","setCostTrends","loading","setLoading","useEffect","async","data","processFreightData","fetchData","length","typeCounts","reduce","acc","freight","freightType","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendsData","date","Date","departureDate","getTime","amount","parseFloat","cost","sort","a","b","costChartOptions","chart","type","title","text","xAxis","yAxis","series","item","freightTypeChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}