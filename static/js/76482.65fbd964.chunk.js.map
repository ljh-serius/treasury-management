{"version":3,"file":"static/js/76482.65fbd964.chunk.js","mappings":"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","sources":["pages/Analysis/RealEstatePropertyManagement/Buildings/PropertyDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function PropertyDashboard({ fetchItems }) {\r\n  const [propertyData, setPropertyData] = useState([]);\r\n  const [totalProperties, setTotalProperties] = useState(0);\r\n  const [totalSize, setTotalSize] = useState(0);\r\n  const [usageDistribution, setUsageDistribution] = useState([]);\r\n  const [sizeTrends, setSizeTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPropertyData(data);\r\n      processPropertyData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processPropertyData = (data) => {\r\n    // Total Properties\r\n    setTotalProperties(data.length);\r\n\r\n    // Total Size of Properties\r\n    const totalPropertySize = data.reduce((acc, property) => acc + Number(property.size), 0);\r\n    setTotalSize(totalPropertySize);\r\n\r\n    // Property Usage Distribution for Pie Chart\r\n    const usageCounts = data.reduce((acc, property) => {\r\n      acc[property.usage] = (acc[property.usage] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setUsageDistribution(Object.keys(usageCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: usageCounts[key],\r\n    })));\r\n\r\n    // Property Size Trends for Line Chart\r\n    const sizeData = data.map(property => ({\r\n      name: property.propertyName,\r\n      y: Number(property.size),\r\n    }));\r\n    setSizeTrends(sizeData);\r\n  };\r\n\r\n  // Highcharts options for Usage Distribution\r\n  const usageChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Property Usage Distribution' },\r\n    series: [{\r\n      name: 'Usage',\r\n      colorByPoint: true,\r\n      data: usageDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Property Size Trends\r\n  const sizeChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Property Size Trends (sq ft)' },\r\n    series: [{\r\n      name: 'Size (sq ft)',\r\n      data: sizeTrends,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Property Details Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Properties</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalProperties}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Property Size (sq ft)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalSize.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Usage Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={usageChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Property Size Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={sizeChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["PropertyDashboard","_ref","fetchItems","propertyData","setPropertyData","useState","totalProperties","setTotalProperties","totalSize","setTotalSize","usageDistribution","setUsageDistribution","sizeTrends","setSizeTrends","loading","setLoading","useEffect","async","data","processPropertyData","fetchDataAsync","length","totalPropertySize","reduce","acc","property","Number","size","usageCounts","usage","Object","keys","map","key","name","charAt","toUpperCase","slice","y","sizeData","propertyName","usageChartOptions","chart","type","title","text","series","colorByPoint","sizeChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}