{"version":3,"file":"static/js/81627.09d31a4e.chunk.js","mappings":"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","sources":["pages/Analysis/CustomerSupport/Feedback/FeedbackAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst FeedbackAnalysis = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // KPIs\r\n  const totalFeedback = data.length;\r\n  const positiveFeedback = data.filter((item) => item.feedbackType === 'positive').length;\r\n  const negativeFeedback = data.filter((item) => item.feedbackType === 'negative').length;\r\n  const neutralFeedback = data.filter((item) => item.feedbackType === 'neutral').length;\r\n  const resolvedFeedback = data.filter((item) => item.resolutionStatus === 'resolved').length;\r\n\r\n  // Highcharts options for feedback type distribution\r\n  const feedbackTypeOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Feedback Type Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Feedback',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Positive', y: positiveFeedback },\r\n          { name: 'Neutral', y: neutralFeedback },\r\n          { name: 'Negative', y: negativeFeedback },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for resolution status distribution\r\n  const resolutionStatusOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Resolution Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Resolution Status',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Resolved', y: resolvedFeedback },\r\n          { name: 'Unresolved', y: totalFeedback - resolvedFeedback },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Feedback</Typography>\r\n          <Typography variant=\"h4\">{totalFeedback}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Positive Feedback</Typography>\r\n          <Typography variant=\"h4\">{positiveFeedback}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Negative Feedback</Typography>\r\n          <Typography variant=\"h4\">{negativeFeedback}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Resolved Feedback</Typography>\r\n          <Typography variant=\"h4\">{resolvedFeedback}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={feedbackTypeOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={resolutionStatusOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{`Feedback ${index + 1}:`}</Typography>\r\n              {record.tags.map((tag) => (\r\n                <Chip key={tag.id} label={tag.label} style={{ margin: '5px' }} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FeedbackAnalysis;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalFeedback","length","positiveFeedback","filter","item","feedbackType","negativeFeedback","neutralFeedback","resolvedFeedback","resolutionStatus","feedbackTypeOptions","chart","type","title","text","series","name","colorByPoint","y","resolutionStatusOptions","_jsxs","Grid","container","spacing","xs","md","Card","variant","gutterBottom","HighchartsReact","highcharts","Highcharts","options","map","record","index","tags","tag","Chip","label","style","margin","id"],"sourceRoot":""}