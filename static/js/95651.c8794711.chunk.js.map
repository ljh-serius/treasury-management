{"version":3,"file":"static/js/95651.c8794711.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/SalesOrders/Backorders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function BackorderDashboard({ fetchData }) {\r\n  const [backorderData, setBackorderData] = useState([]);\r\n  const [totalBackorders, setTotalBackorders] = useState(0);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [urgentBackorders, setUrgentBackorders] = useState(0);\r\n  const [backorderTrends, setBackorderTrends] = useState([]);\r\n  const [restockTimeline, setRestockTimeline] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setBackorderData(data);\r\n      processBackorderData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processBackorderData = (data) => {\r\n    // Total Backorders\r\n    setTotalBackorders(data.length);\r\n\r\n    // Total Quantity Backordered\r\n    const totalQty = data.reduce((acc, backorder) => acc + Number(backorder.quantity), 0);\r\n    setTotalQuantity(totalQty);\r\n\r\n    // Count Urgent Backorders\r\n    const urgent = data.filter(backorder => backorder.tags.includes('urgent')).length;\r\n    setUrgentBackorders(urgent);\r\n\r\n    // Backorder Trends for Column Chart\r\n    const trendData = data.map(backorder => ({\r\n      name: `Backorder ${backorder.backorderId.slice(-4)}`,\r\n      y: Number(backorder.quantity),\r\n    }));\r\n    setBackorderTrends(trendData);\r\n\r\n    // Restock Timeline Over Time\r\n    const timeline = data.map(backorder => ({\r\n      date: new Date(backorder.expectedRestockDate).getTime(),\r\n      name: `Backorder ${backorder.backorderId.slice(-4)}`,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setRestockTimeline(timeline);\r\n  };\r\n\r\n  // Highcharts options for Backorder Trends\r\n  const backorderTrendsChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Backorder Quantity Trends' },\r\n    series: [{\r\n      name: 'Quantity',\r\n      data: backorderTrends,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Restock Timeline\r\n  const restockTimelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Expected Restock Timeline' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Backorders' } },\r\n    series: [{\r\n      name: 'Expected Restock',\r\n      data: restockTimeline.map(item => [item.date, item.name]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Backorder Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Backorders</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalBackorders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Quantity Backordered</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalQuantity}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Urgent Backorders</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {urgentBackorders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Backorder Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={backorderTrendsChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Restock Timeline Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={restockTimelineChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["BackorderDashboard","_ref","fetchData","backorderData","setBackorderData","useState","totalBackorders","setTotalBackorders","totalQuantity","setTotalQuantity","urgentBackorders","setUrgentBackorders","backorderTrends","setBackorderTrends","restockTimeline","setRestockTimeline","loading","setLoading","useEffect","async","data","processBackorderData","fetchDataAsync","length","totalQty","reduce","acc","backorder","Number","quantity","urgent","filter","tags","includes","trendData","map","name","backorderId","slice","y","timeline","date","Date","expectedRestockDate","getTime","sort","a","b","backorderTrendsChartOptions","chart","type","title","text","series","restockTimelineChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}