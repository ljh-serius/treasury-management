{"version":3,"file":"static/js/5653.a2d5e6d1.chunk.js","mappings":"qRAKA,MAoFA,EApFoCA,IAAqB,IAApB,WAAEC,GAAYD,EACjD,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAC/BG,WAAY,EACZC,YAAa,EACbC,cAAe,KAGjBC,EAAAA,EAAAA,YAAU,KACUC,WAChB,MAAMC,QAAeX,IACrBE,EAAQS,GAGR,MAAML,EAAaK,EAAOC,OACpBL,EAAcI,EAAOE,QAAOC,GAAwB,WAAhBA,EAAKC,SAAqBH,OAC9DJ,EAAgBG,EAAOE,QAAOC,GAAwB,aAAhBA,EAAKC,SAAuBH,OAExEP,EAAQ,CAAEC,aAAYC,cAAaC,iBAAgB,EAGrDQ,EAAW,GACV,CAAChB,IAGJ,MAAMiB,EAA4B,CAChCC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,4BACfC,OAAQ,CACN,CACEC,KAAM,QACNtB,KAAM,CACJ,CAAEsB,KAAM,SAAUC,EAAGpB,EAAKG,aAC1B,CAAEgB,KAAM,WAAYC,EAAGpB,EAAKI,mBAMpC,OACEiB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,GAAIC,UACvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEJ,SAAA,EAEzBJ,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEP,UACvBJ,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAR,UACHC,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAT,SAAA,EACVJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,iBACzBJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAEzB,EAAKE,qBAKrCmB,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEP,UACvBJ,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAR,UACHC,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAT,SAAA,EACVJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,kBACzBJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAEzB,EAAKG,sBAKrCkB,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEP,UACvBJ,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAR,UACHC,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAT,SAAA,EACVJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,oBACzBJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAEzB,EAAKI,wBAMrCiB,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGN,UAChBJ,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAR,UACHC,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAT,SAAA,EACVJ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,8BACzBJ,EAAAA,EAAAA,KAACgB,IAAe,CAACC,WAAYC,IAAYC,QAAS3B,eAKtD,C","sources":["pages/Analysis/CrisisRiskManagement/CrisisManagement/CrisisResponseTeams.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Box } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst CrisisResponseTeamAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalTeams: 0,\r\n    activeTeams: 0,\r\n    inactiveTeams: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetchItems();\r\n      setData(result);\r\n\r\n      // Calculate KPIs\r\n      const totalTeams = result.length;\r\n      const activeTeams = result.filter(team => team.status === 'active').length;\r\n      const inactiveTeams = result.filter(team => team.status === 'inactive').length;\r\n\r\n      setKpis({ totalTeams, activeTeams, inactiveTeams });\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  // Highcharts configuration for Team Status Distribution\r\n  const statusDistributionOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Team Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Teams',\r\n        data: [\r\n          { name: 'Active', y: kpis.activeTeams },\r\n          { name: 'Inactive', y: kpis.inactiveTeams },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={3}>\r\n        {/* KPIs */}\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Total Teams</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalTeams}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Active Teams</Typography>\r\n              <Typography variant=\"h4\">{kpis.activeTeams}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Inactive Teams</Typography>\r\n              <Typography variant=\"h4\">{kpis.inactiveTeams}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Highcharts for Team Status Distribution */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Team Status Distribution</Typography>\r\n              <HighchartsReact highcharts={Highcharts} options={statusDistributionOptions} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CrisisResponseTeamAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalTeams","activeTeams","inactiveTeams","useEffect","async","result","length","filter","team","status","fetchData","statusDistributionOptions","chart","type","title","text","series","name","y","_jsx","Box","sx","flexGrow","children","_jsxs","Grid","container","spacing","item","xs","md","Card","CardContent","Typography","variant","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}