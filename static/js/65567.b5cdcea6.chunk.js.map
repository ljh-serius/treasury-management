{"version":3,"file":"static/js/65567.b5cdcea6.chunk.js","mappings":"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","sources":["pages/Analysis/CrisisRiskManagement/RiskAssessments/RiskScoring.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst RiskScoringAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    const highRiskCount = data.filter(item => item.overallRiskScore > 75).length;\r\n    const mediumRiskCount = data.filter(item => item.overallRiskScore > 50 && item.overallRiskScore <= 75).length;\r\n    const lowRiskCount = data.filter(item => item.overallRiskScore <= 50).length;\r\n\r\n    const statusCounts = data.reduce((acc, item) => {\r\n        acc[item.status] = (acc[item.status] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const likelihoodCounts = data.reduce((acc, item) => {\r\n        acc[item.likelihoodScore] = (acc[item.likelihoodScore] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const statusOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Risk Status Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Status',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Active', y: statusCounts.active || 0 },\r\n                    { name: 'Mitigated', y: statusCounts.mitigated || 0 },\r\n                    { name: 'Archived', y: statusCounts.archived || 0 },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const likelihoodOptions = {\r\n        chart: { type: 'column' },\r\n        title: { text: 'Likelihood Score Distribution' },\r\n        xAxis: { categories: ['High', 'Medium', 'Low'] },\r\n        series: [\r\n            {\r\n                name: 'Likelihood Score',\r\n                data: [\r\n                    likelihoodCounts.high || 0,\r\n                    likelihoodCounts.medium || 0,\r\n                    likelihoodCounts.low || 0,\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">Risk Scoring Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Risks</Typography>\r\n                        <Typography variant=\"h4\">{data.length}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">High Risks</Typography>\r\n                        <Typography variant=\"h4\">{highRiskCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Medium Risks</Typography>\r\n                        <Typography variant=\"h4\">{mediumRiskCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={statusOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={likelihoodOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default RiskScoringAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","highRiskCount","filter","item","overallRiskScore","length","mediumRiskCount","statusCounts","reduce","acc","status","likelihoodCounts","likelihoodScore","statusOptions","chart","type","title","text","series","name","colorByPoint","y","active","mitigated","archived","likelihoodOptions","xAxis","categories","high","medium","low","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}