{"version":3,"file":"static/js/22677.62a4dd40.chunk.js","mappings":"wTAKe,SAASA,EAAoBC,GAAkB,IAAjB,WAAEC,GAAYD,EACzD,MAAOE,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAS,IAClDG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,IACpCK,EAAoBC,IAAyBN,EAAAA,EAAAA,UAAS,IACtDO,EAA6BC,IAAkCR,EAAAA,EAAAA,UAAS,KACxES,EAAoBC,IAAyBV,EAAAA,EAAAA,UAAS,KACtDW,EAASC,IAAcZ,EAAAA,EAAAA,WAAS,IAEvCa,EAAAA,EAAAA,YAAU,KACeC,WACrBF,GAAW,GACX,MAAMG,QAAalB,IACnBE,EAAmBgB,GACnBC,EAAuBD,GACvBH,GAAW,EAAM,EAGnBK,EAAgB,GACf,CAACpB,IAEJ,MAAMmB,EAA0BD,IAE9Bb,EAAoBa,EAAKG,QAGzB,MAAMC,EAAuBJ,EAAKK,QAAO,CAACC,EAAKC,IAAgBD,EAAME,OAAOD,EAAYE,OAAO,GAC/FpB,EAAae,GAGb,MAAMM,EAAUV,EAAKW,QAAOJ,GAAsC,YAAvBA,EAAYK,SAAsBT,OAC7EZ,EAAsBmB,GAGtB,MAAMG,EAAab,EAAKK,QAAO,CAACC,EAAKC,KACnCD,EAAIC,EAAYO,kBAAoBR,EAAIC,EAAYO,kBAAoB,GAAK,EACtER,IACN,CAAC,GACJb,EAA+BsB,OAAOC,KAAKH,GAAYI,KAAIC,IAAG,CAC5DC,KAAMD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAC9CC,EAAGV,EAAWK,QAIhB,MAAMM,EAAexB,EAAKK,QAAO,CAACC,EAAKC,KACrCD,EAAIC,EAAYK,SAAWN,EAAIC,EAAYK,SAAW,GAAK,EACpDN,IACN,CAAC,GACJX,EAAsBoB,OAAOC,KAAKQ,GAAcP,KAAIC,IAAG,CACrDC,KAAMD,EAAIO,QAAQ,IAAK,KAAKJ,cAC5BE,EAAGC,EAAaN,OACd,EAIAQ,EAA8B,CAClCC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,iCACfC,OAAQ,CAAC,CACPZ,KAAM,mBACNa,cAAc,EACdhC,KAAMR,KAKJyC,EAAqB,CACzBN,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,mCACfC,OAAQ,CAAC,CACPZ,KAAM,SACNa,cAAc,EACdhC,KAAMN,KAIV,OACEwC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMnD,EAAQ4C,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,sCAItCN,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,SAAA,EAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,6BACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEyB,WAAY,QAAStB,SAC/DtD,YAMTuD,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,4BACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,OAAON,GAAI,CAAEyB,WAAY,QAAStB,SAAA,CAAC,IAC9DpD,EAAU2E,QAAQ,cAM5BtB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,yBACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,SAASN,GAAI,CAAEyB,WAAY,QAAStB,SAChElD,eAOX4C,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGnB,GAAI,CAAE2B,UAAW,GAAIxB,SAAA,EAE/CC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACwB,IAAe,CAACC,WAAYC,IAAYC,QAAS1C,OAIpDe,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACwB,IAAe,CAACC,WAAYC,IAAYC,QAASnC,cAM9D,C","sources":["pages/Analysis/OperationsAssetManagement/Maintenance/PreventiveMaintenanceSchedules.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function MaintenanceDashboard({ fetchItems }) {\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  const [totalMaintenance, setTotalMaintenance] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [pendingMaintenance, setPendingMaintenance] = useState(0);\r\n  const [maintenanceTypeDistribution, setMaintenanceTypeDistribution] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setMaintenanceData(data);\r\n      processMaintenanceData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processMaintenanceData = (data) => {\r\n    // Total Maintenance\r\n    setTotalMaintenance(data.length);\r\n\r\n    // Total Maintenance Cost\r\n    const totalMaintenanceCost = data.reduce((acc, maintenance) => acc + Number(maintenance.cost), 0);\r\n    setTotalCost(totalMaintenanceCost);\r\n\r\n    // Count Pending Maintenance\r\n    const pending = data.filter(maintenance => maintenance.status === 'pending').length;\r\n    setPendingMaintenance(pending);\r\n\r\n    // Maintenance Type Distribution for Pie Chart\r\n    const typeCounts = data.reduce((acc, maintenance) => {\r\n      acc[maintenance.maintenanceType] = (acc[maintenance.maintenanceType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setMaintenanceTypeDistribution(Object.keys(typeCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: typeCounts[key],\r\n    })));\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, maintenance) => {\r\n      acc[maintenance.status] = (acc[maintenance.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.replace('_', ' ').toUpperCase(),\r\n      y: statusCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Maintenance Type Distribution\r\n  const maintenanceTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Maintenance Type Distribution' },\r\n    series: [{\r\n      name: 'Maintenance Type',\r\n      colorByPoint: true,\r\n      data: maintenanceTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Maintenance Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Preventive Maintenance Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Maintenance Tasks</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalMaintenance}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Maintenance Cost</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalCost.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Pending Maintenance</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {pendingMaintenance}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Maintenance Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={maintenanceTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["MaintenanceDashboard","_ref","fetchItems","maintenanceData","setMaintenanceData","useState","totalMaintenance","setTotalMaintenance","totalCost","setTotalCost","pendingMaintenance","setPendingMaintenance","maintenanceTypeDistribution","setMaintenanceTypeDistribution","statusDistribution","setStatusDistribution","loading","setLoading","useEffect","async","data","processMaintenanceData","fetchDataAsync","length","totalMaintenanceCost","reduce","acc","maintenance","Number","cost","pending","filter","status","typeCounts","maintenanceType","Object","keys","map","key","name","charAt","toUpperCase","slice","y","statusCounts","replace","maintenanceTypeChartOptions","chart","type","title","text","series","colorByPoint","statusChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}