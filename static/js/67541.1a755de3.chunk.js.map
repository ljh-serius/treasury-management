{"version":3,"file":"static/js/67541.1a755de3.chunk.js","mappings":"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","sources":["pages/Analysis/CorporateCommunication/CrisisManagement/AfterActionsReports.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst AfterActionReportsAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    const draftReports = data.filter(item => item.status === 'draft').length;\r\n    const finalReports = data.filter(item => item.status === 'final').length;\r\n    const archivedReports = data.filter(item => item.status === 'archived').length;\r\n\r\n    const statusOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Report Status Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Reports',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Draft', y: draftReports },\r\n                    { name: 'Final', y: finalReports },\r\n                    { name: 'Archived', y: archivedReports },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const preparedByCounts = data.reduce((acc, item) => {\r\n        acc[item.preparedBy] = (acc[item.preparedBy] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const preparedByOptions = {\r\n        chart: { type: 'column' },\r\n        title: { text: 'Reports Prepared by Individuals' },\r\n        xAxis: { categories: Object.keys(preparedByCounts) },\r\n        series: [\r\n            {\r\n                name: 'Reports',\r\n                data: Object.values(preparedByCounts),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">After-Action Reports Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Reports</Typography>\r\n                        <Typography variant=\"h4\">{data.length}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Draft Reports</Typography>\r\n                        <Typography variant=\"h4\">{draftReports}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Final Reports</Typography>\r\n                        <Typography variant=\"h4\">{finalReports}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={statusOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={preparedByOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AfterActionReportsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","draftReports","filter","item","status","length","finalReports","statusOptions","chart","type","title","text","series","name","colorByPoint","y","preparedByCounts","reduce","acc","preparedBy","preparedByOptions","xAxis","categories","Object","keys","values","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}