{"version":3,"file":"static/js/27221.0db76f7d.chunk.js","mappings":"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","sources":["pages/Analysis/OperationsAssetManagement/Assets/AssetDepreciation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function AssetDepreciationDashboard({ fetchItems }) {\r\n  const [depreciationData, setDepreciationData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [totalDepreciation, setTotalDepreciation] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setDepreciationData(data);\r\n      processDepreciationData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processDepreciationData = (data) => {\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, item) => {\r\n      item.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total Accumulated Depreciation and Eco Contribution\r\n    const totals = data.reduce(\r\n      (acc, item) => {\r\n        acc.totalDepreciation += Number(item.accumulatedDepreciation) || 0;\r\n        acc.ecoContribution += Number(item.ecoContribution) || 0;\r\n        return acc;\r\n      },\r\n      { totalDepreciation: 0, ecoContribution: 0 }\r\n    );\r\n\r\n    setTotalDepreciation(totals.totalDepreciation);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Asset Depreciation Status Distribution' },\r\n    series: [{ name: 'Assets', colorByPoint: true, data: statusDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Asset Depreciation Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Accumulated Depreciation</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalDepreciation.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total accumulated depreciation across all assets.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["AssetDepreciationDashboard","_ref","fetchItems","depreciationData","setDepreciationData","useState","statusDistribution","setStatusDistribution","totalDepreciation","setTotalDepreciation","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processDepreciationData","fetchData","statusCounts","reduce","acc","item","tags","forEach","tag","Object","keys","map","key","name","y","totals","Number","accumulatedDepreciation","ecoContribution","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}