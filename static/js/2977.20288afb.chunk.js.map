{"version":3,"file":"static/js/2977.20288afb.chunk.js","mappings":"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","sources":["pages/Analysis/GovernanceStrategy/RiskManagement/RiskAssessments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function RiskAssessmentsDashboard({ fetchItems }) {\r\n  const [riskData, setRiskData] = useState([]);\r\n  const [totalAssessments, setTotalAssessments] = useState(0);\r\n  const [likelihoodDistribution, setLikelihoodDistribution] = useState([]);\r\n  const [impactDistribution, setImpactDistribution] = useState([]);\r\n  const [averageRiskScore, setAverageRiskScore] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setRiskData(data);\r\n      processRiskData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processRiskData = (data) => {\r\n    setTotalAssessments(data.length);\r\n\r\n    let totalRiskScore = 0;\r\n    const likelihoodMap = {};\r\n    const impactMap = {};\r\n\r\n    data.forEach((item) => {\r\n      // Calculate total risk score for average\r\n      totalRiskScore += item.riskScore;\r\n\r\n      // Process likelihood distribution\r\n      const likelihood = item.likelihood;\r\n      likelihoodMap[likelihood] = (likelihoodMap[likelihood] || 0) + 1;\r\n\r\n      // Process impact distribution\r\n      const impact = item.impact;\r\n      impactMap[impact] = (impactMap[impact] || 0) + 1;\r\n    });\r\n\r\n    setAverageRiskScore((totalRiskScore / data.length).toFixed(2));\r\n\r\n    const likelihoodArray = Object.entries(likelihoodMap).map(([likelihood, count]) => ({\r\n      name: likelihood,\r\n      y: count,\r\n    }));\r\n\r\n    const impactArray = Object.entries(impactMap).map(([impact, count]) => ({\r\n      name: impact,\r\n      y: count,\r\n    }));\r\n\r\n    setLikelihoodDistribution(likelihoodArray);\r\n    setImpactDistribution(impactArray);\r\n  };\r\n\r\n  // Highcharts options for Likelihood Distribution\r\n  const likelihoodChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Likelihood Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Likelihood',\r\n        colorByPoint: true,\r\n        data: likelihoodDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for Impact Distribution\r\n  const impactChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Impact Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Impact',\r\n        colorByPoint: true,\r\n        data: impactDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Risk Assessments Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Assessments</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAssessments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Risk Score</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageRiskScore}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Likelihood Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={likelihoodChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Impact Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={impactChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["RiskAssessmentsDashboard","_ref","fetchItems","riskData","setRiskData","useState","totalAssessments","setTotalAssessments","likelihoodDistribution","setLikelihoodDistribution","impactDistribution","setImpactDistribution","averageRiskScore","setAverageRiskScore","loading","setLoading","useEffect","async","data","processRiskData","fetchData","length","totalRiskScore","likelihoodMap","impactMap","forEach","item","riskScore","likelihood","impact","toFixed","likelihoodArray","Object","entries","map","_ref2","count","name","y","impactArray","_ref3","likelihoodChartOptions","chart","type","title","text","series","colorByPoint","impactChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}