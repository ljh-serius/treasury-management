{"version":3,"file":"static/js/693.5059b079.chunk.js","mappings":"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","sources":["components/Management/CustomerInvoices.js","data/industries.js","utils/firebaseCrudHelpers.js"],"sourcesContent":["import {\r\n  fetchDocuments,\r\n  addDocument,\r\n  updateDocument,\r\n  deleteDocument,\r\n  fetchDocumentsBySelectValue,\r\n  fetchDocumentsByFieldValue,\r\n  fetchDocumentById\r\n} from '../../utils/firebaseCrudHelpers';\r\n\r\nimport industries from '../../data/industries';\r\n\r\nexport const fieldsConfig = {\r\n  invoiceId: { label: 'Invoice ID', type: 'text', faker: 'datatype.uuid' },\r\n  invoiceName: { label: 'Invoice Name', type: 'text', faker: 'company.name' },\r\n  customerDetails: { label: 'Customer Details', type: 'text', faker: 'company.name' },\r\n  issuedAt: { label: 'Issued At', type: 'date', faker: 'date.past' },\r\n  serviceProductDescription: { label: 'Service/Product Description', type: 'text', faker: 'commerce.productDescription' },\r\n  quantity: { label: 'Quantity', type: 'number', faker: 'datatype.number' },\r\n  unitPrice: { label: 'Unit Price', type: 'number', faker: 'finance.amount' },\r\n  totalAmountExclVAT: { label: 'Total Amount (Excl. VAT)', type: 'number', faker: 'finance.amount' },\r\n  vatRate: { label: 'VAT Rate', type: 'number', faker: 'finance.vatRate' },\r\n  totalAmountInclVAT: { label: 'Total Amount (Incl. VAT)', type: 'number', faker: 'finance.amount' },\r\n  paymentTerms: { label: 'Payment Terms', type: 'text', faker: 'finance.transactionType' },\r\n  preferredCurrency: { label: 'Preferred Currency', type: 'text', faker: 'finance.currencyCode' },\r\n  discountRate: { label: 'Discount Rate', type: 'number', faker: 'datatype.float' },\r\n  contactName: { label: 'Contact Name', type: 'text', faker: 'name.fullName' },\r\n  contactEmail: { label: 'Contact Email', type: 'email', faker: 'internet.email' },\r\n  contactPhone: { label: 'Contact Phone', type: 'tel', faker: 'phone.imei' },\r\n  dueDate: { label: 'Due Date', type: 'date', faker: 'date.future' },\r\n  notes: { label: 'Notes', type: 'text', multiline: true, rows: 4, faker: 'lorem.paragraph' }\r\n};\r\n\r\nexport const headCells = Object.keys(fieldsConfig).map(key => ({\r\n  id: key,\r\n  label: fieldsConfig[key].label,\r\n}));\r\n\r\n\r\nexport const entityName = 'Customer Invoices';\r\n\r\nexport const fetchItems = () => fetchDocuments('customer-invoices');\r\nexport const addItem = (item) => addDocument('customer-invoices', item);\r\nexport const updateItem = (id, item) => updateDocument('customer-invoices', id, item);\r\nexport const deleteItem = (id) => deleteDocument('customer-invoices', id);\r\n\r\nexport async function fetchItemById(id) {\r\n  return await fetchDocumentById('customer-invoices', id);\r\n}\r\n\r\n","export default [\r\n    { id: \"Aero\", label: \"Aerospace\" },\r\n    { id: \"Agri\", label: \"Agriculture\" },\r\n    { id: \"Auto\", label: \"Automotive\" },\r\n    { id: \"Bank\", label: \"Banking\" },\r\n    { id: \"Biotech\", label: \"Biotechnology\" },\r\n    { id: \"Chem\", label: \"Chemical\" },\r\n    { id: \"Const\", label: \"Construction\" },\r\n    { id: \"ConsElect\", label: \"Consumer Electronics\" },\r\n    { id: \"Def\", label: \"Defense\" },\r\n    { id: \"Edu\", label: \"Education\" },\r\n    { id: \"Energy\", label: \"Energy\" },\r\n    { id: \"Ent\", label: \"Entertainment\" },\r\n    { id: \"FinServ\", label: \"Financial Services\" },\r\n    { id: \"FoodBev\", label: \"Food & Beverage\" },\r\n    { id: \"Health\", label: \"Healthcare\" },\r\n    { id: \"Hosp\", label: \"Hospitality\" },\r\n    { id: \"Insur\", label: \"Insurance\" },\r\n    { id: \"Legal\", label: \"Legal Services\" },\r\n    { id: \"Log\", label: \"Logistics\" },\r\n    { id: \"Manuf\", label: \"Manufacturing\" },\r\n    { id: \"Media\", label: \"Media\" },\r\n    { id: \"Mining\", label: \"Mining\" },\r\n    { id: \"NonProfit\", label: \"Non-Profit\" },\r\n    { id: \"OilGas\", label: \"Oil & Gas\" },\r\n    { id: \"Pharma\", label: \"Pharmaceuticals\" },\r\n    { id: \"PublicAdmin\", label: \"Public Administration\" },\r\n    { id: \"RealEst\", label: \"Real Estate\" },\r\n    { id: \"Retail\", label: \"Retail\" },\r\n    { id: \"Soft\", label: \"Software\" },\r\n    { id: \"Telecom\", label: \"Telecommunications\" },\r\n    { id: \"Textile\", label: \"Textiles\" },\r\n    { id: \"Transport\", label: \"Transportation\" },\r\n    { id: \"Travel\", label: \"Travel & Tourism\" },\r\n    { id: \"Util\", label: \"Utilities\" },\r\n    { id: \"WasteMgmt\", label: \"Waste Management\" },\r\n    { id: \"Water\", label: \"Water Resources\" },\r\n    { id: \"Wood\", label: \"Wood Products\" },\r\n    { id: \"Aviation\", label: \"Aviation\" },\r\n    { id: \"Elec\", label: \"Electrical Engineering\" },\r\n    { id: \"Enviro\", label: \"Environmental Services\" },\r\n    { id: \"Forestry\", label: \"Forestry\" },\r\n    { id: \"Indust\", label: \"Industrial Goods\" },\r\n    { id: \"Marine\", label: \"Maritime\" },\r\n    { id: \"MedEquip\", label: \"Medical Equipment\" },\r\n    { id: \"Petro\", label: \"Petrochemicals\" },\r\n    { id: \"Plastics\", label: \"Plastics\" },\r\n    { id: \"Rail\", label: \"Railway\" },\r\n    { id: \"Semicon\", label: \"Semiconductors\" },\r\n    { id: \"Shipbuild\", label: \"Shipbuilding\" },\r\n    { id: \"Steel\", label: \"Steel\" },\r\n    { id: \"Tobacco\", label: \"Tobacco\" },\r\n    { id: \"AgricEquip\", label: \"Agricultural Equipment\" },\r\n    { id: \"AutomParts\", label: \"Automotive Parts\" },\r\n    { id: \"Cement\", label: \"Cement\" },\r\n    { id: \"Coal\", label: \"Coal Mining\" },\r\n    { id: \"Commod\", label: \"Commodities\" },\r\n    { id: \"Deterg\", label: \"Detergents\" },\r\n    { id: \"Dairy\", label: \"Dairy Products\" },\r\n    { id: \"Fish\", label: \"Fishing\" },\r\n    { id: \"Glass\", label: \"Glass Manufacturing\" },\r\n    { id: \"Leather\", label: \"Leather Goods\" },\r\n    { id: \"Meat\", label: \"Meat Processing\" },\r\n    { id: \"PulpPaper\", label: \"Pulp & Paper\" },\r\n    { id: \"Rubber\", label: \"Rubber\" },\r\n    { id: \"Sugar\", label: \"Sugar\" },\r\n    { id: \"Brew\", label: \"Brewing\" },\r\n    { id: \"Distill\", label: \"Distilling\" },\r\n    { id: \"Perfume\", label: \"Perfumery\" },\r\n    { id: \"FoodProc\", label: \"Food Processing\" },\r\n    { id: \"Funeral\", label: \"Funeral Services\" },\r\n    { id: \"Furn\", label: \"Furniture\" },\r\n    { id: \"HomeAppl\", label: \"Home Appliances\" },\r\n    { id: \"Horticult\", label: \"Horticulture\" },\r\n    { id: \"Jewelry\", label: \"Jewelry\" },\r\n    { id: \"Machinery\", label: \"Machinery\" },\r\n    { id: \"Metals\", label: \"Metals\" },\r\n    { id: \"MusInst\", label: \"Musical Instruments\" },\r\n    { id: \"OilEquip\", label: \"Oilfield Equipment\" },\r\n    { id: \"Optics\", label: \"Optics\" },\r\n    { id: \"Paint\", label: \"Paints & Coatings\" },\r\n    { id: \"Pest\", label: \"Pesticides\" },\r\n    { id: \"Photo\", label: \"Photography\" },\r\n    { id: \"Print\", label: \"Printing\" },\r\n    { id: \"Sew\", label: \"Sewage Treatment\" },\r\n    { id: \"Ship\", label: \"Shipping\" },\r\n    { id: \"Spirits\", label: \"Spirits\" },\r\n    { id: \"Stone\", label: \"Stone Quarrying\" },\r\n    { id: \"Tires\", label: \"Tires\" },\r\n    { id: \"Toys\", label: \"Toys\" },\r\n    { id: \"Vending\", label: \"Vending\" },\r\n    { id: \"Wines\", label: \"Wines\" },\r\n    { id: \"Wool\", label: \"Wool\" },\r\n    { id: \"TextMach\", label: \"Textile Machinery\" },\r\n    { id: \"Alum\", label: \"Aluminum\" },\r\n    { id: \"Art\", label: \"Arts & Crafts\" },\r\n    { id: \"Carpet\", label: \"Carpets & Rugs\" },\r\n    { id: \"Ceram\", label: \"Ceramics\" },\r\n    { id: \"Charity\", label: \"Charity Organizations\" },\r\n    { id: \"Commu\", label: \"Communications\" },\r\n    { id: \"Consul\", label: \"Consulting\" },\r\n    { id: \"Copy\", label: \"Copywriting\" },\r\n    { id: \"Cosmetics\", label: \"Cosmetics\" },\r\n    { id: \"Digital\", label: \"Digital Marketing\" },\r\n    { id: \"Drugs\", label: \"Drugs & Pharmaceuticals\" },\r\n    { id: \"Ecom\", label: \"E-commerce\" },\r\n    { id: \"Electronics\", label: \"Electronics\" },\r\n    { id: \"Environ\", label: \"Environmental\" },\r\n    { id: \"Event\", label: \"Event Management\" },\r\n    { id: \"Fash\", label: \"Fashion\" },\r\n    { id: \"Film\", label: \"Film Production\" },\r\n    { id: \"Finance\", label: \"Finance\" },\r\n    { id: \"Florist\", label: \"Floristry\" },\r\n    { id: \"Footwear\", label: \"Footwear\" },\r\n    { id: \"Gardening\", label: \"Gardening\" },\r\n    { id: \"Gems\", label: \"Gemstones\" },\r\n    { id: \"Gov\", label: \"Government\" },\r\n    { id: \"Grain\", label: \"Grain Milling\" },\r\n    { id: \"Handicraft\", label: \"Handicrafts\" },\r\n    { id: \"Hemp\", label: \"Hemp Products\" },\r\n    { id: \"HR\", label: \"Human Resources\" },\r\n    { id: \"ICT\", label: \"Information & Communication Technology\" },\r\n    { id: \"IndEquip\", label: \"Industrial Equipment\" },\r\n    { id: \"Invest\", label: \"Investment Banking\" },\r\n    { id: \"Iron\", label: \"Iron & Steel\" },\r\n    { id: \"IT\", label: \"Information Technology\" },\r\n    { id: \"Jute\", label: \"Jute Products\" },\r\n    { id: \"Land\", label: \"Landscaping\" },\r\n    { id: \"Law\", label: \"Law\" },\r\n    { id: \"Leather\", label: \"Leather Products\" },\r\n    { id: \"Lumber\", label: \"Lumber\" },\r\n    { id: \"Market\", label: \"Marketing\" },\r\n    { id: \"Metal\", label: \"Metal Products\" },\r\n    { id: \"Micro\", label: \"Microelectronics\" },\r\n    { id: \"Mobile\", label: \"Mobile Telecommunications\" },\r\n    { id: \"Music\", label: \"Music\" },\r\n    { id: \"NGO\", label: \"Non-Governmental Organizations\" },\r\n    { id: \"Ocean\", label: \"Oceanography\" },\r\n    { id: \"Optical\", label: \"Optical Products\" },\r\n    { id: \"Pack\", label: \"Packaging\" },\r\n    { id: \"Paint\", label: \"Paint\" },\r\n    { id: \"Paper\", label: \"Paper\" },\r\n    { id: \"Prop\", label: \"Property Management\" },\r\n    { id: \"Public\", label: \"Public Relations\" },\r\n    { id: \"Radio\", label: \"Radio Broadcasting\" },\r\n    { id: \"Rail\", label: \"Railways\" },\r\n    { id: \"Realty\", label: \"Realty\" },\r\n    { id: \"Recycling\", label: \"Recycling\" },\r\n    { id: \"Research\", label: \"Research\" },\r\n    { id: \"Security\", label: \"Security\" },\r\n    { id: \"Social\", label: \"Social Media\" },\r\n    { id: \"Solar\", label: \"Solar Power\" },\r\n    { id: \"Space\", label: \"Space Exploration\" },\r\n    { id: \"Sports\", label: \"Sports\" },\r\n    { id: \"Storage\", label: \"Storage\" },\r\n    { id: \"Tax\", label: \"Taxation\" },\r\n    { id: \"Tech\", label: \"Technology\" },\r\n    { id: \"Tourism\", label: \"Tourism\" },\r\n    { id: \"Venture\", label: \"Venture Capital\" },\r\n    { id: \"Water\", label: \"Water Treatment\" },\r\n    { id: \"Wine\", label: \"Wine\" },\r\n    { id: \"Zoo\", label: \"Zoology\" }\r\n];\r\n","import { db } from './firebaseConfig'; // Assuming you have a Firebase config file\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where, getDoc } from 'firebase/firestore';\r\n\r\nconst organizationId = JSON.parse(localStorage.getItem('userData')).organizationId;\r\n\r\n// Function to fetch documents specific to an organization from a subcollection\r\nexport const fetchDocuments = async(subcollectionName) => {\r\n  try {\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, subcollectionName);\r\n    const snapshot = await getDocs(subcollectionRef);\r\n    const documentsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    return documentsList;\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${subcollectionName}:`, error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Function to add a new document linked to an organization in a subcollection\r\nexport const addDocument = async(subcollectionName, documentData) => {\r\n  try {\r\n    documentData.organizationId = organizationId;\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, subcollectionName);\r\n    const docRef = await addDoc(subcollectionRef, documentData);\r\n    return docRef.id; // Return the ID of the newly created document\r\n  } catch (error) {\r\n    console.error(`Error adding document to ${subcollectionName}:`, error);\r\n    throw new Error(`Could not add document to ${subcollectionName}`);\r\n  }\r\n};\r\n\r\n// Function to update an existing document in a subcollection\r\nexport const updateDocument = async(subcollectionName, documentId, documentData) => {\r\n  try {\r\n    const docRef = doc(db, 'organizations', organizationId, subcollectionName, documentId);\r\n    await updateDoc(docRef, documentData);\r\n  } catch (error) {\r\n    console.error(`Error updating document in ${subcollectionName}:`, error);\r\n    throw new Error(`Could not update document in ${subcollectionName}`);\r\n  }\r\n};\r\n\r\n// Function to delete a document from a subcollection\r\nexport const deleteDocument = async(subcollectionName, documentId) => {\r\n  try {\r\n    const docRef = doc(db, 'organizations', organizationId, subcollectionName, documentId);\r\n    await deleteDoc(docRef);\r\n  } catch (error) {\r\n    console.error(`Error deleting document from ${subcollectionName}:`, error);\r\n    throw new Error(`Could not delete document from ${subcollectionName}`);\r\n  }\r\n};\r\n\r\n\r\nexport const fetchDocumentsBySelectValue = async(relativeCollection, foreignKey, foreignValue) => {\r\n  try {\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, relativeCollection);\r\n    \r\n    // Create a query against the collection\r\n    const q = query(subcollectionRef, where(foreignKey, 'array-contains', foreignValue));\r\n    \r\n    // Execute the query and get the documents\r\n    const snapshot = await getDocs(q);\r\n    const documentsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n    return documentsList;\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${relativeCollection}:`, error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport const fetchDocumentsByFieldValue = async(relativeCollection, fieldName, fieldValue) => {\r\n  try {\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, relativeCollection);\r\n    \r\n    // Create a query against the collection\r\n    const q = query(subcollectionRef, where(fieldName, '==', fieldValue));\r\n    \r\n    // Execute the query and get the documents\r\n    const snapshot = await getDocs(q);\r\n    const documentsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n    return documentsList;\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${relativeCollection}:`, error);\r\n    return [];\r\n  }\r\n}\r\nexport const fetchDocumentById = async(subcollectionName, documentId) => {\r\n  console.log(\"Fetching document with ID:\", documentId);\r\n  console.log(\"In subcollection:\", subcollectionName);\r\n  console.log(\"Under organization ID:\", organizationId);\r\n\r\n  try {\r\n    const docRef = doc(db, 'organizations', organizationId, subcollectionName, documentId);\r\n    console.log(\"Document Reference:\", docRef.path); // Log the path being queried\r\n\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n      console.log(\"Document data:\", docSnap.data()); // Log the retrieved data\r\n      return { id: docSnap.id, ...docSnap.data() };\r\n    } else {\r\n      console.error(`No document found with ID ${documentId} in ${subcollectionName}`);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching document with ID ${documentId} from ${subcollectionName}:`, error);\r\n    return null;\r\n  }\r\n};\r\n"],"names":["fieldsConfig","invoiceId","label","type","faker","invoiceName","customerDetails","issuedAt","serviceProductDescription","quantity","unitPrice","totalAmountExclVAT","vatRate","totalAmountInclVAT","paymentTerms","preferredCurrency","discountRate","contactName","contactEmail","contactPhone","dueDate","notes","multiline","rows","headCells","Object","keys","map","key","id","entityName","fetchItems","fetchDocuments","addItem","item","addDocument","updateItem","updateDocument","deleteItem","deleteDocument","async","fetchItemById","fetchDocumentById","organizationId","JSON","parse","localStorage","getItem","subcollectionRef","collection","db","subcollectionName","snapshot","getDocs","docs","doc","data","error","console","documentData","addDoc","Error","documentId","docRef","updateDoc","deleteDoc","fetchDocumentsBySelectValue","relativeCollection","foreignKey","foreignValue","q","query","where","fetchDocumentsByFieldValue","fieldName","fieldValue","log","path","docSnap","getDoc","exists"],"sourceRoot":""}