{"version":3,"file":"static/js/24181.dd4918b3.chunk.js","mappings":"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","sources":["pages/Analysis/CustomerSupport/SupportTickets/ServiceLevelAgreements.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst SLAAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState([]);\r\n    const [kpis, setKpis] = useState({\r\n        totalSLAs: 0,\r\n        activeSLAs: 0,\r\n        avgResponseTime: 0,\r\n        avgResolutionTime: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchItems().then((response) => {\r\n            setData(response);\r\n            calculateKpis(response);\r\n        });\r\n    }, [fetchItems]);\r\n\r\n    const calculateKpis = (items) => {\r\n        const totalSLAs = items.length;\r\n        const activeSLAs = items.filter((item) => item.status === 'active').length;\r\n        const totalResponseTime = items.reduce((sum, item) => sum + Number(item.responseTime), 0);\r\n        const totalResolutionTime = items.reduce((sum, item) => sum + Number(item.resolutionTime), 0);\r\n        const avgResponseTime = totalSLAs ? totalResponseTime / totalSLAs : 0;\r\n        const avgResolutionTime = totalSLAs ? totalResolutionTime / totalSLAs : 0;\r\n\r\n        setKpis({\r\n            totalSLAs,\r\n            activeSLAs,\r\n            avgResponseTime: avgResponseTime.toFixed(2),\r\n            avgResolutionTime: avgResolutionTime.toFixed(2),\r\n        });\r\n    };\r\n\r\n    // Highcharts options for SLA Status Distribution\r\n    const statusDistributionChartOptions = {\r\n        chart: {\r\n            type: 'pie',\r\n        },\r\n        title: {\r\n            text: 'SLA Status Distribution',\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Status',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Active', y: data.filter((item) => item.status === 'active').length },\r\n                    { name: 'Expired', y: data.filter((item) => item.status === 'expired').length },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    // Highcharts options for Average Times (Response and Resolution)\r\n    const timesChartOptions = {\r\n        chart: {\r\n            type: 'column',\r\n        },\r\n        title: {\r\n            text: 'Average Response and Resolution Times',\r\n        },\r\n        xAxis: {\r\n            categories: ['Response Time', 'Resolution Time'],\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Average Time (hours)',\r\n                data: [kpis.avgResponseTime, kpis.avgResolutionTime],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            {/* KPIs */}\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total SLAs</Typography>\r\n                        <Typography variant=\"h4\">{kpis.totalSLAs}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Active SLAs</Typography>\r\n                        <Typography variant=\"h4\">{kpis.activeSLAs}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Avg. Response Time (hrs)</Typography>\r\n                        <Typography variant=\"h4\">{kpis.avgResponseTime}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Avg. Resolution Time (hrs)</Typography>\r\n                        <Typography variant=\"h4\">{kpis.avgResolutionTime}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            {/* Charts */}\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={statusDistributionChartOptions} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={timesChartOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SLAAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalSLAs","activeSLAs","avgResponseTime","avgResolutionTime","useEffect","then","response","calculateKpis","items","length","filter","item","status","totalResponseTime","reduce","sum","Number","responseTime","totalResolutionTime","resolutionTime","toFixed","statusDistributionChartOptions","chart","type","title","text","series","name","colorByPoint","y","timesChartOptions","xAxis","categories","_jsxs","Grid","container","spacing","children","_jsx","xs","sm","md","Card","CardContent","Typography","variant","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}