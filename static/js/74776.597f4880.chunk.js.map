{"version":3,"file":"static/js/74776.597f4880.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/AccountsReceivable/CreditManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function CreditManagementDashboard({ fetchItems }) {\r\n  const [creditData, setCreditData] = useState([]);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [riskLevelDistribution, setRiskLevelDistribution] = useState([]);\r\n  const [creditLimitTrendsData, setCreditLimitTrendsData] = useState([]);\r\n  const [outstandingBalanceTrendsData, setOutstandingBalanceTrendsData] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [totalCredits, setTotalCredits] = useState(0);\r\n  const [totalCreditLimit, setTotalCreditLimit] = useState(0);\r\n  const [totalOutstandingBalance, setTotalOutstandingBalance] = useState(0);\r\n  const [averageCreditLimit, setAverageCreditLimit] = useState(0);\r\n  const [averageOutstandingBalance, setAverageOutstandingBalance] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setCreditData(data);\r\n      processCreditData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processCreditData = (data) => {\r\n    // Total Number of Credits\r\n    setTotalCredits(data.length);\r\n\r\n    // Total Credit Limit and Outstanding Balance\r\n    const totals = data.reduce(\r\n      (acc, credit) => {\r\n        acc.creditLimit += Number(credit.creditLimit) || 0;\r\n        acc.outstandingBalance += Number(credit.outstandingBalance) || 0;\r\n        return acc;\r\n      },\r\n      { creditLimit: 0, outstandingBalance: 0 }\r\n    );\r\n\r\n    setTotalCreditLimit(totals.creditLimit);\r\n    setTotalOutstandingBalance(totals.outstandingBalance);\r\n    setAverageCreditLimit(totals.creditLimit / data.length);\r\n    setAverageOutstandingBalance(totals.outstandingBalance / data.length);\r\n\r\n    // Credits by Currency\r\n    const currencyCounts = data.reduce((acc, credit) => {\r\n      acc[credit.currency] = (acc[credit.currency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Credits by Risk Level\r\n    const riskLevelCounts = data.reduce((acc, credit) => {\r\n      acc[credit.riskLevel] = (acc[credit.riskLevel] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setRiskLevelDistribution(Object.keys(riskLevelCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),  // Capitalize risk level\r\n      y: riskLevelCounts[key],\r\n    })));\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, credit) => {\r\n      credit.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(key => ({\r\n      name: key,\r\n      y: tagsCounts[key],\r\n    })));\r\n\r\n    // Credit Limits Over Time\r\n    const creditLimitTrends = data.reduce((acc, credit) => {\r\n      const month = new Date(credit.createdDate).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + Number(credit.creditLimit);\r\n      return acc;\r\n    }, {});\r\n\r\n    setCreditLimitTrendsData(Object.keys(creditLimitTrends).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: creditLimitTrends[key],\r\n    })));\r\n\r\n    // Outstanding Balances Over Time\r\n    const outstandingBalanceTrends = data.reduce((acc, credit) => {\r\n      const month = new Date(credit.createdDate).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + Number(credit.outstandingBalance);\r\n      return acc;\r\n    }, {});\r\n\r\n    setOutstandingBalanceTrendsData(Object.keys(outstandingBalanceTrends).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: outstandingBalanceTrends[key],\r\n    })));\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const currencyChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Credits by Currency',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Currencies',\r\n        colorByPoint: true,\r\n        data: currencyDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const riskLevelChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Credits by Risk Level',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Risk Levels',\r\n        data: riskLevelDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const creditLimitTrendsChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Credit Limits Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: creditLimitTrendsData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Credit Limit',\r\n        data: creditLimitTrendsData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const outstandingBalanceTrendsChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Outstanding Balances Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: outstandingBalanceTrendsData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Outstanding Balance',\r\n        data: outstandingBalanceTrendsData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Tags Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        data: tagsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Credit Management Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Credits</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalCredits}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Credit Limit</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalCreditLimit.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Outstanding Balance</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalOutstandingBalance.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Credit Limit</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageCreditLimit.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Outstanding Balance</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageOutstandingBalance.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={riskLevelChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={creditLimitTrendsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={outstandingBalanceTrendsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CreditManagementDashboard","_ref","fetchItems","creditData","setCreditData","useState","currencyDistribution","setCurrencyDistribution","riskLevelDistribution","setRiskLevelDistribution","creditLimitTrendsData","setCreditLimitTrendsData","outstandingBalanceTrendsData","setOutstandingBalanceTrendsData","tagsDistribution","setTagsDistribution","totalCredits","setTotalCredits","totalCreditLimit","setTotalCreditLimit","totalOutstandingBalance","setTotalOutstandingBalance","averageCreditLimit","setAverageCreditLimit","averageOutstandingBalance","setAverageOutstandingBalance","loading","setLoading","useEffect","async","data","processCreditData","fetchData","length","totals","reduce","acc","credit","creditLimit","Number","outstandingBalance","currencyCounts","currency","Object","keys","map","key","name","y","riskLevelCounts","riskLevel","charAt","toUpperCase","slice","tagsCounts","tags","forEach","tag","creditLimitTrends","month","Date","createdDate","getMonth","outstandingBalanceTrends","currencyChartOptions","chart","type","title","text","series","colorByPoint","riskLevelChartOptions","creditLimitTrendsChartOptions","xAxis","categories","outstandingBalanceTrendsChartOptions","tagsChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}