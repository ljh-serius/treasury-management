{"version":3,"file":"static/js/82169.33846f9d.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/CommunityEngagment/NgoPartnerships.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function NGOPartnershipsDashboard({ fetchItems }) {\r\n  const [partnerships, setPartnerships] = useState([]);\r\n  const [totalPartnerships, setTotalPartnerships] = useState(0);\r\n  const [totalBudget, setTotalBudget] = useState(0);\r\n  const [budgetOutcomeComparison, setBudgetOutcomeComparison] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPartnerships(data);\r\n      processPartnershipData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processPartnershipData = (data) => {\r\n    let totalBudget = 0;\r\n\r\n    const comparisonData = data.map((partnership) => {\r\n      totalBudget += partnership.budget;\r\n\r\n      return {\r\n        name: partnership.ngoName,\r\n        budget: partnership.budget,\r\n        outcome: partnership.outcome.length, // Assuming outcome is qualitative, you could calculate it based on length or complexity\r\n      };\r\n    });\r\n\r\n    setTotalPartnerships(data.length);\r\n    setTotalBudget(totalBudget);\r\n    setBudgetOutcomeComparison(comparisonData);\r\n  };\r\n\r\n  // Highcharts options for Budget vs Outcome\r\n  const budgetOutcomeChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Budget vs Outcome' },\r\n    xAxis: { categories: budgetOutcomeComparison.map((partnership) => partnership.name) },\r\n    yAxis: {\r\n      min: 0,\r\n      title: { text: 'Budget (USD) vs Outcome' },\r\n    },\r\n    series: [\r\n      { name: 'Budget', data: budgetOutcomeComparison.map((partnership) => partnership.budget) },\r\n      { name: 'Outcome (Complexity)', data: budgetOutcomeComparison.map((partnership) => partnership.outcome) },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          NGO Partnerships Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Partnerships</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPartnerships}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Budget</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalBudget.toLocaleString()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Budget vs Outcome Chart */}\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={budgetOutcomeChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["NGOPartnershipsDashboard","_ref","fetchItems","partnerships","setPartnerships","useState","totalPartnerships","setTotalPartnerships","totalBudget","setTotalBudget","budgetOutcomeComparison","setBudgetOutcomeComparison","loading","setLoading","useEffect","async","data","processPartnershipData","fetchData","comparisonData","map","partnership","budget","name","ngoName","outcome","length","budgetOutcomeChartOptions","chart","type","title","text","xAxis","categories","yAxis","min","series","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toLocaleString","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}