{"version":3,"file":"static/js/98730.afde3ec5.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Projects/ProjectScope.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function ProjectScopesDashboard({ fetchItems }) {\r\n  const [scopeData, setScopeData] = useState([]);\r\n  const [totalScopes, setTotalScopes] = useState(0);\r\n  const [urgentScopes, setUrgentScopes] = useState(0);\r\n  const [constraintDistribution, setConstraintDistribution] = useState([]);\r\n  const [assumptionTrends, setAssumptionTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setScopeData(data);\r\n      processScopeData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processScopeData = (data) => {\r\n    // Total Scopes\r\n    setTotalScopes(data.length);\r\n\r\n    // Urgent Scopes\r\n    const urgent = data.filter(scope => scope.tags.includes('urgent')).length;\r\n    setUrgentScopes(urgent);\r\n\r\n    // Constraint Distribution for Pie Chart\r\n    const constraintCounts = data.reduce((acc, scope) => {\r\n      acc[scope.constraints] = (acc[scope.constraints] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setConstraintDistribution(Object.keys(constraintCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: constraintCounts[key],\r\n    })));\r\n\r\n    // Assumption Trends for Line Chart\r\n    const trendData = data.map(scope => ({\r\n      date: new Date(scope.createdDate).getTime(),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setAssumptionTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Constraint Distribution\r\n  const constraintChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Constraint Distribution' },\r\n    series: [{\r\n      name: 'Constraints',\r\n      colorByPoint: true,\r\n      data: constraintDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Assumption Trends\r\n  const assumptionTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Assumption Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Number of Assumptions' } },\r\n    series: [{\r\n      name: 'Assumptions',\r\n      data: assumptionTrends.map(item => [item.date]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Project Scopes Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Scopes</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalScopes}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Urgent Scopes</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {urgentScopes}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Constraint Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={constraintChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Assumption Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={assumptionTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ProjectScopesDashboard","_ref","fetchItems","scopeData","setScopeData","useState","totalScopes","setTotalScopes","urgentScopes","setUrgentScopes","constraintDistribution","setConstraintDistribution","assumptionTrends","setAssumptionTrends","loading","setLoading","useEffect","async","data","processScopeData","fetchDataAsync","length","urgent","filter","scope","tags","includes","constraintCounts","reduce","acc","constraints","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","date","Date","createdDate","getTime","sort","a","b","constraintChartOptions","chart","type","title","text","series","colorByPoint","assumptionTrendChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}