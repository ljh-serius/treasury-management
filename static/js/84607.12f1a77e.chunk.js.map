{"version":3,"file":"static/js/84607.12f1a77e.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/GeneralLedger/FiscalPeriods.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function FiscalPeriodsDashboard({ fetchItems }) {\r\n  const [periodsData, setPeriodsData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [totalLateFees, setTotalLateFees] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPeriodsData(data);\r\n      processPeriodsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processPeriodsData = (data) => {\r\n    // Status Distribution (Closed or Open)\r\n    const statusCounts = data.reduce((acc, period) => {\r\n      acc[period.isClosed] = (acc[period.isClosed] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key === 'yes' ? 'Closed' : 'Open',\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total Eco Contribution and Late Payment Fees\r\n    const totals = data.reduce(\r\n      (acc, period) => {\r\n        acc.ecoContribution += Number(period.ecoContribution) || 0;\r\n        acc.lateFees += Number(period.latePaymentFee) || 0;\r\n        return acc;\r\n      },\r\n      { ecoContribution: 0, lateFees: 0 }\r\n    );\r\n\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n    setTotalLateFees(totals.lateFees);\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Fiscal Period Status' },\r\n    series: [{ name: 'Periods', colorByPoint: true, data: statusDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Fiscal Periods Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Late Payment Fees</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalLateFees.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total late payment fees across all periods.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["FiscalPeriodsDashboard","_ref","fetchItems","periodsData","setPeriodsData","useState","statusDistribution","setStatusDistribution","ecoContributionTotal","setEcoContributionTotal","totalLateFees","setTotalLateFees","loading","setLoading","useEffect","async","data","processPeriodsData","fetchData","statusCounts","reduce","acc","period","isClosed","Object","keys","map","key","name","y","totals","ecoContribution","Number","lateFees","latePaymentFee","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}