{"version":3,"file":"static/js/18178.f057dfd4.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/EnergyManagement/RenewableEnergyInitiatives.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function RenewableEnergyInitiativesDashboard({ fetchItems }) {\r\n  const [initiativeData, setInitiativeData] = useState([]);\r\n  const [totalEnergyGenerated, setTotalEnergyGenerated] = useState(0);\r\n  const [totalCostSavings, setTotalCostSavings] = useState(0);\r\n  const [totalCarbonReduction, setTotalCarbonReduction] = useState(0);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [energyGeneratedTrends, setEnergyGeneratedTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setInitiativeData(data);\r\n      processInitiativeData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processInitiativeData = (data) => {\r\n    // Total Energy Generated, Cost Savings, and Carbon Reduction\r\n    const totalEnergy = data.reduce((acc, item) => acc + Number(item.energyGenerated), 0);\r\n    const totalSavings = data.reduce((acc, item) => acc + Number(item.costSavings), 0);\r\n    const totalCarbon = data.reduce((acc, item) => acc + Number(item.carbonReduction), 0);\r\n\r\n    setTotalEnergyGenerated(totalEnergy);\r\n    setTotalCostSavings(totalSavings);\r\n    setTotalCarbonReduction(totalCarbon);\r\n\r\n    // Tag Distribution for Pie Chart\r\n    const tagCounts = data.reduce((acc, initiative) => {\r\n      if (initiative.tags) {\r\n        initiative.tags.forEach(tag => {\r\n          acc[tag] = (acc[tag] || 0) + 1;\r\n        });\r\n      }\r\n      return acc;\r\n    }, {});\r\n    setTagsDistribution(Object.keys(tagCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: tagCounts[key],\r\n    })));\r\n\r\n    // Energy Generated Trends for Line Chart\r\n    const trendData = data.map(initiative => ({\r\n      date: new Date(initiative.startDate).getTime(),\r\n      energy: Number(initiative.energyGenerated),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setEnergyGeneratedTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Energy Generated Trends\r\n  const energyGeneratedChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Energy Generated Trends (MWh)' },\r\n    xAxis: { type: 'datetime', title: { text: 'Start Date' } },\r\n    yAxis: { title: { text: 'Energy Generated (MWh)' } },\r\n    series: [{\r\n      name: 'Energy Generated',\r\n      data: energyGeneratedTrends.map(item => [item.date, item.energy]),\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Tag Distribution\r\n  const tagChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Initiative Tags Distribution' },\r\n    series: [{\r\n      name: 'Tags',\r\n      colorByPoint: true,\r\n      data: tagsDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Renewable Energy Initiatives Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Energy Generated</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEnergyGenerated.toFixed(2)} MWh\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Cost Savings</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalCostSavings.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Carbon Reduction</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalCarbonReduction.toFixed(2)} tons CO2e\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Energy Generated Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={energyGeneratedChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Tag Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["RenewableEnergyInitiativesDashboard","_ref","fetchItems","initiativeData","setInitiativeData","useState","totalEnergyGenerated","setTotalEnergyGenerated","totalCostSavings","setTotalCostSavings","totalCarbonReduction","setTotalCarbonReduction","tagsDistribution","setTagsDistribution","energyGeneratedTrends","setEnergyGeneratedTrends","loading","setLoading","useEffect","async","data","processInitiativeData","fetchDataAsync","totalEnergy","reduce","acc","item","Number","energyGenerated","totalSavings","costSavings","totalCarbon","carbonReduction","tagCounts","initiative","tags","forEach","tag","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","date","Date","startDate","getTime","energy","sort","a","b","energyGeneratedChartOptions","chart","type","title","text","xAxis","yAxis","series","tagChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}