{"version":3,"file":"static/js/80806.0a4153a4.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/EnergyManagement/EnergyAudits.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst EnergyAuditAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // Calculate KPIs\r\n  const totalAudits = data.length;\r\n  const totalFindings = data.reduce((sum, audit) => sum + audit.findings.split(' ').length, 0);\r\n  const totalRecommendations = data.reduce((sum, audit) => sum + audit.recommendations.split(' ').length, 0);\r\n\r\n  // Highcharts options\r\n  const auditTimelineOptions = {\r\n    title: { text: 'Audits Over Time' },\r\n    xAxis: { categories: data.map((audit) => audit.auditDate) },\r\n    yAxis: { title: { text: 'Number of Findings' } },\r\n    series: [{ name: 'Findings', data: data.map((audit) => audit.findings.split(' ').length) }],\r\n  };\r\n\r\n  const recommendationChartOptions = {\r\n    title: { text: 'Recommendations Over Time' },\r\n    xAxis: { categories: data.map((audit) => audit.auditDate) },\r\n    yAxis: { title: { text: 'Number of Recommendations' } },\r\n    series: [{ name: 'Recommendations', data: data.map((audit) => audit.recommendations.split(' ').length) }],\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Audits</Typography>\r\n          <Typography variant=\"h4\">{totalAudits}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Findings</Typography>\r\n          <Typography variant=\"h4\">{totalFindings}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Recommendations</Typography>\r\n          <Typography variant=\"h4\">{totalRecommendations}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={auditTimelineOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={recommendationChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((audit, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{audit.auditDate}:</Typography>\r\n              {audit.tags.map((tag) => (\r\n                <Chip key={tag.id} label={tag.label} style={{ margin: '5px' }} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EnergyAuditAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalAudits","length","totalFindings","reduce","sum","audit","findings","split","totalRecommendations","recommendations","auditTimelineOptions","title","text","xAxis","categories","map","auditDate","yAxis","series","name","recommendationChartOptions","_jsxs","Grid","container","spacing","item","xs","md","Card","variant","gutterBottom","HighchartsReact","highcharts","Highcharts","options","index","tags","tag","Chip","label","style","margin","id"],"sourceRoot":""}