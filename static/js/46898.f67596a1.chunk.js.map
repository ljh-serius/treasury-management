{"version":3,"file":"static/js/46898.f67596a1.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Pricing/PriceLists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function PriceListsDashboard({ fetchItems }) {\r\n  const [priceListData, setPriceListData] = useState([]);\r\n  const [totalPriceLists, setTotalPriceLists] = useState(0);\r\n  const [averageDiscountRate, setAverageDiscountRate] = useState(0);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [priceTrends, setPriceTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPriceListData(data);\r\n      processPriceListData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processPriceListData = (data) => {\r\n    // Total Price Lists\r\n    setTotalPriceLists(data.length);\r\n\r\n    // Average Discount Rate\r\n    const totalDiscount = data.reduce((acc, priceList) => acc + Number(priceList.discountRate), 0);\r\n    setAverageDiscountRate(totalDiscount / data.length);\r\n\r\n    // Currency Distribution for Pie Chart\r\n    const currencyCounts = data.reduce((acc, priceList) => {\r\n      acc[priceList.currency] = (acc[priceList.currency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Price Trends Over Time\r\n    const trends = data.map(priceList => ({\r\n      date: new Date(priceList.validFrom).getTime(),\r\n      price: Number(priceList.basePrice),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setPriceTrends(trends);\r\n  };\r\n\r\n  // Highcharts options for Currency Distribution\r\n  const currencyChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Currency Distribution' },\r\n    series: [{\r\n      name: 'Currency',\r\n      colorByPoint: true,\r\n      data: currencyDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Price Trends Over Time\r\n  const priceTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Price Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Price' } },\r\n    series: [{\r\n      name: 'Base Price',\r\n      data: priceTrends.map(item => [item.date, item.price]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Price Lists Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Price Lists</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPriceLists}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Discount Rate (%)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageDiscountRate.toFixed(2)}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Currency Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Price Trends Over Time Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={priceTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["PriceListsDashboard","_ref","fetchItems","priceListData","setPriceListData","useState","totalPriceLists","setTotalPriceLists","averageDiscountRate","setAverageDiscountRate","currencyDistribution","setCurrencyDistribution","priceTrends","setPriceTrends","loading","setLoading","useEffect","async","data","processPriceListData","fetchDataAsync","length","totalDiscount","reduce","acc","priceList","Number","discountRate","currencyCounts","currency","Object","keys","map","key","name","y","trends","date","Date","validFrom","getTime","price","basePrice","sort","a","b","currencyChartOptions","chart","type","title","text","series","colorByPoint","priceTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}