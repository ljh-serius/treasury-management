{"version":3,"file":"static/js/22718.0523246e.chunk.js","mappings":"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","sources":["pages/Analysis/ExternalRelationships/VendorManagement/VendorScorecards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst VendorScorecardsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalScorecards: 0,\r\n    excellentVendors: 0,\r\n    goodVendors: 0,\r\n    averageVendors: 0,\r\n    poorVendors: 0,\r\n    averageScore: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const scorecards = await fetchItems();\r\n      setData(scorecards);\r\n      calculateKPIs(scorecards);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (items) => {\r\n    const totalScorecards = items.length;\r\n    const excellentVendors = items.filter((item) => item.overallRating === 'excellent').length;\r\n    const goodVendors = items.filter((item) => item.overallRating === 'good').length;\r\n    const averageVendors = items.filter((item) => item.overallRating === 'average').length;\r\n    const poorVendors = items.filter((item) => item.overallRating === 'poor').length;\r\n    const averageScore =\r\n      items.reduce((acc, curr) => acc + parseFloat(curr.score || 0), 0) / totalScorecards;\r\n\r\n    setKpis({\r\n      totalScorecards,\r\n      excellentVendors,\r\n      goodVendors,\r\n      averageVendors,\r\n      poorVendors,\r\n      averageScore: averageScore.toFixed(2),\r\n    });\r\n  };\r\n\r\n  const ratingChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Vendor Rating Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Vendors',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Excellent', y: kpis.excellentVendors },\r\n          { name: 'Good', y: kpis.goodVendors },\r\n          { name: 'Average', y: kpis.averageVendors },\r\n          { name: 'Poor', y: kpis.poorVendors },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const scoreChart = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Vendor Scores by Name',\r\n    },\r\n    xAxis: {\r\n      categories: data.map((item) => item.vendorName),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'Score',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Score',\r\n        data: data.map((item) => parseFloat(item.score || 0)),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Vendor Scorecards Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Scorecards</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalScorecards}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Excellent Vendors</Typography>\r\n              <Typography variant=\"h4\">{kpis.excellentVendors}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Good Vendors</Typography>\r\n              <Typography variant=\"h4\">{kpis.goodVendors}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Average Vendors</Typography>\r\n              <Typography variant=\"h4\">{kpis.averageVendors}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Poor Vendors</Typography>\r\n              <Typography variant=\"h4\">{kpis.poorVendors}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Average Score</Typography>\r\n              <Typography variant=\"h4\">{kpis.averageScore}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={ratingChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={scoreChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VendorScorecardsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalScorecards","excellentVendors","goodVendors","averageVendors","poorVendors","averageScore","useEffect","async","scorecards","calculateKPIs","loadData","items","length","filter","item","overallRating","reduce","acc","curr","parseFloat","score","toFixed","ratingChart","chart","type","title","text","series","name","colorByPoint","y","scoreChart","xAxis","categories","map","vendorName","yAxis","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}