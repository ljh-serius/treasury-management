{"version":3,"file":"static/js/79825.c458156e.chunk.js","mappings":"4QAKA,MAkIA,EAlIwCA,IAAqB,IAApB,WAAEC,GAAYD,EACnD,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAC7BG,aAAc,EACdC,oBAAqB,EACrBC,sBAAuB,EACvBC,cAAe,KAGnBC,EAAAA,EAAAA,YAAU,KACNV,IAAaW,MAAMC,IACfV,EAAQU,GACRC,EAAcD,EAAS,GACzB,GACH,CAACZ,IAEJ,MAAMa,EAAiBC,IACnB,MAAMR,EAAeQ,EAAMC,OACrBR,EAAsBO,EAAME,QAAQC,GAA2B,SAAlBA,EAAKC,WAAqBH,OACvEN,EAAgBK,EAAME,QAAQC,GAA2B,WAAlBA,EAAKC,WAAuBH,OACnEI,EAAsBL,EAAMM,QAAO,CAACC,EAAKJ,IAASI,EAAMC,OAAOL,EAAKM,iBAAiB,GAG3FlB,EAAQ,CACJC,eACAC,sBACAE,gBACAD,uBAN0BF,EAAea,EAAsBb,EAAe,GAMjCkB,QAAQ,IACvD,EAIAC,EAAmC,CACrCC,MAAO,CACHC,KAAM,OAEVC,MAAO,CACHC,KAAM,gCAEVC,OAAQ,CACJ,CACIC,KAAM,WACNC,cAAc,EACd/B,KAAM,CACF,CAAE8B,KAAM,MAAOE,EAAGhC,EAAKe,QAAQC,GAA2B,QAAlBA,EAAKC,WAAoBH,QACjE,CAAEgB,KAAM,SAAUE,EAAGhC,EAAKe,QAAQC,GAA2B,WAAlBA,EAAKC,WAAuBH,QACvE,CAAEgB,KAAM,OAAQE,EAAGhC,EAAKe,QAAQC,GAA2B,SAAlBA,EAAKC,WAAqBH,QACnE,CAAEgB,KAAM,SAAUE,EAAGhC,EAAKe,QAAQC,GAA2B,WAAlBA,EAAKC,WAAuBH,YAOjFmB,EAA6B,CAC/BR,MAAO,CACHC,KAAM,UAEVC,MAAO,CACHC,KAAM,+CAEVM,MAAO,CACHC,WAAY,CAAC,MAAO,SAAU,OAAQ,WAE1CN,OAAQ,CACJ,CACIC,KAAM,0BACN9B,KAAM,CACFoC,EAAqB,OACrBA,EAAqB,UACrBA,EAAqB,QACrBA,EAAqB,cAM/BA,EAAwBnB,IAC1B,MAAMoB,EAAkBrC,EAAKe,QAAQC,GAASA,EAAKC,WAAaA,IAC1DqB,EAAYD,EAAgBlB,QAAO,CAACC,EAAKJ,IAASI,EAAMC,OAAOL,EAAKM,iBAAiB,GAC3F,OAAOe,EAAgBvB,OAASwB,EAAYD,EAAgBvB,OAAS,CAAC,EAG1E,OACIyB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEC,SAAA,EAEvBC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEJ,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAAAL,UACDJ,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAC,mBACzBC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAExC,EAAKE,uBAI3CuC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEJ,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAAAL,UACDJ,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAC,2BACzBC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAExC,EAAKG,8BAI3CsC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEJ,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAAAL,UACDJ,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAC,oBACzBC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAExC,EAAKK,wBAI3CoC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEJ,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAAAL,UACDJ,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAC,gCACzBC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAQ,KAAIR,SAAExC,EAAKI,gCAM3CqC,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACxB,MAAI,EAAC6B,GAAI,GAAIE,GAAI,EAAEJ,UACrBC,EAAAA,EAAAA,KAACQ,IAAe,CAACC,WAAYC,IAAYC,QAAS/B,OAEtDoB,EAAAA,EAAAA,KAACJ,EAAAA,GAAI,CAACxB,MAAI,EAAC6B,GAAI,GAAIE,GAAI,EAAEJ,UACrBC,EAAAA,EAAAA,KAACQ,IAAe,CAACC,WAAYC,IAAYC,QAAStB,QAEnD,C","sources":["pages/Analysis/CustomerSupport/SupportTickets/ResolutionTimeTracking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst ResolutionTimeTrackingAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState([]);\r\n    const [kpis, setKpis] = useState({\r\n        totalTickets: 0,\r\n        highPriorityTickets: 0,\r\n        averageResolutionTime: 0,\r\n        urgentTickets: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchItems().then((response) => {\r\n            setData(response);\r\n            calculateKpis(response);\r\n        });\r\n    }, [fetchItems]);\r\n\r\n    const calculateKpis = (items) => {\r\n        const totalTickets = items.length;\r\n        const highPriorityTickets = items.filter((item) => item.priority === 'high').length;\r\n        const urgentTickets = items.filter((item) => item.priority === 'urgent').length;\r\n        const totalResolutionTime = items.reduce((sum, item) => sum + Number(item.resolutionTime), 0);\r\n        const averageResolutionTime = totalTickets ? totalResolutionTime / totalTickets : 0;\r\n\r\n        setKpis({\r\n            totalTickets,\r\n            highPriorityTickets,\r\n            urgentTickets,\r\n            averageResolutionTime: averageResolutionTime.toFixed(2),\r\n        });\r\n    };\r\n\r\n    // Highcharts options for Priority Distribution\r\n    const priorityDistributionChartOptions = {\r\n        chart: {\r\n            type: 'pie',\r\n        },\r\n        title: {\r\n            text: 'Ticket Priority Distribution',\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Priority',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Low', y: data.filter((item) => item.priority === 'low').length },\r\n                    { name: 'Medium', y: data.filter((item) => item.priority === 'medium').length },\r\n                    { name: 'High', y: data.filter((item) => item.priority === 'high').length },\r\n                    { name: 'Urgent', y: data.filter((item) => item.priority === 'urgent').length },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    // Highcharts options for Average Resolution Time by Priority\r\n    const resolutionTimeChartOptions = {\r\n        chart: {\r\n            type: 'column',\r\n        },\r\n        title: {\r\n            text: 'Average Resolution Time by Priority (hours)',\r\n        },\r\n        xAxis: {\r\n            categories: ['Low', 'Medium', 'High', 'Urgent'],\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Resolution Time (hours)',\r\n                data: [\r\n                    calculateAverageTime('low'),\r\n                    calculateAverageTime('medium'),\r\n                    calculateAverageTime('high'),\r\n                    calculateAverageTime('urgent'),\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const calculateAverageTime = (priority) => {\r\n        const filteredTickets = data.filter((item) => item.priority === priority);\r\n        const totalTime = filteredTickets.reduce((sum, item) => sum + Number(item.resolutionTime), 0);\r\n        return filteredTickets.length ? totalTime / filteredTickets.length : 0;\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            {/* KPIs */}\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Tickets</Typography>\r\n                        <Typography variant=\"h4\">{kpis.totalTickets}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">High Priority Tickets</Typography>\r\n                        <Typography variant=\"h4\">{kpis.highPriorityTickets}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Urgent Tickets</Typography>\r\n                        <Typography variant=\"h4\">{kpis.urgentTickets}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Avg. Resolution Time (hrs)</Typography>\r\n                        <Typography variant=\"h4\">{kpis.averageResolutionTime}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            {/* Charts */}\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={priorityDistributionChartOptions} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={resolutionTimeChartOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ResolutionTimeTrackingAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalTickets","highPriorityTickets","averageResolutionTime","urgentTickets","useEffect","then","response","calculateKpis","items","length","filter","item","priority","totalResolutionTime","reduce","sum","Number","resolutionTime","toFixed","priorityDistributionChartOptions","chart","type","title","text","series","name","colorByPoint","y","resolutionTimeChartOptions","xAxis","categories","calculateAverageTime","filteredTickets","totalTime","_jsxs","Grid","container","spacing","children","_jsx","xs","sm","md","Card","CardContent","Typography","variant","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}