{"version":3,"file":"static/js/16826.2396d079.chunk.js","mappings":"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","sources":["pages/Analysis/HrManagement/PerformanceReviews/ReviewSchedules.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function ReviewSchedulesDashboard({ fetchItems }) {\r\n  const [reviewData, setReviewData] = useState([]);\r\n  const [totalReviews, setTotalReviews] = useState(0);\r\n  const [averageRating, setAverageRating] = useState(0);\r\n  const [ratingDistribution, setRatingDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setReviewData(data);\r\n      processReviewData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processReviewData = (data) => {\r\n    setTotalReviews(data.length);\r\n\r\n    // Calculate average rating\r\n    const totalRating = data.reduce((acc, review) => acc + review.performanceRating, 0);\r\n    setAverageRating(data.length > 0 ? totalRating / data.length : 0);\r\n\r\n    // Calculate rating distribution\r\n    const ratingMap = {};\r\n    data.forEach((item) => {\r\n      const rating = item.performanceRating;\r\n      ratingMap[rating] = (ratingMap[rating] || 0) + 1;\r\n    });\r\n    const ratingArray = Object.entries(ratingMap).map(([rating, count]) => ({\r\n      name: `Rating ${rating}`,\r\n      y: count,\r\n    }));\r\n    setRatingDistribution(ratingArray);\r\n  };\r\n\r\n  // Highcharts options for Review Rating Distribution\r\n  const ratingChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Performance Rating Distribution' },\r\n    xAxis: { type: 'category' },\r\n    yAxis: { title: { text: 'Number of Reviews' } },\r\n    series: [\r\n      {\r\n        name: 'Reviews',\r\n        data: ratingDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Review Schedules Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Reviews</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalReviews}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Rating</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageRating.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Review Rating Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={ratingChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ReviewSchedulesDashboard","_ref","fetchItems","reviewData","setReviewData","useState","totalReviews","setTotalReviews","averageRating","setAverageRating","ratingDistribution","setRatingDistribution","loading","setLoading","useEffect","async","data","processReviewData","fetchData","length","totalRating","reduce","acc","review","performanceRating","ratingMap","forEach","item","rating","ratingArray","Object","entries","map","_ref2","count","name","y","ratingChartOptions","chart","type","title","text","xAxis","yAxis","series","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}