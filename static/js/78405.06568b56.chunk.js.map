{"version":3,"file":"static/js/78405.06568b56.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Leads/LeadNurturing.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function LeadNurturingDashboard({ fetchItems }) {\r\n  const [leadData, setLeadData] = useState([]);\r\n  const [totalLeads, setTotalLeads] = useState(0);\r\n  const [leadsByStage, setLeadsByStage] = useState([]);\r\n  const [followUpLeads, setFollowUpLeads] = useState(0);\r\n  const [nextContactSchedule, setNextContactSchedule] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setLeadData(data);\r\n      processLeadData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processLeadData = (data) => {\r\n    // Total Leads\r\n    setTotalLeads(data.length);\r\n  \r\n    // Count Leads Needing Follow-Up\r\n    const followUp = data.filter(lead => lead.tags.includes('follow-up-needed')).length;\r\n    setFollowUpLeads(followUp);\r\n  \r\n    // Leads by Nurture Stage\r\n    const stageCounts = data.reduce((acc, lead) => {\r\n      acc[lead.nurtureStage] = (acc[lead.nurtureStage] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setLeadsByStage(Object.keys(stageCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: stageCounts[key],\r\n    })));\r\n  \r\n    // Group leads by contact date\r\n    const groupedByDate = data.reduce((acc, lead) => {\r\n      const contactDate = new Date(lead.nextContactDate).setHours(0, 0, 0, 0); // Normalize to date\r\n      if (!acc[contactDate]) {\r\n        acc[contactDate] = 0;\r\n      }\r\n      acc[contactDate] += 1;\r\n      return acc;\r\n    }, {});\r\n  \r\n    // Create data points for the chart\r\n    const schedule = Object.keys(groupedByDate).map(date => [\r\n      parseFloat(date),  // Convert date string to number\r\n      groupedByDate[date] // Count of leads for that date\r\n    ]).sort((a, b) => a[0] - b[0]);\r\n  \r\n    setNextContactSchedule(schedule);\r\n  };\r\n  \r\n  // Highcharts options for Next Contact Schedule\r\n  const contactScheduleChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Next Contact Schedule' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Leads' } },\r\n    series: [{\r\n      name: 'Next Contact',\r\n      data: nextContactSchedule,  // Data is now in the correct [date, count] format\r\n    }],\r\n  };\r\n  \r\n\r\n  // Highcharts options for Leads by Nurture Stage\r\n  const stageChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Leads by Nurture Stage' },\r\n    series: [{\r\n      name: 'Leads',\r\n      colorByPoint: true,\r\n      data: leadsByStage,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Lead Nurturing Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Leads</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalLeads}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Follow-up Leads</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {followUpLeads}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Leads by Nurture Stage Chart */}\r\n            <Grid item xs={12} md={6}>\r\n              <HighchartsReact highcharts={Highcharts} options={stageChartOptions} />\r\n            </Grid>\r\n\r\n          {/* Next Contact Schedule Chart */}\r\n          {/* <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={contactScheduleChartOptions} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["LeadNurturingDashboard","_ref","fetchItems","leadData","setLeadData","useState","totalLeads","setTotalLeads","leadsByStage","setLeadsByStage","followUpLeads","setFollowUpLeads","nextContactSchedule","setNextContactSchedule","loading","setLoading","useEffect","async","data","processLeadData","fetchDataAsync","length","followUp","filter","lead","tags","includes","stageCounts","reduce","acc","nurtureStage","Object","keys","map","key","name","charAt","toUpperCase","slice","y","groupedByDate","contactDate","Date","nextContactDate","setHours","schedule","date","parseFloat","sort","a","b","stageChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}