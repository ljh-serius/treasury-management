{"version":3,"file":"static/js/64519.c09b688c.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/TreasuryManagement/CashFlowForecasts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function CashFlowForecastsAnalytics({ fetchItems }) {\r\n  const [cashFlowData, setCashFlowData] = useState([]);\r\n  const [netCashFlow, setNetCashFlow] = useState(0);\r\n  const [cashFlowDistribution, setCashFlowDistribution] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setCashFlowData(data);\r\n      processCashFlowData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processCashFlowData = (data) => {\r\n    // Net Cash Flow Calculation\r\n    const netCash = data.reduce((sum, item) => sum + Number(item.netCashFlow), 0);\r\n    setNetCashFlow(netCash);\r\n\r\n    // Cash Flow Distribution\r\n    const distribution = data.map(item => ({\r\n      name: item.fiscalPeriod,\r\n      y: Number(item.netCashFlow),\r\n    }));\r\n\r\n    setCashFlowDistribution(distribution);\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, item) => {\r\n      item.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(tag => ({\r\n      name: tag,\r\n      y: tagsCounts[tag],\r\n    })));\r\n  };\r\n\r\n  const cashFlowChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Net Cash Flow Over Time' },\r\n    series: [{ name: 'Net Cash Flow', data: cashFlowDistribution }],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tags Distribution' },\r\n    series: [{ name: 'Tags', colorByPoint: true, data: tagsDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>Cash Flow Forecasts Analytics</Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Net Cash Flow</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${netCashFlow.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Charts Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={cashFlowChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CashFlowForecastsAnalytics","_ref","fetchItems","cashFlowData","setCashFlowData","useState","netCashFlow","setNetCashFlow","cashFlowDistribution","setCashFlowDistribution","tagsDistribution","setTagsDistribution","loading","setLoading","useEffect","async","data","processCashFlowData","fetchData","netCash","reduce","sum","item","Number","distribution","map","name","fiscalPeriod","y","tagsCounts","acc","tags","forEach","tag","Object","keys","cashFlowChartOptions","chart","type","title","text","series","tagsChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","Card","CardContent","fontWeight","toFixed","md","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}