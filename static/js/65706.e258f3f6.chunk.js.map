{"version":3,"file":"static/js/65706.e258f3f6.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/AccountsReceivable/CustomerInvoices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function CustomerInvoicesAnalysisDashboard({ fetchItems }) {\r\n  const [invoicesData, setInvoicesData] = useState([]);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [paymentTermsDistribution, setPaymentTermsDistribution] = useState([]);\r\n  const [monthlyTrendsData, setMonthlyTrendsData] = useState([]);\r\n  const [totalAmountExclVAT, setTotalAmountExclVAT] = useState(0);\r\n  const [totalAmountInclVAT, setTotalAmountInclVAT] = useState(0);\r\n  const [totalLateFees, setTotalLateFees] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setInvoicesData(data);\r\n      processInvoiceData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processInvoiceData = (data) => {\r\n    // Currency Distribution\r\n    const currencyCounts = data.reduce((acc, invoice) => {\r\n      acc[invoice.preferredCurrency] = (acc[invoice.preferredCurrency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Payment Terms Distribution\r\n    const paymentTermsCounts = data.reduce((acc, invoice) => {\r\n      acc[invoice.paymentTerms] = (acc[invoice.paymentTerms] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setPaymentTermsDistribution(Object.keys(paymentTermsCounts).map(key => ({\r\n      name: key,\r\n      y: paymentTermsCounts[key],\r\n    })));\r\n\r\n    // Monthly Trends Data (based on 'issuedAt')\r\n    const trendCounts = data.reduce((acc, invoice) => {\r\n      const month = new Date(invoice.issuedAt).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setMonthlyTrendsData(Object.keys(trendCounts).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: trendCounts[key],\r\n    })));\r\n\r\n    // Total Amounts Excluding and Including VAT\r\n    const totals = data.reduce(\r\n      (acc, invoice) => {\r\n        acc.exclVAT += Number(invoice.totalAmountExclVAT) || 0;\r\n        acc.inclVAT += Number(invoice.totalAmountInclVAT) || 0;\r\n        acc.lateFees += Number(invoice.latePaymentFee) || 0;\r\n        acc.ecoContribution += Number(invoice.ecoContribution) || 0;\r\n        return acc;\r\n      },\r\n      { exclVAT: 0, inclVAT: 0, lateFees: 0, ecoContribution: 0 }\r\n    );\r\n\r\n    setTotalAmountExclVAT(totals.exclVAT);\r\n    setTotalAmountInclVAT(totals.inclVAT);\r\n    setTotalLateFees(totals.lateFees);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n  };\r\n\r\n  const currencyChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Currency Distribution' },\r\n    series: [{ name: 'Currencies', colorByPoint: true, data: currencyDistribution }],\r\n  };\r\n\r\n  const paymentTermsChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Payment Terms Distribution' },\r\n    series: [{ name: 'Payment Terms', data: paymentTermsDistribution }],\r\n  };\r\n\r\n  const monthlyTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Monthly Invoice Trends' },\r\n    xAxis: { categories: monthlyTrendsData.map(data => data.name) },\r\n    series: [{ name: 'Number of Invoices', data: monthlyTrendsData.map(data => data.y) }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Customer Invoices Analysis Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Amount (Excl. VAT)</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalAmountExclVAT.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total value of all invoices excluding VAT.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Amount (Incl. VAT)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalAmountInclVAT.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total value of all invoices including VAT.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Late Payment Fees</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalLateFees.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total late payment fees across all invoices.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contribution (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={paymentTermsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={monthlyTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CustomerInvoicesAnalysisDashboard","_ref","fetchItems","invoicesData","setInvoicesData","useState","currencyDistribution","setCurrencyDistribution","paymentTermsDistribution","setPaymentTermsDistribution","monthlyTrendsData","setMonthlyTrendsData","totalAmountExclVAT","setTotalAmountExclVAT","totalAmountInclVAT","setTotalAmountInclVAT","totalLateFees","setTotalLateFees","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processInvoiceData","fetchData","currencyCounts","reduce","acc","invoice","preferredCurrency","Object","keys","map","key","name","y","paymentTermsCounts","paymentTerms","trendCounts","month","Date","issuedAt","getMonth","totals","exclVAT","Number","inclVAT","lateFees","latePaymentFee","ecoContribution","currencyChartOptions","chart","type","title","text","series","colorByPoint","paymentTermsChartOptions","monthlyTrendsChartOptions","xAxis","categories","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}