{"version":3,"file":"static/js/50050.362d4796.chunk.js","mappings":"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","sources":["pages/Analysis/OperationsAssetManagement/Inventory/StockLevels.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function StockLevelDashboard({ fetchData }) {\r\n  const [stockData, setStockData] = useState([]);\r\n  const [totalStock, setTotalStock] = useState(0);\r\n  const [outOfStockItems, setOutOfStockItems] = useState(0);\r\n  const [reorderNeeded, setReorderNeeded] = useState(0);\r\n  const [stockLevelTrends, setStockLevelTrends] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setStockData(data);\r\n      processStockData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processStockData = (data) => {\r\n    // Total Stock\r\n    const totalQty = data.reduce((acc, stock) => acc + Number(stock.quantity), 0);\r\n    setTotalStock(totalQty);\r\n\r\n    // Count Out of Stock Items and Reorder Needed\r\n    const outOfStock = data.filter(stock => stock.status === 'out_of_stock').length;\r\n    setOutOfStockItems(outOfStock);\r\n\r\n    const reorder = data.filter(stock => Number(stock.quantity) <= Number(stock.reorderLevel)).length;\r\n    setReorderNeeded(reorder);\r\n\r\n    // Stock Level Trends for Column Chart\r\n    const trendData = data.map(stock => ({\r\n      name: stock.productName,\r\n      y: Number(stock.quantity),\r\n    }));\r\n    setStockLevelTrends(trendData);\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, stock) => {\r\n      acc[stock.status] = (acc[stock.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.replace('_', ' ').toUpperCase(),\r\n      y: statusCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Stock Level Trends\r\n  const stockLevelChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Stock Level Trends' },\r\n    series: [{\r\n      name: 'Quantity',\r\n      data: stockLevelTrends,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Inventory Status Distribution' },\r\n    series: [{\r\n      name: 'Items',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Stock Level Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Stock Quantity</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalStock}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Out of Stock Items</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {outOfStockItems}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Reorder Needed</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {reorderNeeded}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Stock Level Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={stockLevelChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["StockLevelDashboard","_ref","fetchData","stockData","setStockData","useState","totalStock","setTotalStock","outOfStockItems","setOutOfStockItems","reorderNeeded","setReorderNeeded","stockLevelTrends","setStockLevelTrends","statusDistribution","setStatusDistribution","loading","setLoading","useEffect","async","data","processStockData","fetchDataAsync","totalQty","reduce","acc","stock","Number","quantity","outOfStock","filter","status","length","reorder","reorderLevel","trendData","map","name","productName","y","statusCounts","Object","keys","key","replace","toUpperCase","stockLevelChartOptions","chart","type","title","text","series","statusChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}