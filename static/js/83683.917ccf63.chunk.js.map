{"version":3,"file":"static/js/83683.917ccf63.chunk.js","mappings":"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","sources":["pages/Analysis/CrisisRiskManagement/BusinessContinuity/DisasterRecoveryPlans.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Box } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst DisasterRecoveryAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalPlans: 0,\r\n    activePlans: 0,\r\n    archivedPlans: 0,\r\n    draftPlans: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetchItems();\r\n      setData(result);\r\n\r\n      // Calculate KPIs\r\n      const totalPlans = result.length;\r\n      const activePlans = result.filter(plan => plan.status === 'active').length;\r\n      const archivedPlans = result.filter(plan => plan.status === 'archived').length;\r\n      const draftPlans = result.filter(plan => plan.status === 'draft').length;\r\n\r\n      setKpis({ totalPlans, activePlans, archivedPlans, draftPlans });\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  // Highcharts configuration for Plans Status Distribution\r\n  const statusDistributionOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Plan Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Plans',\r\n        data: [\r\n          { name: 'Active', y: kpis.activePlans },\r\n          { name: 'Archived', y: kpis.archivedPlans },\r\n          { name: 'Draft', y: kpis.draftPlans },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={3}>\r\n        {/* KPIs */}\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Total Plans</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalPlans}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Active Plans</Typography>\r\n              <Typography variant=\"h4\">{kpis.activePlans}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Archived Plans</Typography>\r\n              <Typography variant=\"h4\">{kpis.archivedPlans}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Draft Plans</Typography>\r\n              <Typography variant=\"h4\">{kpis.draftPlans}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Highcharts for Plan Status Distribution */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Plan Status Distribution</Typography>\r\n              <HighchartsReact highcharts={Highcharts} options={statusDistributionOptions} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DisasterRecoveryAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalPlans","activePlans","archivedPlans","draftPlans","useEffect","async","result","length","filter","plan","status","fetchData","statusDistributionOptions","chart","type","title","text","series","name","y","_jsx","Box","sx","flexGrow","children","_jsxs","Grid","container","spacing","item","xs","md","Card","CardContent","Typography","variant","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}