{"version":3,"file":"static/js/58707.df4a083f.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/Taxation/VatGstRecords.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function VATGSTDashboard({ fetchItems }) {\r\n  const [recordsData, setRecordsData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [totalVATAmount, setTotalVATAmount] = useState(0);\r\n  const [totalGSTAmount, setTotalGSTAmount] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setRecordsData(data);\r\n      processRecordsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processRecordsData = (data) => {\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, record) => {\r\n      acc[record.status] = (acc[record.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total VAT, GST Amount, and Eco Contribution\r\n    const totals = data.reduce(\r\n      (acc, record) => {\r\n        acc.totalVAT += Number(record.vatAmount) || 0;\r\n        acc.totalGST += Number(record.gstAmount) || 0;\r\n        acc.ecoContribution += Number(record.ecoContribution) || 0;\r\n        return acc;\r\n      },\r\n      { totalVAT: 0, totalGST: 0, ecoContribution: 0 }\r\n    );\r\n\r\n    setTotalVATAmount(totals.totalVAT);\r\n    setTotalGSTAmount(totals.totalGST);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'VAT/GST Status Distribution' },\r\n    series: [{ name: 'Records', colorByPoint: true, data: statusDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          VAT/GST Records Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total VAT Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalVATAmount.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total VAT amount across all records.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total GST Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalGSTAmount.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total GST amount across all records.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["VATGSTDashboard","_ref","fetchItems","recordsData","setRecordsData","useState","statusDistribution","setStatusDistribution","totalVATAmount","setTotalVATAmount","totalGSTAmount","setTotalGSTAmount","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processRecordsData","fetchData","statusCounts","reduce","acc","record","status","Object","keys","map","key","name","y","totals","totalVAT","Number","vatAmount","totalGST","gstAmount","ecoContribution","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}