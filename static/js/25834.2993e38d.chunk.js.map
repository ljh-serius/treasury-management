{"version":3,"file":"static/js/25834.2993e38d.chunk.js","mappings":"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","sources":["pages/Analysis/CorporateSocialResponsibility/CommunityOutreach/CommunityInvestment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst CommunityInvestmentAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalInvestments: 0,\r\n    totalAmount: 0,\r\n    completedProjects: 0,\r\n    ongoingProjects: 0,\r\n    plannedProjects: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const investments = await fetchItems();\r\n      setData(investments);\r\n      calculateKPIs(investments);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (investments) => {\r\n    const totalInvestments = investments.length;\r\n    const totalAmount = investments.reduce((sum, item) => sum + item.investmentAmount, 0);\r\n    const completedProjects = investments.filter((inv) => inv.status === 'completed').length;\r\n    const ongoingProjects = investments.filter((inv) => inv.status === 'ongoing').length;\r\n    const plannedProjects = investments.filter((inv) => inv.status === 'planned').length;\r\n\r\n    setKpis({\r\n      totalInvestments,\r\n      totalAmount,\r\n      completedProjects,\r\n      ongoingProjects,\r\n      plannedProjects,\r\n    });\r\n  };\r\n\r\n  const investmentStatusChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Investment Status Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Projects',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Completed', y: kpis.completedProjects },\r\n          { name: 'Ongoing', y: kpis.ongoingProjects },\r\n          { name: 'Planned', y: kpis.plannedProjects },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const investmentAmountChart = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Investment Amount by Project',\r\n    },\r\n    xAxis: {\r\n      categories: data.map((item) => item.projectName),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'Investment Amount (USD)',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Investment Amount',\r\n        data: data.map((item) => item.investmentAmount),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Community Investment Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Investments</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalInvestments}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Investment Amount</Typography>\r\n              <Typography variant=\"h4\">${kpis.totalAmount.toFixed(2)}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Completed Projects</Typography>\r\n              <Typography variant=\"h4\">{kpis.completedProjects}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Ongoing Projects</Typography>\r\n              <Typography variant=\"h4\">{kpis.ongoingProjects}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Planned Projects</Typography>\r\n              <Typography variant=\"h4\">{kpis.plannedProjects}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={investmentStatusChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={investmentAmountChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommunityInvestmentAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalInvestments","totalAmount","completedProjects","ongoingProjects","plannedProjects","useEffect","async","investments","calculateKPIs","loadData","length","reduce","sum","item","investmentAmount","filter","inv","status","investmentStatusChart","chart","type","title","text","series","name","colorByPoint","y","investmentAmountChart","xAxis","categories","map","projectName","yAxis","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","toFixed","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}