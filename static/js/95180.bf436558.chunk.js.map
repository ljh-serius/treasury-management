{"version":3,"file":"static/js/95180.bf436558.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/SustainabilityReports/WasteManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function WasteManagementDashboard({ fetchItems }) {\r\n  const [wasteData, setWasteData] = useState([]);\r\n  const [totalWaste, setTotalWaste] = useState(0);\r\n  const [wasteTypeDistribution, setWasteTypeDistribution] = useState([]);\r\n  const [reductionTrends, setReductionTrends] = useState([]);\r\n  const [recyclingTrends, setRecyclingTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setWasteData(data);\r\n      processWasteData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processWasteData = (data) => {\r\n    // Total Waste Generated\r\n    const totalGenerated = data.reduce((acc, record) => acc + Number(record.totalWasteGenerated), 0);\r\n    setTotalWaste(totalGenerated);\r\n\r\n    // Waste Type Distribution for Pie Chart\r\n    const wasteTypeCounts = data.reduce((acc, record) => {\r\n      acc[record.wasteType] = (acc[record.wasteType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setWasteTypeDistribution(Object.keys(wasteTypeCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: wasteTypeCounts[key],\r\n    })));\r\n\r\n    // Reduction Trends for Line Chart (Achieved vs Target)\r\n    const reductionData = data.map(record => ({\r\n      date: new Date(record.year).getTime(),\r\n      target: Number(record.reductionTarget),\r\n      achieved: Number(record.achievedReduction),\r\n    }));\r\n    setReductionTrends(reductionData);\r\n\r\n    // Recycling Trends for Line Chart (Waste Recycled)\r\n    const recyclingData = data.map(record => ({\r\n      date: new Date(record.year).getTime(),\r\n      recycled: Number(record.wasteRecycled),\r\n    }));\r\n    setRecyclingTrends(recyclingData);\r\n  };\r\n\r\n  // Highcharts options for Waste Type Distribution\r\n  const wasteTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Waste Type Distribution' },\r\n    series: [{\r\n      name: 'Waste Types',\r\n      colorByPoint: true,\r\n      data: wasteTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Reduction Trends (Achieved vs Target)\r\n  const reductionTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Waste Reduction Target vs Achieved' },\r\n    xAxis: { type: 'datetime', title: { text: 'Year' } },\r\n    yAxis: { title: { text: 'Reduction (%)' } },\r\n    series: [\r\n      {\r\n        name: 'Target Reduction (%)',\r\n        data: reductionTrends.map(item => [item.date, item.target]),\r\n      },\r\n      {\r\n        name: 'Achieved Reduction (%)',\r\n        data: reductionTrends.map(item => [item.date, item.achieved]),\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for Recycling Trends\r\n  const recyclingTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Waste Recycling Trends (tons)' },\r\n    xAxis: { type: 'datetime', title: { text: 'Year' } },\r\n    yAxis: { title: { text: 'Recycled Waste (tons)' } },\r\n    series: [{\r\n      name: 'Waste Recycled',\r\n      data: recyclingTrends.map(item => [item.date, item.recycled]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Waste Management Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Waste Generated (tons)</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalWaste.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Waste Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={wasteTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Reduction Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={reductionTrendChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Recycling Trends Chart */}\r\n          <Grid item xs={12} md={12} sx={{ marginTop: 4 }}>\r\n            <HighchartsReact highcharts={Highcharts} options={recyclingTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["WasteManagementDashboard","_ref","fetchItems","wasteData","setWasteData","useState","totalWaste","setTotalWaste","wasteTypeDistribution","setWasteTypeDistribution","reductionTrends","setReductionTrends","recyclingTrends","setRecyclingTrends","loading","setLoading","useEffect","async","data","processWasteData","fetchDataAsync","totalGenerated","reduce","acc","record","Number","totalWasteGenerated","wasteTypeCounts","wasteType","Object","keys","map","key","name","charAt","toUpperCase","slice","y","reductionData","date","Date","year","getTime","target","reductionTarget","achieved","achievedReduction","recyclingData","recycled","wasteRecycled","wasteTypeChartOptions","chart","type","title","text","series","colorByPoint","reductionTrendChartOptions","xAxis","yAxis","item","recyclingTrendChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}