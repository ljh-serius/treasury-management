{"version":3,"file":"static/js/26266.d98f5e13.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/Taxation/WithholdingTaxes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function WithholdingTaxesAnalytics({ fetchItems }) {\r\n  const [taxesData, setTaxesData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [totalWithheldAmount, setTotalWithheldAmount] = useState(0);\r\n  const [topPayers, setTopPayers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setTaxesData(data);\r\n      processTaxesData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processTaxesData = (data) => {\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, tax) => {\r\n      acc[tax.status] = (acc[tax.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total Withheld Amount\r\n    const total = data.reduce((sum, tax) => sum + Number(tax.withheldAmount), 0);\r\n    setTotalWithheldAmount(total);\r\n\r\n    // Top 5 Payers\r\n    const topPayersList = data\r\n      .sort((a, b) => Number(b.withheldAmount) - Number(a.withheldAmount))\r\n      .slice(0, 5);\r\n    setTopPayers(topPayersList);\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Status Distribution' },\r\n    series: [{ name: 'Statuses', colorByPoint: true, data: statusDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Withholding Taxes Analytics\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Withheld Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalWithheldAmount.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Top 5 Payers</Typography>\r\n                <ol>\r\n                  {topPayers.map(tax => (\r\n                    <li key={tax.withholdingId}>\r\n                      <Typography variant=\"body2\">\r\n                        {tax.payer} - Withheld: ${Number(tax.withheldAmount).toFixed(2)}\r\n                      </Typography>\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["WithholdingTaxesAnalytics","_ref","fetchItems","taxesData","setTaxesData","useState","statusDistribution","setStatusDistribution","totalWithheldAmount","setTotalWithheldAmount","topPayers","setTopPayers","loading","setLoading","useEffect","async","data","processTaxesData","fetchData","statusCounts","reduce","acc","tax","status","Object","keys","map","key","name","y","total","sum","Number","withheldAmount","topPayersList","sort","a","b","slice","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","payer","withholdingId","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}