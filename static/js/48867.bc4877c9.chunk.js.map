{"version":3,"file":"static/js/48867.bc4877c9.chunk.js","mappings":"wTAKe,SAASA,EAA4BC,GAAkB,IAAjB,WAAEC,GAAYD,EACjE,MAAOE,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IACtCG,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,KACtDK,EAAuBC,IAA4BN,EAAAA,EAAAA,UAAS,CAAC,IAC7DO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAEvCS,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAad,IACnBE,EAAmBY,GACnBC,EAAgBD,GAChBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAAChB,IAEJ,MAAMe,EAAmBD,IACvBT,EAAcS,EAAKG,QAEnB,MAAMC,EAAY,CAAC,EACbC,EAAsB,CAAC,EAE7BL,EAAKM,SAASC,IAEZ,MAAMC,EAASD,EAAKC,OACpBJ,EAAUI,IAAWJ,EAAUI,IAAW,GAAK,EAG/C,MAAMC,EAAmBF,EAAKE,iBAC9BJ,EAAoBI,IAAqBJ,EAAoBI,IAAqB,GAAK,CAAC,IAG1F,MAAMC,EAAcC,OAAOC,QAAQR,GAAWS,KAAIC,IAAA,IAAEN,EAAQO,GAAMD,EAAA,MAAM,CACtEE,KAAMR,EACNS,EAAGF,EACJ,IAEDtB,EAAsBiB,GACtBf,EAAyBU,EAAoB,EAIzCa,EAAqB,CACzBC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,uBACfC,OAAQ,CACN,CACEP,KAAM,SACNQ,cAAc,EACdxB,KAAMR,KAKZ,OACEiC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAM1C,EAAQmC,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,qCAItCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,UAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACtC,MAAI,EAACyC,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAAAnB,UACHN,EAAAA,EAAAA,MAAC0B,EAAAA,EAAW,CAAApB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,4BACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEwB,WAAY,QAASrB,SAC/DzC,cAOX0C,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGnB,GAAI,CAAEyB,UAAW,GAAItB,UAE/CC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACtC,MAAI,EAACyC,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAASvC,aAM9D,C","sources":["pages/Analysis/GovernanceStrategy/RiskManagement/RiskMitigationPlans.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function RiskMitigationPlansDashboard({ fetchItems }) {\r\n  const [mitigationPlans, setMitigationPlans] = useState([]);\r\n  const [totalPlans, setTotalPlans] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [responsiblePartyCount, setResponsiblePartyCount] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setMitigationPlans(data);\r\n      processPlanData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processPlanData = (data) => {\r\n    setTotalPlans(data.length);\r\n\r\n    const statusMap = {};\r\n    const responsiblePartyMap = {};\r\n\r\n    data.forEach((item) => {\r\n      // Process status distribution\r\n      const status = item.status;\r\n      statusMap[status] = (statusMap[status] || 0) + 1;\r\n\r\n      // Process responsible party count\r\n      const responsibleParty = item.responsibleParty;\r\n      responsiblePartyMap[responsibleParty] = (responsiblePartyMap[responsibleParty] || 0) + 1;\r\n    });\r\n\r\n    const statusArray = Object.entries(statusMap).map(([status, count]) => ({\r\n      name: status,\r\n      y: count,\r\n    }));\r\n\r\n    setStatusDistribution(statusArray);\r\n    setResponsiblePartyCount(responsiblePartyMap);\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Status',\r\n        colorByPoint: true,\r\n        data: statusDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Risk Mitigation Plans Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Mitigation Plans</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPlans}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["RiskMitigationPlansDashboard","_ref","fetchItems","mitigationPlans","setMitigationPlans","useState","totalPlans","setTotalPlans","statusDistribution","setStatusDistribution","responsiblePartyCount","setResponsiblePartyCount","loading","setLoading","useEffect","async","data","processPlanData","fetchData","length","statusMap","responsiblePartyMap","forEach","item","status","responsibleParty","statusArray","Object","entries","map","_ref2","count","name","y","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}