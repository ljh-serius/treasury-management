{"version":3,"file":"static/js/93430.9bcdf3a6.chunk.js","mappings":"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","sources":["pages/Analysis/HrManagement/EmployeeRecords/EmployeesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function EmployeesDashboard({ fetchItems }) {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [totalEmployees, setTotalEmployees] = useState(0);\r\n  const [departmentDistribution, setDepartmentDistribution] = useState([]);\r\n  const [employmentStatusChartData, setEmploymentStatusChartData] = useState([]);\r\n  const [averageSalary, setAverageSalary] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setEmployeeData(data);\r\n      processEmployeeData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processEmployeeData = (data) => {\r\n    setTotalEmployees(data.length);\r\n\r\n    // Calculate department distribution\r\n    const departmentMap = {};\r\n    data.forEach((item) => {\r\n      const department = item.department;\r\n      departmentMap[department] = (departmentMap[department] || 0) + 1;\r\n    });\r\n    const departmentArray = Object.entries(departmentMap).map(([department, count]) => ({\r\n      name: department,\r\n      y: count,\r\n    }));\r\n    setDepartmentDistribution(departmentArray);\r\n\r\n    // Calculate employment status distribution\r\n    const statusMap = {};\r\n    data.forEach((item) => {\r\n      const status = item.employmentStatus;\r\n      statusMap[status] = (statusMap[status] || 0) + 1;\r\n    });\r\n    const statusArray = Object.entries(statusMap).map(([status, count]) => ({\r\n      name: status,\r\n      y: count,\r\n    }));\r\n    setEmploymentStatusChartData(statusArray);\r\n\r\n    // Calculate average salary\r\n    const totalSalary = data.reduce((sum, item) => sum + item.salary, 0);\r\n    setAverageSalary(totalSalary / data.length);\r\n  };\r\n\r\n  // Highcharts options for Department Distribution\r\n  const departmentChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Department Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Departments',\r\n        data: departmentDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for Employment Status Distribution\r\n  const employmentStatusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Employment Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Status',\r\n        data: employmentStatusChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Employees List Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Employees</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEmployees}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Salary</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageSalary.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Department Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={departmentChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Employment Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={employmentStatusChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["EmployeesDashboard","_ref","fetchItems","employeeData","setEmployeeData","useState","totalEmployees","setTotalEmployees","departmentDistribution","setDepartmentDistribution","employmentStatusChartData","setEmploymentStatusChartData","averageSalary","setAverageSalary","loading","setLoading","useEffect","async","data","processEmployeeData","fetchData","length","departmentMap","forEach","item","department","departmentArray","Object","entries","map","_ref2","count","name","y","statusMap","status","employmentStatus","statusArray","_ref3","totalSalary","reduce","sum","salary","departmentChartOptions","chart","type","title","text","series","employmentStatusChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}