{"version":3,"file":"static/js/57836.708c754f.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Projects/ProjectPhases.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function ProjectPhasesDashboard({ fetchItems }) {\r\n  const [phaseData, setPhaseData] = useState([]);\r\n  const [totalPhases, setTotalPhases] = useState(0);\r\n  const [ongoingPhases, setOngoingPhases] = useState(0);\r\n  const [phaseStatusDistribution, setPhaseStatusDistribution] = useState([]);\r\n  const [phaseTimeline, setPhaseTimeline] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPhaseData(data);\r\n      processPhaseData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processPhaseData = (data) => {\r\n    // Total Phases\r\n    setTotalPhases(data.length);\r\n\r\n    // Ongoing Phases\r\n    const ongoing = data.filter(phase => phase.phaseStatus === 'in-progress').length;\r\n    setOngoingPhases(ongoing);\r\n\r\n    // Phase Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, phase) => {\r\n      acc[phase.phaseStatus] = (acc[phase.phaseStatus] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setPhaseStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.replace(/-/g, ' ').toUpperCase(),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Phase Timeline for Line Chart\r\n    const timelineData = data.map(phase => ({\r\n      start: new Date(phase.startDate).getTime(),\r\n      end: new Date(phase.endDate).getTime(),\r\n      name: phase.phaseName,\r\n    })).sort((a, b) => a.start - b.start);\r\n    setPhaseTimeline(timelineData);\r\n  };\r\n\r\n  // Highcharts options for Phase Status Distribution\r\n  const phaseStatusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Phase Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: phaseStatusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Phase Timeline\r\n  const phaseTimelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Phase Timeline' },\r\n    xAxis: { type: 'datetime', title: { text: 'Start Date' } },\r\n    yAxis: { title: { text: 'End Date' } },\r\n    series: [{\r\n      name: 'Phase Duration',\r\n      data: phaseTimeline.map(item => [item.start, item.end]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Project Phases Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Phases</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPhases}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Ongoing Phases</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {ongoingPhases}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Phase Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={phaseStatusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Phase Timeline Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={phaseTimelineChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ProjectPhasesDashboard","_ref","fetchItems","phaseData","setPhaseData","useState","totalPhases","setTotalPhases","ongoingPhases","setOngoingPhases","phaseStatusDistribution","setPhaseStatusDistribution","phaseTimeline","setPhaseTimeline","loading","setLoading","useEffect","async","data","processPhaseData","fetchDataAsync","length","ongoing","filter","phase","phaseStatus","statusCounts","reduce","acc","Object","keys","map","key","name","replace","toUpperCase","y","timelineData","start","Date","startDate","getTime","end","endDate","phaseName","sort","a","b","phaseStatusChartOptions","chart","type","title","text","series","colorByPoint","phaseTimelineChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}