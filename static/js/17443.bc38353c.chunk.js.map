{"version":3,"file":"static/js/17443.bc38353c.chunk.js","mappings":"wTAOe,SAASA,EAA4BC,GAAkB,IAAjB,WAAEC,GAAYD,EACjE,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,IAC9CG,EAAuBC,IAA4BJ,EAAAA,EAAAA,UAAS,KAC5DK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,KAClDO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAEvCS,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAad,IACnBE,EAAiBY,GACjBC,EAAqBD,GACrBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAAChB,IAEJ,MAAMe,EAAwBD,IAE5B,MAAMG,EAAQH,EAAKI,QAAO,CAACC,EAAKC,IAASD,EAAME,OAAOD,EAAKE,eAAiBD,OAAOD,EAAKG,sBAAwBF,OAAOD,EAAKI,kBAAkB,GAC9InB,EAAkBY,GAGlB,MAAMQ,EAAeX,EAAKY,KAAIN,IAAI,CAChCO,KAAMP,EAAKQ,aACXC,EAAGR,OAAOD,EAAKE,eAAiBD,OAAOD,EAAKG,sBAAwBF,OAAOD,EAAKI,qBAGlFjB,EAAyBkB,GAGzB,MAAMK,EAAahB,EAAKI,QAAO,CAACa,EAAKX,KACnCA,EAAKY,KAAKC,SAAQC,IAChBH,EAAIG,IAAQH,EAAIG,IAAQ,GAAK,CAAC,IAEzBH,IACN,CAAC,GAEJtB,EAAoB0B,OAAOC,KAAKN,GAAYJ,KAAIQ,IAAG,CACjDP,KAAMO,EACNL,EAAGC,EAAWI,OACZ,EAGAG,EAAwB,CAC5BC,MAAO,CAAEC,KAAM,UACfC,MAAO,CAAEC,KAAM,0BACfC,OAAQ,CAAC,CAAEf,KAAM,YAAab,KAAMR,KAGhCqC,EAAmB,CACvBL,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,qBACfC,OAAQ,CAAC,CAAEf,KAAM,OAAQiB,cAAc,EAAM9B,KAAMN,KAGrD,OACEqC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMhD,EAAQyC,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,oCACtCN,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,SAAA,EAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAC7C,MAAI,EAACgD,GAAI,GAAGjB,UAChBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAAAlB,UACHN,EAAAA,EAAAA,MAACyB,EAAAA,EAAW,CAAAnB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,qBACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEuB,WAAY,QAASpB,SAAA,CAAC,IAC/D/C,EAAeoE,QAAQ,cAOjCpB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAC7C,MAAI,EAACgD,GAAI,GAAIK,GAAI,EAAEtB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAASxC,OAEpDe,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAC7C,MAAI,EAACgD,GAAI,GAAIK,GAAI,EAAEtB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAASlC,cAM9D,C","sources":["pages/Analysis/FinancialManagement/TreasuryManagement/LiquidityManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function LiquidityManagementAnalytics({ fetchItems }) {\r\n  const [liquidityData, setLiquidityData] = useState([]);\r\n  const [totalLiquidity, setTotalLiquidity] = useState(0);\r\n  const [liquidityDistribution, setLiquidityDistribution] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setLiquidityData(data);\r\n      processLiquidityData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processLiquidityData = (data) => {\r\n    // Total Liquidity Calculation\r\n    const total = data.reduce((sum, item) => sum + Number(item.availableCash) + Number(item.shortTermInvestments) + Number(item.cashEquivalents), 0);\r\n    setTotalLiquidity(total);\r\n\r\n    // Liquidity Distribution\r\n    const distribution = data.map(item => ({\r\n      name: item.fiscalPeriod,\r\n      y: Number(item.availableCash) + Number(item.shortTermInvestments) + Number(item.cashEquivalents),\r\n    }));\r\n\r\n    setLiquidityDistribution(distribution);\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, item) => {\r\n      item.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(tag => ({\r\n      name: tag,\r\n      y: tagsCounts[tag],\r\n    })));\r\n  };\r\n\r\n  const liquidityChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Liquidity Distribution' },\r\n    series: [{ name: 'Liquidity', data: liquidityDistribution }],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tags Distribution' },\r\n    series: [{ name: 'Tags', colorByPoint: true, data: tagsDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>Liquidity Management Analytics</Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Liquidity</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalLiquidity.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Charts Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={liquidityChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["LiquidityManagementAnalytics","_ref","fetchItems","liquidityData","setLiquidityData","useState","totalLiquidity","setTotalLiquidity","liquidityDistribution","setLiquidityDistribution","tagsDistribution","setTagsDistribution","loading","setLoading","useEffect","async","data","processLiquidityData","fetchData","total","reduce","sum","item","Number","availableCash","shortTermInvestments","cashEquivalents","distribution","map","name","fiscalPeriod","y","tagsCounts","acc","tags","forEach","tag","Object","keys","liquidityChartOptions","chart","type","title","text","series","tagsChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","Card","CardContent","fontWeight","toFixed","md","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}