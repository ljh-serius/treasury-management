{"version":3,"file":"static/js/79825.92292004.chunk.js","mappings":"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","sources":["pages/Analysis/CustomerSupport/SupportTickets/ResolutionTimeTracking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function ResolutionTimeTrackingAnalytics({ fetchItems }) {\r\n  const [ticketData, setTicketData] = useState([]);\r\n  const [totalTickets, setTotalTickets] = useState(0);\r\n  const [averageResolutionTime, setAverageResolutionTime] = useState(0);\r\n  const [issueTypeDistribution, setIssueTypeDistribution] = useState([]);\r\n  const [priorityDistribution, setPriorityDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setTicketData(data);\r\n      processTicketData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processTicketData = (data) => {\r\n    // Total Tickets\r\n    setTotalTickets(data.length);\r\n\r\n    // Average Resolution Time\r\n    const avgResolutionTime = data.reduce((acc, ticket) => acc + Number(ticket.resolutionTime), 0) / data.length;\r\n    setAverageResolutionTime(avgResolutionTime.toFixed(2));\r\n\r\n    // Issue Type Distribution for Pie Chart\r\n    const issueTypeCounts = data.reduce((acc, ticket) => {\r\n      acc[ticket.issueType] = (acc[ticket.issueType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setIssueTypeDistribution(Object.keys(issueTypeCounts).map(key => ({\r\n      name: key,\r\n      y: issueTypeCounts[key],\r\n    })));\r\n\r\n    // Priority Distribution for Pie Chart\r\n    const priorityCounts = data.reduce((acc, ticket) => {\r\n      acc[ticket.priority] = (acc[ticket.priority] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setPriorityDistribution(Object.keys(priorityCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: priorityCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Issue Type Distribution\r\n  const issueTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Issue Type Distribution' },\r\n    series: [{\r\n      name: 'Issue Types',\r\n      colorByPoint: true,\r\n      data: issueTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Priority Distribution\r\n  const priorityChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Priority Distribution' },\r\n    series: [{\r\n      name: 'Priorities',\r\n      colorByPoint: true,\r\n      data: priorityDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Resolution Time Tracking Analytics\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Tickets</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalTickets}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Resolution Time (hours)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageResolutionTime}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Issue Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={issueTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Priority Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={priorityChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ResolutionTimeTrackingAnalytics","_ref","fetchItems","ticketData","setTicketData","useState","totalTickets","setTotalTickets","averageResolutionTime","setAverageResolutionTime","issueTypeDistribution","setIssueTypeDistribution","priorityDistribution","setPriorityDistribution","loading","setLoading","useEffect","async","data","processTicketData","fetchData","length","avgResolutionTime","reduce","acc","ticket","Number","resolutionTime","toFixed","issueTypeCounts","issueType","Object","keys","map","key","name","y","priorityCounts","priority","charAt","toUpperCase","slice","issueTypeChartOptions","chart","type","title","text","series","colorByPoint","priorityChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}