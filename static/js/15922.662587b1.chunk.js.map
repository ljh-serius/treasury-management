{"version":3,"file":"static/js/15922.662587b1.chunk.js","mappings":"uRAKA,MA2FA,EA3F+BA,IAAqB,IAApB,WAAEC,GAAYD,EAC1C,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAWvC,IATAG,EAAAA,EAAAA,YAAU,MACNC,iBACI,MAAMC,QAAeR,IACrBE,EAAQM,GACRH,GAAW,EACf,CACAI,EAAW,GACZ,CAACT,IAEAI,EACA,OAAOM,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,IAI5B,MAAMC,EAAqBX,EAAKY,OAC1BC,EAAsBb,EAAKc,QAAOC,GAAQA,EAAKC,KAAKC,SAAS,YAAWL,OAExEM,EAA0B,CAC5BC,aAAcnB,EAAKc,QAAOC,GAA0B,kBAAlBA,EAAKK,WAA8BR,OACrES,WAAYrB,EAAKc,QAAOC,GAA0B,eAAlBA,EAAKK,WAA2BR,OAChEU,mBAAoBtB,EAAKc,QAAOC,GAA0B,wBAAlBA,EAAKK,WAAoCR,QAI/EW,EAA8B,CAChCC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,yBACfC,OAAQ,CACJ,CACIC,KAAM,WACNC,cAAc,EACd9B,KAAM,CACF,CAAE6B,KAAM,gBAAiBE,EAAGb,EAAwBC,cACpD,CAAEU,KAAM,aAAcE,EAAGb,EAAwBG,YACjD,CAAEQ,KAAM,sBAAuBE,EAAGb,EAAwBI,wBAMpEU,EAA4B,CAC9BR,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,wBACfM,MAAO,CAAEC,WAAY,CAAC,SAAU,eAChCN,OAAQ,CACJ,CACIC,KAAM,UACN7B,KAAM,CAACa,EAAqBF,EAAqBE,MAK7D,OACIsB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEC,SAAA,EACvB9B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACrB,MAAI,EAACyB,GAAI,GAAGD,UACd9B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,+BAG7B9B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACrB,MAAI,EAACyB,GAAI,GAAIG,GAAI,EAAEJ,UACrB9B,EAAAA,EAAAA,KAACmC,EAAAA,EAAI,CAAAL,UACDJ,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAAN,SAAA,EACR9B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,yBACzB9B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAE5B,YAKtCF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACrB,MAAI,EAACyB,GAAI,GAAIG,GAAI,EAAEJ,UACrB9B,EAAAA,EAAAA,KAACmC,EAAAA,EAAI,CAAAL,UACDJ,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAAN,SAAA,EACR9B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,0BACzB9B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAE1B,YAKtCJ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACrB,MAAI,EAACyB,GAAI,GAAIG,GAAI,EAAEJ,UACrB9B,EAAAA,EAAAA,KAACqC,IAAe,CAACC,WAAYC,IAAYC,QAAS1B,OAGtDd,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACrB,MAAI,EAACyB,GAAI,GAAIG,GAAI,EAAEJ,UACrB9B,EAAAA,EAAAA,KAACqC,IAAe,CAACC,WAAYC,IAAYC,QAASjB,QAEnD,C","sources":["pages/Analysis/CorporateCommunication/InternalCommunication/Announcements.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst AnnouncementsAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    // Calculate KPIs\r\n    const totalAnnouncements = data.length;\r\n    const urgentAnnouncements = data.filter(item => item.tags.includes('urgent')).length;\r\n\r\n    const announcementsByAudience = {\r\n        allEmployees: data.filter(item => item.audience === 'all-employees').length,\r\n        management: data.filter(item => item.audience === 'management').length,\r\n        departmentSpecific: data.filter(item => item.audience === 'department-specific').length,\r\n    };\r\n\r\n    // Highcharts options\r\n    const audienceDistributionOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Audience Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Audience',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'All Employees', y: announcementsByAudience.allEmployees },\r\n                    { name: 'Management', y: announcementsByAudience.management },\r\n                    { name: 'Department Specific', y: announcementsByAudience.departmentSpecific },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const urgentAnnouncementOptions = {\r\n        chart: { type: 'bar' },\r\n        title: { text: 'Urgent Announcements' },\r\n        xAxis: { categories: ['Urgent', 'Non-Urgent'] },\r\n        series: [\r\n            {\r\n                name: 'Urgency',\r\n                data: [urgentAnnouncements, totalAnnouncements - urgentAnnouncements],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">Announcements Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Announcements</Typography>\r\n                        <Typography variant=\"h4\">{totalAnnouncements}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Urgent Announcements</Typography>\r\n                        <Typography variant=\"h4\">{urgentAnnouncements}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={audienceDistributionOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={urgentAnnouncementOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AnnouncementsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","totalAnnouncements","length","urgentAnnouncements","filter","item","tags","includes","announcementsByAudience","allEmployees","audience","management","departmentSpecific","audienceDistributionOptions","chart","type","title","text","series","name","colorByPoint","y","urgentAnnouncementOptions","xAxis","categories","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}