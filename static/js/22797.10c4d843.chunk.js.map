{"version":3,"file":"static/js/22797.10c4d843.chunk.js","mappings":"wTAOe,SAASA,EAA2BC,GAAkB,IAAjB,WAAEC,GAAYD,EAChE,MAAOE,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAmBC,IAAwBF,EAAAA,EAAAA,UAAS,KACpDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEvCK,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAaV,IACnBE,EAAmBQ,GACnBC,EAAuBD,GACvBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAACZ,IAEJ,MAAMW,EAA0BD,IAE9B,MAAMG,EAAcH,EAAKI,QAAO,CAACC,EAAKC,KACpCD,EAAIC,EAAKC,mBAAqBF,EAAIC,EAAKC,mBAAqB,GAAK,EAC1DF,IACN,CAAC,GAEJV,EAAqBa,OAAOC,KAAKN,GAAaO,KAAIC,IAAG,CACnDC,KAAMD,EACNE,EAAGV,EAAYQ,OACb,EAGAG,EAAoB,CACxBC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,kCACfC,OAAQ,CAAC,CAAEP,KAAM,SAAUQ,cAAc,EAAMpB,KAAMN,KAGvD,OACE2B,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMtC,EAAQ+B,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,uCAGtCN,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,SAAA,EAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACnC,MAAI,EAACsC,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAAAnB,UACHN,EAAAA,EAAAA,MAAC0B,EAAAA,EAAW,CAAApB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,gCACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,OAAON,GAAI,CAAEwB,WAAY,QAASrB,SAC9DpC,EAAgB0D,UAEnBrB,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAOZ,SAAC,0DAMlCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACnC,MAAI,EAACsC,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAASvC,cAM9D,C","sources":["pages/Analysis/OperationsAssetManagement/ProductLifecycleManagement/NewProductDevelopment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function ProductDevelopmentDashboard({ fetchItems }) {\r\n  const [developmentData, setDevelopmentData] = useState([]);\r\n  const [stageDistribution, setStageDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setDevelopmentData(data);\r\n      processDevelopmentData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processDevelopmentData = (data) => {\r\n    // Development Stage Distribution\r\n    const stageCounts = data.reduce((acc, item) => {\r\n      acc[item.developmentStage] = (acc[item.developmentStage] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStageDistribution(Object.keys(stageCounts).map(key => ({\r\n      name: key,\r\n      y: stageCounts[key],\r\n    })));\r\n  };\r\n\r\n  const stageChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Development Stage Distribution' },\r\n    series: [{ name: 'Stages', colorByPoint: true, data: stageDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          New Product Development Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* Total Number of Projects */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Development Projects</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {developmentData.length}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total number of product development projects.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={stageChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ProductDevelopmentDashboard","_ref","fetchItems","developmentData","setDevelopmentData","useState","stageDistribution","setStageDistribution","loading","setLoading","useEffect","async","data","processDevelopmentData","fetchData","stageCounts","reduce","acc","item","developmentStage","Object","keys","map","key","name","y","stageChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","length","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}