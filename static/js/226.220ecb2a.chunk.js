"use strict";(self.webpackChunktresorerie_management=self.webpackChunktresorerie_management||[]).push([[226],{3226:(e,t,a)=>{a.a(e,(async(e,n)=>{try{a.r(t),a.d(t,{addItem:()=>m,deleteItem:()=>u,entityName:()=>d,fetchItemById:()=>f,fetchItems:()=>y,fieldsConfig:()=>s,headCells:()=>c,updateItem:()=>p});var r=a(1256);const i=JSON.parse(localStorage.getItem("userData")).organizationId,l=async e=>(console.log("launched NOW"),(await y()).filter((t=>e.includes(t.type))).map((e=>({id:e.id,label:e.name})))),s={entityId:{label:"Cost ID",type:"text",faker:"datatype.uuid"},entityName:{label:"Cost Name",type:"text",faker:"name.fullName"},name:{label:"name",type:"text",faker:"company.name"},type:{label:"Type",type:"select",options:[{id:"store",label:"Store"},{id:"agency",label:"Agency"},{id:"department",label:"Department"},{id:"service",label:"Service"},{id:"organization",label:"Organization"}],multiple:!1,faker:"random.arrayElement"},entityId:{label:"Entity ID",type:"text",faker:"datatype.uuid"},parentId:{label:"Parent Entity ID",type:"select",options:await l(["store","agency","department","service","organization"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await l(["store","agency","department","service","organization"])},storeId:{label:"Parent Entity ID",type:"select",options:await l(["store"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await l(["store"])},agencyId:{label:"Parent Entity ID",type:"select",options:await l(["agency"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await l(["agency"])},departmentId:{label:"Parent Entity ID",type:"select",options:await l(["department"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await l(["department"])},serviceId:{label:"Parent Entity ID",type:"select",options:await l(["service"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await l(["service"])},orgnizationId:{label:"Parent Entity ID",type:"select",options:await l(["organization"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await l(["organization"])},locationId:{label:"Location ID",type:"text",faker:"datatype.uuid"},regionId:{label:"Region ID",type:"text",faker:"datatype.uuid"},countryId:{label:"Country ID",type:"text",faker:"address.countryCode"},managerId:{label:"Manager ID",type:"select",options:[],multiple:!1,faker:"random.arrayElement"},status:{label:"Status",type:"select",options:[{id:"active",label:"Active"},{id:"inactive",label:"Inactive"}],faker:"random.arrayElement"},creationDate:{label:"Creation Date",type:"date",faker:"date.past"},modifiedDate:{label:"Modified Date",type:"date",faker:"date.recent"},notes:{label:"Notes",type:"text",faker:"lorem.paragraph"}},c=Object.keys(s).map((e=>({id:e,label:s[e].label}))),d="Entities";async function y(){return await(0,r.P_)(i,"entities")}const m=e=>(0,r.tI)(i,"entities",e),p=(e,t)=>(0,r.lU)(i,"entities",e,t),u=e=>(0,r.Nn)(i,"entities",e);async function f(e){return await(0,r._R)(i,"entities",e)}n()}catch(o){n(o)}}),1)},1256:(e,t,a)=>{a.d(t,{Nn:()=>s,P_:()=>o,TU:()=>c,Xk:()=>d,_R:()=>y,lU:()=>l,tI:()=>i});var n=a(7794),r=a(5472);const o=async(e,t)=>{try{const a=(0,r.rJ)(n.db,"organizations",e,t),o=await(0,r.GG)(a);return o.docs.map((e=>({id:e.id,...e.data()})))}catch(a){return console.error(`Error fetching documents from ${t}:`,a),[]}},i=async(e,t,a)=>{try{a.organizationId=e;const o=(0,r.rJ)(n.db,"organizations",e,t);return(await(0,r.gS)(o,a)).id}catch(o){throw console.error(`Error adding document to ${t}:`,o),new Error(`Could not add document to ${t}`)}},l=async(e,t,a,o)=>{try{const i=(0,r.H9)(n.db,"organizations",e,t,a);await(0,r.mZ)(i,o)}catch(i){throw console.error(`Error updating document in ${t}:`,i),new Error(`Could not update document in ${t}`)}},s=async(e,t,a)=>{try{const o=(0,r.H9)(n.db,"organizations",e,t,a);await(0,r.kd)(o)}catch(o){throw console.error(`Error deleting document from ${t}:`,o),new Error(`Could not delete document from ${t}`)}},c=async(e,t,a,o)=>{try{const i=(0,r.rJ)(n.db,"organizations",e,t),l=(0,r.P)(i,(0,r._M)(a,"array-contains",o)),s=await(0,r.GG)(l);return s.docs.map((e=>({id:e.id,...e.data()})))}catch(i){return console.error(`Error fetching documents from ${t}:`,i),[]}},d=async(e,t,a,o)=>{try{const i=(0,r.rJ)(n.db,"organizations",e,t),l=(0,r.P)(i,(0,r._M)(a,"==",o)),s=await(0,r.GG)(l);return s.docs.map((e=>({id:e.id,...e.data()})))}catch(i){return console.error(`Error fetching documents from ${t}:`,i),[]}},y=async(e,t,a)=>{console.log("Fetching document with ID:",a),console.log("In subcollection:",t),console.log("Under organization ID:",e);try{const o=(0,r.H9)(n.db,"organizations",e,t,a);console.log("Document Reference:",o.path);const i=await(0,r.x7)(o);return i.exists()?(console.log("Document data:",i.data()),{id:i.id,...i.data()}):(console.error(`No document found with ID ${a} in ${t}`),null)}catch(o){return console.error(`Error fetching document with ID ${a} from ${t}:`,o),null}}}}]);
//# sourceMappingURL=226.220ecb2a.chunk.js.map