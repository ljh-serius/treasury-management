{"version":3,"file":"static/js/27707.551d5c7c.chunk.js","mappings":"wTAKe,SAASA,EAAuBC,GAAkB,IAAjB,WAAEC,GAAYD,EAC5D,MAAOE,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAS,IAClDG,EAAsBC,IAA2BJ,EAAAA,EAAAA,UAAS,KAC1DK,EAA8BC,IAAmCN,EAAAA,EAAAA,UAAS,KAC1EO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAEvCS,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAad,IACnBE,EAAkBY,GAClBC,EAAsBD,GACtBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAAChB,IAEJ,MAAMe,EAAyBD,IAE7BT,EAAoBS,EAAKG,QAGzB,MAAMC,EAAiBJ,EAAKK,QAAO,CAACC,EAAKC,KACvCD,EAAIC,EAAWC,WAAaF,EAAIC,EAAWC,WAAa,GAAK,EACtDF,IACN,CAAC,GACJb,EAAwBgB,OAAOC,KAAKN,GAAgBO,KAAIC,IAAG,CACzDC,KAAMD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAC9CC,EAAGb,EAAeQ,QAIpB,MAAMM,EAAyBlB,EAAKK,QAAO,CAACC,EAAKC,KAC/CD,EAAIC,EAAWY,mBAAqBb,EAAIC,EAAWY,mBAAqB,GAAK,EACtEb,IACN,CAAC,GACJX,EAAgCc,OAAOC,KAAKQ,GAAwBP,KAAIC,IAAG,CACzEC,KAAMD,EACNK,EAAGC,EAAuBN,OACxB,EAIAQ,EAAuB,CAC3BC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,0BACfC,OAAQ,CAAC,CACPZ,KAAM,aACNa,cAAc,EACd1B,KAAMR,KAKJmC,EAA+B,CACnCN,MAAO,CAAEC,KAAM,UACfC,MAAO,CAAEC,KAAM,kCACfI,MAAO,CAAEN,KAAM,WAAYC,MAAO,CAAEC,KAAM,uBAC1CK,MAAO,CAAEN,MAAO,CAAEC,KAAM,0BACxBC,OAAQ,CAAC,CACPZ,KAAM,qBACNb,KAAMN,KAIV,OACEoC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAM/C,EAAQwC,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,+BAItCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,UAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,uBACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEyB,WAAY,QAAStB,SAC/D9C,cAOXwC,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGnB,GAAI,CAAE0B,UAAW,GAAIvB,SAAA,EAE/CC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAAS3C,OAIpDiB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAASpC,cAM9D,C","sources":["pages/Analysis/InformationTechnology/DataSecurity/DataEncryption.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function DataEncryptionDashboard({ fetchItems }) {\r\n  const [encryptionData, setEncryptionData] = useState([]);\r\n  const [totalEncryptions, setTotalEncryptions] = useState(0);\r\n  const [dataTypeDistribution, setDataTypeDistribution] = useState([]);\r\n  const [encryptionMethodDistribution, setEncryptionMethodDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setEncryptionData(data);\r\n      processEncryptionData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processEncryptionData = (data) => {\r\n    // Total Encryptions\r\n    setTotalEncryptions(data.length);\r\n\r\n    // Data Type Distribution for Pie Chart\r\n    const dataTypeCounts = data.reduce((acc, encryption) => {\r\n      acc[encryption.dataType] = (acc[encryption.dataType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setDataTypeDistribution(Object.keys(dataTypeCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: dataTypeCounts[key],\r\n    })));\r\n\r\n    // Encryption Method Distribution for Column Chart\r\n    const encryptionMethodCounts = data.reduce((acc, encryption) => {\r\n      acc[encryption.encryptionMethod] = (acc[encryption.encryptionMethod] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setEncryptionMethodDistribution(Object.keys(encryptionMethodCounts).map(key => ({\r\n      name: key,\r\n      y: encryptionMethodCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Data Type Distribution\r\n  const dataTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Data Type Distribution' },\r\n    series: [{\r\n      name: 'Data Types',\r\n      colorByPoint: true,\r\n      data: dataTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Encryption Method Distribution\r\n  const encryptionMethodChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Encryption Method Distribution' },\r\n    xAxis: { type: 'category', title: { text: 'Encryption Methods' } },\r\n    yAxis: { title: { text: 'Number of Encryptions' } },\r\n    series: [{\r\n      name: 'Encryption Methods',\r\n      data: encryptionMethodDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Data Encryption Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Encryptions</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEncryptions}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Data Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={dataTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Encryption Method Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={encryptionMethodChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["DataEncryptionDashboard","_ref","fetchItems","encryptionData","setEncryptionData","useState","totalEncryptions","setTotalEncryptions","dataTypeDistribution","setDataTypeDistribution","encryptionMethodDistribution","setEncryptionMethodDistribution","loading","setLoading","useEffect","async","data","processEncryptionData","fetchData","length","dataTypeCounts","reduce","acc","encryption","dataType","Object","keys","map","key","name","charAt","toUpperCase","slice","y","encryptionMethodCounts","encryptionMethod","dataTypeChartOptions","chart","type","title","text","series","colorByPoint","encryptionMethodChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}