{"version":3,"file":"static/js/75862.17560e6e.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Timesheets/BillableHours.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function BillableHoursDashboard({ fetchItems }) {\r\n  const [billableData, setBillableData] = useState([]);\r\n  const [totalBillableHours, setTotalBillableHours] = useState(0);\r\n  const [invoicedHours, setInvoicedHours] = useState(0);\r\n  const [invoiceStatusDistribution, setInvoiceStatusDistribution] = useState([]);\r\n  const [billingTrends, setBillingTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setBillableData(data);\r\n      processBillableData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processBillableData = (data) => {\r\n    // Total Billable Hours\r\n    const totalHours = data.reduce((acc, item) => acc + item.billableHours, 0);\r\n    setTotalBillableHours(totalHours);\r\n  \r\n    // Invoiced Hours\r\n    const invoiced = data.filter(item => item.invoiceStatus === 'invoiced').reduce((acc, item) => acc + item.billableHours, 0);\r\n    setInvoicedHours(invoiced);\r\n  \r\n    // Invoice Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, item) => {\r\n      acc[item.invoiceStatus] = (acc[item.invoiceStatus] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setInvoiceStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n  \r\n    // Billing Trends for Line Chart\r\n    const trendData = data.map(item => ({\r\n      date: new Date(item.createdDate).getTime(), // Ensure date is a timestamp\r\n      amount: parseFloat(item.totalAmount), // Ensure amount is a number\r\n    })).sort((a, b) => a.date - b.date);\r\n    setBillingTrends(trendData);\r\n  };\r\n  \r\n  // Highcharts options for Billing Trends\r\n  const billingTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Billing Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Total Amount' } },\r\n    series: [{\r\n      name: 'Total Amount',\r\n      data: billingTrends.map(item => [item.date, item.amount]), // Properly formatted date and amount\r\n    }],\r\n  };\r\n  // Highcharts options for Invoice Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Invoice Status Distribution' },\r\n    series: [{\r\n      name: 'Invoice Status',\r\n      colorByPoint: true,\r\n      data: invoiceStatusDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Billable Hours Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Billable Hours</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalBillableHours}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Invoiced Hours</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {invoicedHours}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Invoice Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Billing Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={billingTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["BillableHoursDashboard","_ref","fetchItems","billableData","setBillableData","useState","totalBillableHours","setTotalBillableHours","invoicedHours","setInvoicedHours","invoiceStatusDistribution","setInvoiceStatusDistribution","billingTrends","setBillingTrends","loading","setLoading","useEffect","async","data","processBillableData","fetchDataAsync","totalHours","reduce","acc","item","billableHours","invoiced","filter","invoiceStatus","statusCounts","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","date","Date","createdDate","getTime","amount","parseFloat","totalAmount","sort","a","b","billingTrendChartOptions","chart","type","title","text","xAxis","yAxis","series","statusChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}