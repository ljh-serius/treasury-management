{"version":3,"file":"static/js/99.7d7de74b.chunk.js","mappings":"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","sources":["components/Management/Projects.js"],"sourcesContent":["\r\nimport {\r\n    fetchDocuments,\r\n    addDocument,\r\n    updateDocument,\r\n    deleteDocument,\r\n    fetchDocumentsBySelectValue,\r\n    fetchDocumentsByFieldValue,\r\n    fetchDocumentById\r\n} from '../../utils/firebaseCrudHelpers';\r\n\r\nimport { fetchItemsByField as fetchEmployeesByField } from './Employees';\r\nimport { fetchItems as fetchEmployees } from './Employees';\r\n\r\nconst managers = (await fetchEmployeesByField('position', 'manager')).map((manager) => {\r\n    return {\r\n        id: manager.id,\r\n        label: manager.name\r\n    }\r\n})\r\n\r\nconst employees = (await fetchEmployees()).map((manager) => {\r\n    return {\r\n        id: manager.id,\r\n        label: manager.name\r\n    }\r\n})\r\n\r\nexport const fieldsConfig = {\r\n    projectId: { label: 'Invoice ID', type: 'text', faker: 'datatype.uuid' },\r\n    projectName: { label: 'Project Name', type: 'text', faker: 'commerce.productName' },\r\n    description: { label: 'Description', type: 'text', multiline: true, rows: 4, faker: 'lorem.paragraphs' },\r\n    startDate: { label: 'Start Date', type: 'date', faker: 'date.past' },\r\n    endDate: { label: 'End Date', type: 'date', faker: 'date.future' },\r\n    status: {\r\n        label: 'Status',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'not_started', label: 'Not Started' },\r\n            { id: 'in_progress', label: 'In Progress' },\r\n            { id: 'completed', label: 'Completed' },\r\n            { id: 'on_hold', label: 'On Hold' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    managerName: {\r\n        label: 'Manager Name',\r\n        type: 'select',\r\n        options: managers,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    teamMembers: {\r\n        label: 'Team Members',\r\n        type: 'select',\r\n        options: employees,\r\n        multiple: true,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    budget: { label: 'Budget', type: 'number', faker: 'finance.amount' },\r\n    priority: {\r\n        label: 'Priority',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'low', label: 'Low' },\r\n            { id: 'medium', label: 'Medium' },\r\n            { id: 'high', label: 'High' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    projectType: {\r\n        label: 'Project Type',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'internal', label: 'Internal' },\r\n            { id: 'client', label: 'Client' },\r\n            { id: 'rnd', label: 'R&D' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    clientName: {\r\n        label: 'Client Name',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'client1', label: 'Client 1' },\r\n            { id: 'client2', label: 'Client 2' },\r\n            { id: 'client3', label: 'Client 3' },\r\n            { id: 'client4', label: 'Client 4' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    phase: {\r\n        label: 'Project Phase',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'planning', label: 'Planning' },\r\n            { id: 'execution', label: 'Execution' },\r\n            { id: 'closure', label: 'Closure' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    progress: { label: 'Progress (%)', type: 'number', faker: 'datatype.number' },\r\n    risks: {\r\n        label: 'Risks Identified',\r\n        type: 'select',\r\n        link: '/risks',\r\n        options: [\r\n            { id: 'internal', label: 'Internal' },\r\n            { id: 'client', label: 'Client' },\r\n            { id: 'rnd', label: 'R&D' },\r\n        ],\r\n        multiple: true,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    lastUpdated: { label: 'Last Updated', type: 'date', faker: 'date.recent' },\r\n    estimatedCompletion: { label: 'Estimated Completion', type: 'date', faker: 'date.future' },\r\n    actualCompletion: { label: 'Actual Completion', type: 'date', faker: 'date.future' },\r\n    revenueGenerated: { label: 'Revenue Generated', type: 'number', faker: 'finance.amount' },\r\n    dependencies: {\r\n        label: 'Dependencies',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'dep1', label: 'Dependency 1' },\r\n            { id: 'dep2', label: 'Dependency 2' },\r\n            { id: 'dep3', label: 'Dependency 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    projectCategory: {\r\n        label: 'Project Category',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'category1', label: 'Category 1' },\r\n            { id: 'category2', label: 'Category 2' },\r\n            { id: 'category3', label: 'Category 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    resourceAllocation: { label: 'Resource Allocation', type: 'text', faker: 'lorem.words' },\r\n    technologyStack: {\r\n        label: 'Technology Stack',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'tech1', label: 'Tech Stack 1' },\r\n            { id: 'tech2', label: 'Tech Stack 2' },\r\n            { id: 'tech3', label: 'Tech Stack 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    stakeholders: {\r\n        label: 'Stakeholders',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'stakeholder1', label: 'Stakeholder 1' },\r\n            { id: 'stakeholder2', label: 'Stakeholder 2' },\r\n            { id: 'stakeholder3', label: 'Stakeholder 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    complianceRequirements: { label: 'Compliance Requirements', type: 'text', faker: 'lorem.sentence' },\r\n    riskMitigation: { label: 'Risk Mitigation', type: 'text', faker: 'lorem.sentence' },\r\n    criticalPath: {\r\n        label: 'Critical Path',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'present', label: 'Present' },\r\n            { id: 'absent', label: 'Absent' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    milestones: { label: 'Milestones', type: 'text', faker: 'lorem.words' },\r\n    KPIs: { label: 'KPIs', type: 'text', faker: 'lorem.words' },\r\n    projectSponsor: {\r\n        label: 'Project Sponsor',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'sponsor1', label: 'Sponsor 1' },\r\n            { id: 'sponsor2', label: 'Sponsor 2' },\r\n            { id: 'sponsor3', label: 'Sponsor 3' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    businessImpact: {\r\n        label: 'Business Impact',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'low', label: 'Low Impact' },\r\n            { id: 'medium', label: 'Medium Impact' },\r\n            { id: 'high', label: 'High Impact' },\r\n            { id: 'critical', label: 'Critical Impact' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    operatingCosts: { label: 'Operating Costs', type: 'number', faker: 'finance.amount' },\r\n    userStories: {\r\n        label: 'User Stories',\r\n        type: 'text',\r\n        multiline: true,\r\n        rows: 4,\r\n        faker: 'lorem.paragraphs',\r\n    },\r\n    codeRepository: { label: 'Code Repository', type: 'text', faker: 'internet.url' },\r\n    documentation: { label: 'Documentation', type: 'text', faker: 'lorem.paragraph' },\r\n};\r\n\r\nexport const headCells = Object.keys(fieldsConfig).map(key => ({\r\n    id: key,\r\n    label: fieldsConfig[key].label,\r\n}));\r\n\r\nexport const entityName = 'Projects';\r\n\r\nexport async function fetchItems() {\r\n    return await fetchDocuments('projects');\r\n} export const addItem = (item) => addDocument('projects', item);\r\nexport const updateItem = (id, item) => updateDocument('projects', id, item);\r\nexport const deleteItem = (id) => deleteDocument('projects', id);\r\n\r\nexport async function fetchItemById(id) {\r\n    return await fetchDocumentById('projects', id);\r\n}\r\n"],"names":["managers","fetchEmployeesByField","map","manager","id","label","name","fieldsConfig","projectId","type","faker","projectName","description","multiline","rows","startDate","endDate","status","options","managerName","teamMembers","fetchEmployees","multiple","budget","priority","projectType","clientName","phase","progress","risks","link","lastUpdated","estimatedCompletion","actualCompletion","revenueGenerated","dependencies","projectCategory","resourceAllocation","technologyStack","stakeholders","complianceRequirements","riskMitigation","criticalPath","milestones","KPIs","projectSponsor","businessImpact","operatingCosts","userStories","codeRepository","documentation","headCells","Object","keys","key","entityName","async","fetchItems","fetchDocuments","addItem","item","addDocument","updateItem","updateDocument","deleteItem","deleteDocument","fetchItemById","fetchDocumentById"],"sourceRoot":""}