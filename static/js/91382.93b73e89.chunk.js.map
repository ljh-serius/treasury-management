{"version":3,"file":"static/js/91382.93b73e89.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/CommunityEngagment/CorporateSocialResponsibility.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function CSRProgramsDashboard({ fetchItems }) {\r\n  const [programs, setPrograms] = useState([]);\r\n  const [totalPrograms, setTotalPrograms] = useState(0);\r\n  const [totalBudget, setTotalBudget] = useState(0);\r\n  const [totalSpent, setTotalSpent] = useState(0);\r\n  const [budgetSpentComparison, setBudgetSpentComparison] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPrograms(data);\r\n      processProgramData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processProgramData = (data) => {\r\n    let totalBudget = 0;\r\n    let totalSpent = 0;\r\n\r\n    const comparisonData = data.map((program) => {\r\n      totalBudget += program.budget;\r\n      totalSpent += program.spentAmount;\r\n\r\n      return {\r\n        name: program.programName,\r\n        budget: program.budget,\r\n        spent: program.spentAmount,\r\n      };\r\n    });\r\n\r\n    setTotalPrograms(data.length);\r\n    setTotalBudget(totalBudget);\r\n    setTotalSpent(totalSpent);\r\n    setBudgetSpentComparison(comparisonData);\r\n  };\r\n\r\n  // Highcharts options for Budget vs Spent Amount\r\n  const budgetSpentChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Budget vs Spent Amount' },\r\n    xAxis: { categories: budgetSpentComparison.map((program) => program.name) },\r\n    yAxis: {\r\n      min: 0,\r\n      title: { text: 'Amount (USD)' },\r\n    },\r\n    series: [\r\n      { name: 'Budget', data: budgetSpentComparison.map((program) => program.budget) },\r\n      { name: 'Spent', data: budgetSpentComparison.map((program) => program.spent) },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          CSR Programs Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Programs</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPrograms}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Budget</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalBudget.toLocaleString()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Spent</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalSpent.toLocaleString()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Budget vs Spent Chart */}\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={budgetSpentChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CSRProgramsDashboard","_ref","fetchItems","programs","setPrograms","useState","totalPrograms","setTotalPrograms","totalBudget","setTotalBudget","totalSpent","setTotalSpent","budgetSpentComparison","setBudgetSpentComparison","loading","setLoading","useEffect","async","data","processProgramData","fetchData","comparisonData","map","program","budget","spentAmount","name","programName","spent","length","budgetSpentChartOptions","chart","type","title","text","xAxis","categories","yAxis","min","series","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toLocaleString","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}