{"version":3,"file":"static/js/44601.e3e9c93d.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/TreasuryManagement/TreasuryPolicies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function TreasuryPoliciesAnalytics({ fetchItems }) {\r\n  const [policiesData, setPoliciesData] = useState([]);\r\n  const [activePolicies, setActivePolicies] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPoliciesData(data);\r\n      processPoliciesData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processPoliciesData = (data) => {\r\n    // Active Policies Count\r\n    const activeCount = data.filter(policy => policy.status === 'active').length;\r\n    setActivePolicies(activeCount);\r\n\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, policy) => {\r\n      acc[policy.status] = (acc[policy.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, item) => {\r\n      item.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(tag => ({\r\n      name: tag,\r\n      y: tagsCounts[tag],\r\n    })));\r\n  };\r\n\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Policy Status Distribution' },\r\n    series: [{ name: 'Policies', colorByPoint: true, data: statusDistribution }],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tags Distribution' },\r\n    series: [{ name: 'Tags', colorByPoint: true, data: tagsDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>Treasury Policies Analytics</Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Active Policies</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {activePolicies}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Charts Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["TreasuryPoliciesAnalytics","_ref","fetchItems","policiesData","setPoliciesData","useState","activePolicies","setActivePolicies","statusDistribution","setStatusDistribution","tagsDistribution","setTagsDistribution","loading","setLoading","useEffect","async","data","processPoliciesData","fetchData","activeCount","filter","policy","status","length","statusCounts","reduce","acc","Object","keys","map","key","name","y","tagsCounts","item","tags","forEach","tag","statusChartOptions","chart","type","title","text","series","colorByPoint","tagsChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","Card","CardContent","fontWeight","md","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}