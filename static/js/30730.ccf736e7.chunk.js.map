{"version":3,"file":"static/js/30730.ccf736e7.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/SustainabilityReports/EnergyConsumption.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst EnergyConsumptionAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // Calculate KPIs\r\n  const totalConsumption = data.reduce((sum, record) => sum + record.totalConsumption, 0);\r\n  const totalCost = data.reduce((sum, record) => sum + record.cost, 0);\r\n  const avgReductionTarget = data.reduce((sum, record) => sum + record.reductionTarget, 0) / data.length;\r\n  const avgAchievedReduction = data.reduce((sum, record) => sum + record.achievedReduction, 0) / data.length;\r\n\r\n  // Highcharts options for energy consumption over time\r\n  const consumptionChartOptions = {\r\n    title: { text: 'Energy Consumption Over Time (MWh)' },\r\n    xAxis: { categories: data.map((record) => record.year) },\r\n    yAxis: { title: { text: 'Consumption (MWh)' } },\r\n    series: [\r\n      { name: 'Total Consumption', data: data.map((record) => record.totalConsumption) },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for cost of energy over time\r\n  const costChartOptions = {\r\n    title: { text: 'Energy Cost Over Time ($)' },\r\n    xAxis: { categories: data.map((record) => record.year) },\r\n    yAxis: { title: { text: 'Cost ($)' } },\r\n    series: [\r\n      { name: 'Total Cost', data: data.map((record) => record.cost) },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for achieved vs target reduction\r\n  const reductionChartOptions = {\r\n    title: { text: 'Reduction Target vs Achieved Reduction (%)' },\r\n    xAxis: { categories: data.map((record) => record.year) },\r\n    yAxis: { title: { text: 'Reduction (%)' } },\r\n    series: [\r\n      { name: 'Reduction Target', data: data.map((record) => record.reductionTarget) },\r\n      { name: 'Achieved Reduction', data: data.map((record) => record.achievedReduction) },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Consumption (MWh)</Typography>\r\n          <Typography variant=\"h4\">{totalConsumption.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Cost ($)</Typography>\r\n          <Typography variant=\"h4\">{totalCost.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Average Reduction Target (%)</Typography>\r\n          <Typography variant=\"h4\">{avgReductionTarget.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Average Achieved Reduction (%)</Typography>\r\n          <Typography variant=\"h4\">{avgAchievedReduction.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={consumptionChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={costChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={reductionChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{record.year}:</Typography>\r\n              {record.tags.map((tag) => (\r\n                <Chip key={tag.id} label={tag.label} style={{ margin: '5px' }} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EnergyConsumptionAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalConsumption","reduce","sum","record","totalCost","cost","avgReductionTarget","reductionTarget","length","avgAchievedReduction","achievedReduction","consumptionChartOptions","title","text","xAxis","categories","map","year","yAxis","series","name","costChartOptions","reductionChartOptions","_jsxs","Grid","container","spacing","item","xs","md","Card","variant","gutterBottom","toFixed","HighchartsReact","highcharts","Highcharts","options","index","tags","tag","Chip","label","style","margin","id"],"sourceRoot":""}