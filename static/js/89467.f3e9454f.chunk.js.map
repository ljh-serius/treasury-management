{"version":3,"file":"static/js/89467.f3e9454f.chunk.js","mappings":"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","sources":["pages/Analysis/LogisticsSupplyChain/OrderManagement/OrderTracking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function OrderTrackingDashboard({ fetchItems }) {\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [deliveryDateTrends, setDeliveryDateTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setOrderData(data);\r\n      processOrderData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processOrderData = (data) => {\r\n    // Total Orders\r\n    setTotalOrders(data.length);\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, order) => {\r\n      acc[order.status] = (acc[order.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Delivery Date Trends for Line Chart\r\n    const trendsData = data\r\n      .filter(order => order.actualDeliveryDate)\r\n      .map(order => ({\r\n        date: new Date(order.actualDeliveryDate).getTime(),\r\n        count: 1,\r\n      }))\r\n      .reduce((acc, curr) => {\r\n        const existing = acc.find(item => item.date === curr.date);\r\n        if (existing) {\r\n          existing.count += 1;\r\n        } else {\r\n          acc.push(curr);\r\n        }\r\n        return acc;\r\n      }, [])\r\n      .sort((a, b) => a.date - b.date);\r\n    setDeliveryDateTrends(trendsData);\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Order Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Delivery Date Trends\r\n  const deliveryDateChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Delivery Date Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Delivery Date' } },\r\n    yAxis: { title: { text: 'Number of Deliveries' } },\r\n    series: [{\r\n      name: 'Deliveries',\r\n      data: deliveryDateTrends.map(item => [item.date, item.count]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Order Tracking Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Orders</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalOrders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Delivery Date Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={deliveryDateChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["OrderTrackingDashboard","_ref","fetchItems","orderData","setOrderData","useState","totalOrders","setTotalOrders","statusDistribution","setStatusDistribution","deliveryDateTrends","setDeliveryDateTrends","loading","setLoading","useEffect","async","data","processOrderData","fetchData","length","statusCounts","reduce","acc","order","status","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendsData","filter","actualDeliveryDate","date","Date","getTime","count","curr","existing","find","item","push","sort","a","b","statusChartOptions","chart","type","title","text","series","colorByPoint","deliveryDateChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}