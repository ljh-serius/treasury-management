{"version":3,"file":"static/js/1578.e7c41d6b.chunk.js","mappings":"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","sources":["pages/Analysis/CrisisRiskManagement/RiskAssessments/RiskResponsePlanning.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst RiskResponsePlanningAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    const notStartedCount = data.filter(item => item.status === 'not-started').length;\r\n    const inProgressCount = data.filter(item => item.status === 'in-progress').length;\r\n    const completedCount = data.filter(item => item.status === 'completed').length;\r\n\r\n    const responsiblePeopleCounts = data.reduce((acc, item) => {\r\n        acc[item.responsiblePerson] = (acc[item.responsiblePerson] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const statusOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Risk Response Status Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Status',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Not Started', y: notStartedCount },\r\n                    { name: 'In Progress', y: inProgressCount },\r\n                    { name: 'Completed', y: completedCount },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const responsiblePersonOptions = {\r\n        chart: { type: 'bar' },\r\n        title: { text: 'Actions by Responsible Person' },\r\n        xAxis: { categories: Object.keys(responsiblePeopleCounts) },\r\n        series: [\r\n            {\r\n                name: 'Tasks',\r\n                data: Object.values(responsiblePeopleCounts),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">Risk Response Planning Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Response Plans</Typography>\r\n                        <Typography variant=\"h4\">{data.length}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Completed Response Plans</Typography>\r\n                        <Typography variant=\"h4\">{completedCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">In Progress Response Plans</Typography>\r\n                        <Typography variant=\"h4\">{inProgressCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={statusOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={responsiblePersonOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default RiskResponsePlanningAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","notStartedCount","filter","item","status","length","inProgressCount","completedCount","responsiblePeopleCounts","reduce","acc","responsiblePerson","statusOptions","chart","type","title","text","series","name","colorByPoint","y","responsiblePersonOptions","xAxis","categories","Object","keys","values","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}