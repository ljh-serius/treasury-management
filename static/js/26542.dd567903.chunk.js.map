{"version":3,"file":"static/js/26542.dd567903.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/GeneralLedger/JournalEntries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function JournalEntriesDashboard({ fetchItems }) {\r\n  const [journalData, setJournalData] = useState([]);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [debitsOverTime, setDebitsOverTime] = useState([]);\r\n  const [creditsOverTime, setCreditsOverTime] = useState([]);\r\n  const [netBalanceOverTime, setNetBalanceOverTime] = useState([]);\r\n  const [entriesOverTime, setEntriesOverTime] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [totalEntries, setTotalEntries] = useState(0);\r\n  const [totalDebit, setTotalDebit] = useState(0);\r\n  const [totalCredit, setTotalCredit] = useState(0);\r\n  const [netBalance, setNetBalance] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setJournalData(data);\r\n      processJournalData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processJournalData = (data) => {\r\n    // Total Number of Journal Entries\r\n    setTotalEntries(data.length);\r\n\r\n    // Total Debit and Credit Amounts\r\n    const totals = data.reduce(\r\n      (acc, entry) => {\r\n        acc.debit += Number(entry.debit) || 0;\r\n        acc.credit += Number(entry.credit) || 0;\r\n        return acc;\r\n      },\r\n      { debit: 0, credit: 0 }\r\n    );\r\n\r\n    setTotalDebit(totals.debit);\r\n    setTotalCredit(totals.credit);\r\n    setNetBalance(totals.debit - totals.credit);\r\n\r\n    // Entries by Currency\r\n    const currencyCounts = data.reduce((acc, entry) => {\r\n      acc[entry.currency] = (acc[entry.currency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Debits and Credits Over Time\r\n    const debitsCreditsOverTime = data.reduce((acc, entry) => {\r\n      const month = new Date(entry.date).getMonth() + 1;\r\n      acc[month] = acc[month] || { debit: 0, credit: 0 };\r\n      acc[month].debit += Number(entry.debit) || 0;\r\n      acc[month].credit += Number(entry.credit) || 0;\r\n      return acc;\r\n    }, {});\r\n\r\n    setDebitsOverTime(Object.keys(debitsCreditsOverTime).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: debitsCreditsOverTime[key].debit,\r\n    })));\r\n\r\n    setCreditsOverTime(Object.keys(debitsCreditsOverTime).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: debitsCreditsOverTime[key].credit,\r\n    })));\r\n\r\n    // Net Balance Over Time\r\n    setNetBalanceOverTime(Object.keys(debitsCreditsOverTime).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: debitsCreditsOverTime[key].debit - debitsCreditsOverTime[key].credit,\r\n    })));\r\n\r\n    // Entries Distribution Over Time\r\n    const entriesCounts = data.reduce((acc, entry) => {\r\n      const month = new Date(entry.date).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setEntriesOverTime(Object.keys(entriesCounts).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: entriesCounts[key],\r\n    })));\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, entry) => {\r\n      entry.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(key => ({\r\n      name: key,\r\n      y: tagsCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const currencyChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Entries by Currency',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Currencies',\r\n        colorByPoint: true,\r\n        data: currencyDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const debitsCreditsChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Debits and Credits Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: debitsOverTime.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Debits',\r\n        data: debitsOverTime.map(data => data.y),\r\n      },\r\n      {\r\n        name: 'Credits',\r\n        data: creditsOverTime.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const netBalanceChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Net Balance Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: netBalanceOverTime.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Net Balance',\r\n        data: netBalanceOverTime.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const entriesOverTimeChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Entries Distribution Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: entriesOverTime.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Number of Entries',\r\n        data: entriesOverTime.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Tags Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        data: tagsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Journal Entries Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Entries</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEntries}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Debit</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalDebit.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Credit</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalCredit.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Net Balance</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  ${netBalance.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={debitsCreditsChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={netBalanceChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={entriesOverTimeChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["JournalEntriesDashboard","_ref","fetchItems","journalData","setJournalData","useState","currencyDistribution","setCurrencyDistribution","debitsOverTime","setDebitsOverTime","creditsOverTime","setCreditsOverTime","netBalanceOverTime","setNetBalanceOverTime","entriesOverTime","setEntriesOverTime","tagsDistribution","setTagsDistribution","totalEntries","setTotalEntries","totalDebit","setTotalDebit","totalCredit","setTotalCredit","netBalance","setNetBalance","loading","setLoading","useEffect","async","data","processJournalData","fetchData","length","totals","reduce","acc","entry","debit","Number","credit","currencyCounts","currency","Object","keys","map","key","name","y","debitsCreditsOverTime","month","Date","date","getMonth","entriesCounts","tagsCounts","tags","forEach","tag","currencyChartOptions","chart","type","title","text","series","colorByPoint","debitsCreditsChartOptions","xAxis","categories","netBalanceChartOptions","entriesOverTimeChartOptions","tagsChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}