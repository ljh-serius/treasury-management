{"version":3,"file":"static/js/39170.f54d3815.chunk.js","mappings":"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","sources":["pages/Analysis/IntellectualHumanCapital/InnovationManagement/InnovationPipeline.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function InnovationPipelineDashboard({ fetchItems }) {\r\n  const [pipelineData, setPipelineData] = useState([]);\r\n  const [totalPipelines, setTotalPipelines] = useState(0);\r\n  const [progressDistribution, setProgressDistribution] = useState([]);\r\n  const [stageTrends, setStageTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setPipelineData(data);\r\n      processPipelineData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processPipelineData = (data) => {\r\n    // Total Pipelines\r\n    setTotalPipelines(data.length);\r\n\r\n    // Progress Distribution for Pie Chart\r\n    const progressCounts = data.reduce((acc, pipeline) => {\r\n      acc[pipeline.stage] = (acc[pipeline.stage] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setProgressDistribution(Object.keys(progressCounts).map(key => ({\r\n      name: key.replace('-', ' ').toUpperCase(),\r\n      y: progressCounts[key],\r\n    })));\r\n\r\n    // Stage Progress Trends for Line Chart\r\n    const trendsData = data.map(pipeline => ({\r\n      date: new Date(pipeline.expectedCompletionDate).getTime(),\r\n      progress: pipeline.progressPercentage,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setStageTrends(trendsData);\r\n  };\r\n\r\n  // Highcharts options for Progress Distribution\r\n  const progressChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Pipeline Progress Distribution' },\r\n    series: [{\r\n      name: 'Stage',\r\n      colorByPoint: true,\r\n      data: progressDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Stage Progress Trends\r\n  const stageTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Stage Completion Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Expected Completion Date' } },\r\n    yAxis: { title: { text: 'Progress Percentage' } },\r\n    series: [{\r\n      name: 'Progress',\r\n      data: stageTrends.map(item => [item.date, item.progress]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Innovation Pipeline Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Pipelines</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPipelines}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Progress Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={progressChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Stage Completion Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={stageTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["InnovationPipelineDashboard","_ref","fetchItems","pipelineData","setPipelineData","useState","totalPipelines","setTotalPipelines","progressDistribution","setProgressDistribution","stageTrends","setStageTrends","loading","setLoading","useEffect","async","data","processPipelineData","fetchData","length","progressCounts","reduce","acc","pipeline","stage","Object","keys","map","key","name","replace","toUpperCase","y","trendsData","date","Date","expectedCompletionDate","getTime","progress","progressPercentage","sort","a","b","progressChartOptions","chart","type","title","text","series","colorByPoint","stageTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}