{"version":3,"file":"static/js/75759.180934f3.chunk.js","mappings":"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","sources":["pages/Analysis/RealEstatePropertyManagement/FacilitiesManagement/UtilityManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function UtilityManagementDashboard({ fetchItems }) {\r\n  const [utilityData, setUtilityData] = useState([]);\r\n  const [totalConsumption, setTotalConsumption] = useState(0);\r\n  const [overduePayments, setOverduePayments] = useState(0);\r\n  const [utilityTypeDistribution, setUtilityTypeDistribution] = useState([]);\r\n  const [paymentTimeline, setPaymentTimeline] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setUtilityData(data);\r\n      processUtilityData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processUtilityData = (data) => {\r\n    // Total Consumption\r\n    const totalUsage = data.reduce((acc, utility) => acc + Number(utility.consumptionAmount), 0);\r\n    setTotalConsumption(totalUsage);\r\n\r\n    // Count Overdue Payments\r\n    const overdue = data.filter(utility => utility.paymentStatus === 'overdue').length;\r\n    setOverduePayments(overdue);\r\n\r\n    // Utility Type Distribution for Pie Chart\r\n    const typeCounts = data.reduce((acc, utility) => {\r\n      acc[utility.utilityType] = (acc[utility.utilityType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setUtilityTypeDistribution(Object.keys(typeCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: typeCounts[key],\r\n    })));\r\n\r\n    // Payment Timeline for Line Chart\r\n    const timeline = data.map(utility => ({\r\n      billing: new Date(utility.billingDate).getTime(),\r\n      due: new Date(utility.dueDate).getTime(),\r\n      name: utility.utilityType,\r\n    })).sort((a, b) => a.billing - b.billing);\r\n    setPaymentTimeline(timeline);\r\n  };\r\n\r\n  // Highcharts options for Utility Type Distribution\r\n  const utilityTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Utility Type Distribution' },\r\n    series: [{\r\n      name: 'Type',\r\n      colorByPoint: true,\r\n      data: utilityTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Payment Timeline\r\n  const paymentTimelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Payment Timeline' },\r\n    xAxis: { type: 'datetime', title: { text: 'Billing Date' } },\r\n    yAxis: { title: { text: 'Due Date' } },\r\n    series: [{\r\n      name: 'Payment Period',\r\n      data: paymentTimeline.map(item => [item.billing, item.due]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Utility Management Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Utility Consumption</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalConsumption.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Overdue Payments</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {overduePayments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Utility Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={utilityTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Payment Timeline Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={paymentTimelineChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["UtilityManagementDashboard","_ref","fetchItems","utilityData","setUtilityData","useState","totalConsumption","setTotalConsumption","overduePayments","setOverduePayments","utilityTypeDistribution","setUtilityTypeDistribution","paymentTimeline","setPaymentTimeline","loading","setLoading","useEffect","async","data","processUtilityData","fetchDataAsync","totalUsage","reduce","acc","utility","Number","consumptionAmount","overdue","filter","paymentStatus","length","typeCounts","utilityType","Object","keys","map","key","name","charAt","toUpperCase","slice","y","timeline","billing","Date","billingDate","getTime","due","dueDate","sort","a","b","utilityTypeChartOptions","chart","type","title","text","series","colorByPoint","paymentTimelineChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}