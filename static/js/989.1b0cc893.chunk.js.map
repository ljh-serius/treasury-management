{"version":3,"file":"static/js/989.1b0cc893.chunk.js","mappings":"wNA4EA,QAxEA,SAA0BA,GAAsB,IAArB,eAAEC,GAAgBD,EAC3C,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAAEG,eAAgB,EAAGC,gBAAiB,EAAGC,WAAY,KAEtFC,EAAAA,EAAAA,YAAU,KACSC,WACf,MAAMC,QAAaX,IACnBE,EAAiBS,GAGjB,MAAML,EAAiBK,EAAKC,OACtBL,EAAkBI,EAAKE,QAAOC,GAAgC,WAApBA,EAASC,SAAqBH,OACxEJ,EAAaG,EAAKK,QAAO,CAACC,EAAKH,IAAaG,GAAOH,EAASI,KAAO,IAAI,GAAKZ,EAElFD,EAAQ,CAAEC,iBAAgBC,kBAAiBC,cAAa,EAG1DW,EAAU,GACT,IAEH,MAAMC,EAAkB,CACtBC,MAAO,CAAEC,KAAM,6BACfC,OAAQ,CACN,CACEC,KAAM,MACNb,KAAMV,EAAcwB,KAAIX,GAAYA,EAASI,QAGjDQ,MAAO,CAAEC,WAAY1B,EAAcwB,KAAIX,GAAYA,EAASc,gBAC5DC,MAAO,CAAER,MAAO,CAAEC,KAAM,aAGpBQ,EAA8B,CAClCC,MAAO,CAAEC,KAAM,OACfX,MAAO,CAAEC,KAAM,gCACfC,OAAQ,CACN,CACEC,KAAM,YACNS,cAAc,EACdtB,KAAM,CACJ,CAAEa,KAAM,SAAUU,EAAG9B,EAAKG,iBAC1B,CAAEiB,KAAM,YAAaU,EAAGjC,EAAcY,QAAOC,GAAgC,cAApBA,EAASC,SAAwBH,QAC1F,CAAEY,KAAM,UAAWU,EAAGjC,EAAcY,QAAOC,GAAgC,YAApBA,EAASC,SAAsBH,QACtF,CAAEY,KAAM,YAAaU,EAAGjC,EAAcY,QAAOC,GAAgC,cAApBA,EAASC,SAAwBH,YAMlG,OACEuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEC,QAAS,OAAQC,eAAgB,gBAAiBJ,SAAA,EAC9DD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIhC,EAAKE,qBAEX6B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIhC,EAAKG,sBAEX4B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIhC,EAAKI,WAAWiC,QAAQ,GAAG,cAGnCJ,EAAAA,EAAAA,KAACK,IAAe,CAACC,WAAYC,IAAYC,QAASzB,KAClDiB,EAAAA,EAAAA,KAACK,IAAe,CAACC,WAAYC,IAAYC,QAASf,MAGxD,C","sources":["pages/Analysis/Campaigns.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nfunction CampaignsAnalysis({ fetchCampaigns }) {\r\n  const [campaignsData, setCampaignsData] = useState([]);\r\n  const [kpis, setKpis] = useState({ totalCampaigns: 0, activeCampaigns: 0, averageROI: 0 });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const data = await fetchCampaigns();\r\n      setCampaignsData(data);\r\n\r\n      // Calculate KPIs\r\n      const totalCampaigns = data.length;\r\n      const activeCampaigns = data.filter(campaign => campaign.status === 'active').length;\r\n      const averageROI = data.reduce((sum, campaign) => sum + (campaign.roi || 0), 0) / totalCampaigns;\r\n\r\n      setKpis({ totalCampaigns, activeCampaigns, averageROI });\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  const roiChartOptions = {\r\n    title: { text: 'Campaign ROI Distribution' },\r\n    series: [\r\n      {\r\n        name: 'ROI',\r\n        data: campaignsData.map(campaign => campaign.roi),\r\n      },\r\n    ],\r\n    xAxis: { categories: campaignsData.map(campaign => campaign.campaignName) },\r\n    yAxis: { title: { text: 'ROI (%)' } },\r\n  };\r\n\r\n  const campaignsStatusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Campaign Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Campaigns',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Active', y: kpis.activeCampaigns },\r\n          { name: 'Completed', y: campaignsData.filter(campaign => campaign.status === 'completed').length },\r\n          { name: 'On Hold', y: campaignsData.filter(campaign => campaign.status === 'on_hold').length },\r\n          { name: 'Cancelled', y: campaignsData.filter(campaign => campaign.status === 'cancelled').length },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Campaigns Dashboard</h2>\r\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n        <div>\r\n          <h3>Total Campaigns</h3>\r\n          <p>{kpis.totalCampaigns}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Active Campaigns</h3>\r\n          <p>{kpis.activeCampaigns}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Average ROI</h3>\r\n          <p>{kpis.averageROI.toFixed(2)}%</p>\r\n        </div>\r\n      </div>\r\n      <HighchartsReact highcharts={Highcharts} options={roiChartOptions} />\r\n      <HighchartsReact highcharts={Highcharts} options={campaignsStatusChartOptions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CampaignsAnalysis;\r\n"],"names":["_ref","fetchCampaigns","campaignsData","setCampaignsData","useState","kpis","setKpis","totalCampaigns","activeCampaigns","averageROI","useEffect","async","data","length","filter","campaign","status","reduce","sum","roi","loadData","roiChartOptions","title","text","series","name","map","xAxis","categories","campaignName","yAxis","campaignsStatusChartOptions","chart","type","colorByPoint","y","_jsxs","children","_jsx","style","display","justifyContent","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}