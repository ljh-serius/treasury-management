{"version":3,"file":"static/js/11096.147db5b8.chunk.js","mappings":"wTAKe,SAASA,EAAqBC,GAAkB,IAAjB,WAAEC,GAAYD,EAC1D,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IAC5CG,EAAkBC,IAAuBJ,EAAAA,EAAAA,UAAS,KAClDK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAEvCO,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAaZ,IACnBE,EAAYU,GACZC,EAAgBD,GAChBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAACd,IAEJ,MAAMa,EAAmBD,IACvBP,EAAiBO,EAAKG,QAEtB,MAAMC,EAAU,CAAC,EACjBJ,EAAKK,SAASC,IACZA,EAAKC,KAAKF,SAAQG,IAChBJ,EAAQI,IAAQJ,EAAQI,IAAQ,GAAK,CAAC,GACtC,IAGJ,MAAMC,EAAYC,OAAOC,QAAQP,GAASQ,KAAIC,IAAA,IAAEL,EAAKM,GAAMD,EAAA,MAAM,CAC/DE,KAAMP,EACNQ,EAAGF,EACJ,IACDnB,EAAoBc,EAAU,EAI1BQ,EAAmB,CACvBC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,qBACfC,OAAQ,CACN,CACEP,KAAM,OACNQ,cAAc,EACdvB,KAAMN,KAKZ,OACE8B,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMzC,EAAQkC,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,6BAItCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,UAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACtC,MAAI,EAACyC,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAAAnB,UACHN,EAAAA,EAAAA,MAAC0B,EAAAA,EAAW,CAAApB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,yBACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEwB,WAAY,QAASrB,SAC/DtC,cAOXuC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGnB,GAAI,CAAEyB,UAAW,GAAItB,UAE/CC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACtC,MAAI,EAACyC,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAASvC,aAM9D,C","sources":["pages/Analysis/GovernanceStrategy/BusinessPlans/SwotAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function SwotAnalysisDashboard({ fetchItems }) {\r\n  const [swotData, setSwotData] = useState([]);\r\n  const [totalAnalyses, setTotalAnalyses] = useState(0);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setSwotData(data);\r\n      processSwotData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processSwotData = (data) => {\r\n    setTotalAnalyses(data.length);\r\n\r\n    const tagsMap = {};\r\n    data.forEach((item) => {\r\n      item.tags.forEach(tag => {\r\n        tagsMap[tag] = (tagsMap[tag] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    const tagsArray = Object.entries(tagsMap).map(([tag, count]) => ({\r\n      name: tag,\r\n      y: count,\r\n    }));\r\n    setTagsDistribution(tagsArray);\r\n  };\r\n\r\n  // Highcharts options for Tags Distribution\r\n  const tagsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tags Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        colorByPoint: true,\r\n        data: tagsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          SWOT Analysis Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total SWOT Analyses</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAnalyses}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Tags Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["SwotAnalysisDashboard","_ref","fetchItems","swotData","setSwotData","useState","totalAnalyses","setTotalAnalyses","tagsDistribution","setTagsDistribution","loading","setLoading","useEffect","async","data","processSwotData","fetchData","length","tagsMap","forEach","item","tags","tag","tagsArray","Object","entries","map","_ref2","count","name","y","tagsChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}