{"version":3,"file":"static/js/43223.fda616ad.chunk.js","mappings":"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","sources":["pages/Analysis/CrisisRiskManagement/BusinessContinuity/BusinessContinuityPlans.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Grid, Typography, Paper } from '@mui/material';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\n\r\nconst BusinessContinuityPlansAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const items = await fetchItems(); // Fetching data using the function passed as prop\r\n            setData(items);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <Typography>Loading...</Typography>;\r\n    }\r\n\r\n    const totalPlans = data.length;\r\n    const activePlans = data.filter(plan => plan.status === 'active').length;\r\n    const archivedPlans = data.filter(plan => plan.status === 'archived').length;\r\n\r\n    const statusChartOptions = {\r\n        title: { text: 'Plan Status Distribution' },\r\n        chart: { type: 'pie' },\r\n        series: [\r\n            {\r\n                name: 'Plans',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Draft', y: data.filter(plan => plan.status === 'draft').length },\r\n                    { name: 'Active', y: activePlans },\r\n                    { name: 'Archived', y: archivedPlans },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const reviewDateChartOptions = {\r\n        title: { text: 'Plans by Review Date' },\r\n        chart: { type: 'line' },\r\n        xAxis: {\r\n            categories: data.map(plan => new Date(plan.reviewDate).getFullYear()),\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Plans',\r\n                data: data.map(plan => new Date(plan.reviewDate).getTime()),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ padding: 3 }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Business Continuity Plans Analytics\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                    <Paper elevation={3} sx={{ padding: 2 }}>\r\n                        <Typography variant=\"h6\">Total Plans</Typography>\r\n                        <Typography variant=\"h4\">{totalPlans}</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Paper elevation={3} sx={{ padding: 2 }}>\r\n                        <Typography variant=\"h6\">Active Plans</Typography>\r\n                        <Typography variant=\"h4\">{activePlans}</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Paper elevation={3} sx={{ padding: 2 }}>\r\n                        <Typography variant=\"h6\">Archived Plans</Typography>\r\n                        <Typography variant=\"h4\">{archivedPlans}</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3} sx={{ marginTop: 3 }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <HighchartsReact highcharts={Highcharts} options={reviewDateChartOptions} />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default BusinessContinuityPlansAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","items","fetchData","_jsx","Typography","children","totalPlans","length","activePlans","filter","plan","status","archivedPlans","statusChartOptions","title","text","chart","type","series","name","colorByPoint","y","reviewDateChartOptions","xAxis","categories","map","Date","reviewDate","getFullYear","getTime","_jsxs","Box","sx","padding","variant","gutterBottom","Grid","container","spacing","item","xs","md","Paper","elevation","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}