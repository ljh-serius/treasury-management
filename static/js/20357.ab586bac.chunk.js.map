{"version":3,"file":"static/js/20357.ab586bac.chunk.js","mappings":"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","sources":["pages/Analysis/TrainingDevelopment/LearningManagement/CertificationTracking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function CertificationTrackingDashboard({ fetchItems }) {\r\n  const [certificationsData, setCertificationsData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [organizationDistribution, setOrganizationDistribution] = useState([]);\r\n  const [upcomingExpirationsData, setUpcomingExpirationsData] = useState([]);\r\n  const [totalCertifications, setTotalCertifications] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setCertificationsData(data);\r\n      processCertificationsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processCertificationsData = (data) => {\r\n    // Total Certifications\r\n    setTotalCertifications(data.length);\r\n\r\n    // Certifications by Status\r\n    const statusCounts = data.reduce((acc, certification) => {\r\n      acc[certification.status] = (acc[certification.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Certifications by Issuing Organization\r\n    const organizationCounts = data.reduce((acc, certification) => {\r\n      acc[certification.issuingOrganization] = (acc[certification.issuingOrganization] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setOrganizationDistribution(Object.keys(organizationCounts).map(key => ({\r\n      name: key,\r\n      y: organizationCounts[key],\r\n    })));\r\n\r\n    // Upcoming Expirations\r\n    const upcomingExpirations = data.filter(certification => {\r\n      const expirationDate = new Date(certification.expirationDate);\r\n      const today = new Date();\r\n      const daysUntilExpiration = (expirationDate - today) / (1000 * 60 * 60 * 24);\r\n      return daysUntilExpiration <= 30 && daysUntilExpiration >= 0;  // within the next 30 days\r\n    });\r\n\r\n    setUpcomingExpirationsData(upcomingExpirations.map(cert => ({\r\n      name: cert.certificationName,\r\n      expirationDate: cert.expirationDate,\r\n    })));\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const statusChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Certifications by Status',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Status',\r\n        colorByPoint: true,\r\n        data: statusDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const organizationChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Certifications by Issuing Organization',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Organization',\r\n        data: organizationDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Certification Tracking Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Certifications</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalCertifications}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={organizationChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Upcoming Expirations Section */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Upcoming Expirations</Typography>\r\n                <ul>\r\n                  {upcomingExpirationsData.map(expiration => (\r\n                    <li key={expiration.name}>\r\n                      <strong>{expiration.name}</strong> - Expires on {expiration.expirationDate}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CertificationTrackingDashboard","_ref","fetchItems","certificationsData","setCertificationsData","useState","statusDistribution","setStatusDistribution","organizationDistribution","setOrganizationDistribution","upcomingExpirationsData","setUpcomingExpirationsData","totalCertifications","setTotalCertifications","loading","setLoading","useEffect","async","data","processCertificationsData","fetchData","length","statusCounts","reduce","acc","certification","status","Object","keys","map","key","name","y","organizationCounts","issuingOrganization","upcomingExpirations","filter","daysUntilExpiration","Date","expirationDate","cert","certificationName","statusChartOptions","chart","type","title","text","series","colorByPoint","organizationChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","HighchartsReact","highcharts","Highcharts","options","expiration"],"sourceRoot":""}