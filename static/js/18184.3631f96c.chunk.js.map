{"version":3,"file":"static/js/18184.3631f96c.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Timesheets/TimeTracking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function TimeTrackingDashboard({ fetchItems }) {\r\n  const [trackingData, setTrackingData] = useState([]);\r\n  const [totalHours, setTotalHours] = useState(0);\r\n  const [urgentTasks, setUrgentTasks] = useState(0);\r\n  const [taskDistribution, setTaskDistribution] = useState([]);\r\n  const [timeTrends, setTimeTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setTrackingData(data);\r\n      processTrackingData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processTrackingData = (data) => {\r\n    // Total Hours\r\n    const total = data.reduce((acc, item) => acc + item.hoursSpent, 0);\r\n    setTotalHours(total);\r\n\r\n    // Urgent Tasks\r\n    const urgent = data.filter(item => item.tags.includes('urgent')).length;\r\n    setUrgentTasks(urgent);\r\n\r\n    // Task Distribution for Pie Chart\r\n    const taskCounts = data.reduce((acc, item) => {\r\n      acc[item.taskId] = (acc[item.taskId] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setTaskDistribution(Object.keys(taskCounts).map(key => ({\r\n      name: `Task ${key}`,\r\n      y: taskCounts[key],\r\n    })));\r\n\r\n    // Time Trends for Line Chart\r\n    const trendData = data.map(item => ({\r\n      date: new Date(item.startTime).getTime(),\r\n      hours: item.hoursSpent,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setTimeTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Task Distribution\r\n  const taskChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Task Distribution' },\r\n    series: [{\r\n      name: 'Tasks',\r\n      colorByPoint: true,\r\n      data: taskDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Time Tracking Trends\r\n  const timeTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Time Tracking Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Hours Spent' } },\r\n    series: [{\r\n      name: 'Hours Spent',\r\n      data: timeTrends.map(item => [item.date, item.hours]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Time Tracking Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Hours Spent</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalHours}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Urgent Tasks</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {urgentTasks}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Task Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={taskChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Time Tracking Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={timeTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["TimeTrackingDashboard","_ref","fetchItems","trackingData","setTrackingData","useState","totalHours","setTotalHours","urgentTasks","setUrgentTasks","taskDistribution","setTaskDistribution","timeTrends","setTimeTrends","loading","setLoading","useEffect","async","data","processTrackingData","fetchDataAsync","total","reduce","acc","item","hoursSpent","urgent","filter","tags","includes","length","taskCounts","taskId","Object","keys","map","key","name","y","trendData","date","Date","startTime","getTime","hours","sort","a","b","taskChartOptions","chart","type","title","text","series","colorByPoint","timeTrendChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}