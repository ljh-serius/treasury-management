{"version":3,"file":"static/js/39586.77fd3cf8.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Pricing/PromotionalPricing.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function PromotionalPricingDashboard({ fetchData }) {\r\n  const [promotionData, setPromotionData] = useState([]);\r\n  const [totalPromotions, setTotalPromotions] = useState(0);\r\n  const [averageDiscountRate, setAverageDiscountRate] = useState(0);\r\n  const [seasonalPromotions, setSeasonalPromotions] = useState(0);\r\n  const [clearancePromotions, setClearancePromotions] = useState(0);\r\n  const [promotionPerformance, setPromotionPerformance] = useState([]);\r\n  const [validityTrends, setValidityTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setPromotionData(data);\r\n      processPromotionData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processPromotionData = (data) => {\r\n    // Total Promotions\r\n    setTotalPromotions(data.length);\r\n\r\n    // Average Discount Rate\r\n    const totalDiscount = data.reduce((acc, promotion) => acc + Number(promotion.discountRate), 0);\r\n    setAverageDiscountRate(totalDiscount / data.length);\r\n\r\n    // Count Seasonal and Clearance Promotions\r\n    const seasonal = data.filter(promotion => promotion.tags.includes('seasonal')).length;\r\n    const clearance = data.filter(promotion => promotion.tags.includes('clearance')).length;\r\n    setSeasonalPromotions(seasonal);\r\n    setClearancePromotions(clearance);\r\n\r\n    // Promotion Performance for Column Chart\r\n    const performanceData = data.map(promotion => ({\r\n      name: `Promo ${promotion.promotionId.slice(-4)}`,\r\n      y: Number(promotion.discountRate),\r\n    }));\r\n    setPromotionPerformance(performanceData);\r\n\r\n    // Validity Trends Over Time\r\n    const trends = data.map(promotion => ({\r\n      start: new Date(promotion.validFrom).getTime(),\r\n      end: new Date(promotion.validTo).getTime(),\r\n      name: promotion.promotionName,\r\n    })).sort((a, b) => a.start - b.start);\r\n    setValidityTrends(trends);\r\n  };\r\n\r\n  // Highcharts options for Promotion Performance\r\n  const performanceChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Promotion Performance by Discount Rate' },\r\n    series: [{\r\n      name: 'Discount Rate',\r\n      data: promotionPerformance,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Validity Trends Over Time\r\n  const validityTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Promotion Validity Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Promotion Validity Period' } },\r\n    series: [{\r\n      name: 'Promotion Validity',\r\n      data: validityTrends.map(item => [item.start, item.end]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Promotional Pricing Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Promotions</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPromotions}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Discount Rate (%)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageDiscountRate.toFixed(2)}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Seasonal Promotions</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {seasonalPromotions}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Clearance Promotions</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {clearancePromotions}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Promotion Performance Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={performanceChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Validity Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={validityTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["PromotionalPricingDashboard","_ref","fetchData","promotionData","setPromotionData","useState","totalPromotions","setTotalPromotions","averageDiscountRate","setAverageDiscountRate","seasonalPromotions","setSeasonalPromotions","clearancePromotions","setClearancePromotions","promotionPerformance","setPromotionPerformance","validityTrends","setValidityTrends","loading","setLoading","useEffect","async","data","processPromotionData","fetchDataAsync","length","totalDiscount","reduce","acc","promotion","Number","discountRate","seasonal","filter","tags","includes","clearance","performanceData","map","name","promotionId","slice","y","trends","start","Date","validFrom","getTime","end","validTo","promotionName","sort","a","b","performanceChartOptions","chart","type","title","text","series","validityTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}