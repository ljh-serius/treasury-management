"use strict";(self.webpackChunktresorerie_management=self.webpackChunktresorerie_management||[]).push([[139],{139:(e,t,a)=>{a.r(t),a.d(t,{addItem:()=>c,costsHeadCells:()=>n,deleteItem:()=>d,entityName:()=>l,fetchItemById:()=>p,fetchItems:()=>i,fieldsConfig:()=>r,updateItem:()=>s});var o=a(1256);const r={costId:{label:"Cost ID",type:"text",faker:"datatype.uuid"},costName:{label:"Cost Name",type:"text",faker:"company.name"},cost:{label:"Cost",type:"number",faker:"finance.amount"},description:{label:"Description",type:"text",faker:"lorem.sentence"},allocationDate:{label:"Allocation Date",type:"date",faker:"date.past"},allocationType:{label:"Allocation Type",type:"select",options:[{id:"1",label:"Type 1"},{id:"2",label:"Type 2"},{id:"3",label:"Type 3"}],faker:"random.arrayElement"},notes:{label:"Notes",type:"text",faker:"lorem.paragraph"},department:{label:"Department",type:"select",options:[{id:"finance",label:"Finance"},{id:"hr",label:"Human Resources"},{id:"it",label:"IT"}],faker:"random.arrayElement"},priority:{label:"Priority",type:"select",options:[{id:"high",label:"High"},{id:"medium",label:"Medium"},{id:"low",label:"Low"}],faker:"random.arrayElement"},status:{label:"Status",type:"select",options:[{id:"active",label:"Active"},{id:"inactive",label:"Inactive"}],faker:"random.arrayElement"},duration:{label:"Duration",type:"number",faker:"datatype.number"},currency:{label:"Currency",type:"text",faker:"finance.currencyCode"},approvedBy:{label:"Approved By",type:"text",faker:"name.fullName"},allocationCode:{label:"Allocation Code",type:"text",faker:"datatype.uuid"},fundingSource:{label:"Funding Source",type:"text",faker:"company.name"},costCenter:{label:"Cost Center",type:"text",faker:"commerce.department"},budgetCode:{label:"Budget Code",type:"text",faker:"finance.bic"},financialYear:{label:"Financial Year",type:"number",faker:"date.past"},quarter:{label:"Quarter",type:"select",options:[{id:"q1",label:"Q1"},{id:"q2",label:"Q2"},{id:"q3",label:"Q3"},{id:"q4",label:"Q4"}],faker:"random.arrayElement"},allocationMethod:{label:"Allocation Method",type:"text",faker:"lorem.word"},roiEstimate:{label:"ROI Estimate",type:"number",faker:"datatype.float"},taxImplications:{label:"Tax Implications",type:"text",faker:"lorem.sentence"},capexOrOpex:{label:"Capex/Opex",type:"select",options:[{id:"capex",label:"Capex"},{id:"opex",label:"Opex"}],faker:"random.arrayElement"},riskAssessment:{label:"Risk Assessment",type:"text",faker:"lorem.sentence"},complianceStatus:{label:"Compliance Status",type:"select",options:[{id:"compliant",label:"Compliant"},{id:"non_compliant",label:"Non-compliant"}],faker:"random.arrayElement"},paymentTerms:{label:"Payment Terms",type:"text",faker:"finance.transactionType"},invoiceNumber:{label:"Invoice Number",type:"text",faker:"finance.account"},vatAmount:{label:"VAT Amount",type:"number",faker:"datatype.float"},vatPercentage:{label:"VAT Percentage",type:"number",faker:"datatype.float"},discountApplied:{label:"Discount Applied",type:"number",faker:"datatype.float"},totalCostAfterDiscount:{label:"Total Cost After Discount",type:"number",faker:"finance.amount"},exchangeRate:{label:"Exchange Rate",type:"number",faker:"datatype.float"},costAllocationFactor:{label:"Cost Allocation Factor",type:"number",faker:"datatype.float"},approvalStatus:{label:"Approval Status",type:"select",options:[{id:"pending",label:"Pending"},{id:"approved",label:"Approved"},{id:"rejected",label:"Rejected"}],faker:"random.arrayElement"},auditTrail:{label:"Audit Trail",type:"text",faker:"lorem.paragraphs"}},n=Object.keys(r).map((e=>({id:e,label:r[e].label}))),l="Costs",i=()=>(0,o.P_)("costs"),c=e=>(0,o.tI)("costs",e),s=(e,t)=>(0,o.lU)("costs",e,t),d=e=>(0,o.Nn)("costs",e);async function p(e){return await(0,o._R)("costs",e)}},1256:(e,t,a)=>{a.d(t,{Nn:()=>s,P_:()=>l,TU:()=>d,Xk:()=>p,_R:()=>m,lU:()=>c,tI:()=>i});var o=a(7794),r=a(5472);const n=JSON.parse(localStorage.getItem("userData")).organizationId,l=async e=>{try{const t=(0,r.rJ)(o.db,"organizations",n,e),a=await(0,r.GG)(t);return a.docs.map((e=>({id:e.id,...e.data()})))}catch(t){return console.error(`Error fetching documents from ${e}:`,t),[]}},i=async(e,t)=>{try{t.organizationId=n;const a=(0,r.rJ)(o.db,"organizations",n,e);return(await(0,r.gS)(a,t)).id}catch(a){throw console.error(`Error adding document to ${e}:`,a),new Error(`Could not add document to ${e}`)}},c=async(e,t,a)=>{try{const l=(0,r.H9)(o.db,"organizations",n,e,t);await(0,r.mZ)(l,a)}catch(l){throw console.error(`Error updating document in ${e}:`,l),new Error(`Could not update document in ${e}`)}},s=async(e,t)=>{try{const a=(0,r.H9)(o.db,"organizations",n,e,t);await(0,r.kd)(a)}catch(a){throw console.error(`Error deleting document from ${e}:`,a),new Error(`Could not delete document from ${e}`)}},d=async(e,t,a)=>{try{const l=(0,r.rJ)(o.db,"organizations",n,e),i=(0,r.P)(l,(0,r._M)(t,"array-contains",a)),c=await(0,r.GG)(i);return c.docs.map((e=>({id:e.id,...e.data()})))}catch(l){return console.error(`Error fetching documents from ${e}:`,l),[]}},p=async(e,t,a)=>{try{const l=(0,r.rJ)(o.db,"organizations",n,e),i=(0,r.P)(l,(0,r._M)(t,"==",a)),c=await(0,r.GG)(i);return c.docs.map((e=>({id:e.id,...e.data()})))}catch(l){return console.error(`Error fetching documents from ${e}:`,l),[]}},m=async(e,t)=>{console.log("Fetching document with ID:",t),console.log("In subcollection:",e),console.log("Under organization ID:",n);try{const a=(0,r.H9)(o.db,"organizations",n,e,t);console.log("Document Reference:",a.path);const l=await(0,r.x7)(a);return l.exists()?(console.log("Document data:",l.data()),{id:l.id,...l.data()}):(console.error(`No document found with ID ${t} in ${e}`),null)}catch(a){return console.error(`Error fetching document with ID ${t} from ${e}:`,a),null}}}}]);
//# sourceMappingURL=139.5d1640a6.chunk.js.map