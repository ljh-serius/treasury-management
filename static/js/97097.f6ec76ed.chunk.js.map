{"version":3,"file":"static/js/97097.f6ec76ed.chunk.js","mappings":"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","sources":["pages/Analysis/InformationTechnology/ItAssets/SoftwareLicenses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function SoftwareLicensesDashboard({ fetchItems }) {\r\n  const [licenseData, setLicenseData] = useState([]);\r\n  const [totalLicenses, setTotalLicenses] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [assignedDistribution, setAssignedDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setLicenseData(data);\r\n      processLicenseData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processLicenseData = (data) => {\r\n    // Total Licenses\r\n    setTotalLicenses(data.length);\r\n\r\n    // Status Distribution\r\n    const statusCounts = data.reduce((acc, license) => {\r\n      acc[license.status] = (acc[license.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Assigned Distribution\r\n    const assignedCounts = data.reduce((acc, license) => {\r\n      acc[license.assignedTo] = (acc[license.assignedTo] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setAssignedDistribution(Object.keys(assignedCounts).map(key => ({\r\n      name: key,\r\n      y: assignedCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'License Status Distribution' },\r\n    series: [{\r\n      name: 'Licenses',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Assigned Distribution\r\n  const assignedChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Assigned Licenses Distribution' },\r\n    xAxis: { type: 'category', title: { text: 'Assigned To' } },\r\n    yAxis: { title: { text: 'Number of Licenses' } },\r\n    series: [{\r\n      name: 'Assigned Licenses',\r\n      data: assignedDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Software Licenses Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Licenses</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalLicenses}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Assigned Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={assignedChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["SoftwareLicensesDashboard","_ref","fetchItems","licenseData","setLicenseData","useState","totalLicenses","setTotalLicenses","statusDistribution","setStatusDistribution","assignedDistribution","setAssignedDistribution","loading","setLoading","useEffect","async","data","processLicenseData","fetchData","length","statusCounts","reduce","acc","license","status","Object","keys","map","key","name","charAt","toUpperCase","slice","y","assignedCounts","assignedTo","statusChartOptions","chart","type","title","text","series","colorByPoint","assignedChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}