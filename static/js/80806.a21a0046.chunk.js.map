{"version":3,"file":"static/js/80806.a21a0046.chunk.js","mappings":"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","sources":["pages/Analysis/EnvironmentalSocialGovernance/EnergyManagement/EnergyAudits.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function EnergyAuditsDashboard({ fetchItems }) {\r\n  const [auditData, setAuditData] = useState([]);\r\n  const [totalAudits, setTotalAudits] = useState(0);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [auditFindingsTrends, setAuditFindingsTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setAuditData(data);\r\n      processAuditData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processAuditData = (data) => {\r\n    // Total Audits\r\n    setTotalAudits(data.length);\r\n\r\n    // Tag Distribution for Pie Chart\r\n    const tagCounts = data.reduce((acc, audit) => {\r\n      if (audit.tags) {\r\n        audit.tags.forEach(tag => {\r\n          acc[tag] = (acc[tag] || 0) + 1;\r\n        });\r\n      }\r\n      return acc;\r\n    }, {});\r\n    setTagsDistribution(Object.keys(tagCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: tagCounts[key],\r\n    })));\r\n\r\n    // Audit Findings Trends for Line Chart\r\n    const findingsTrends = data.map(audit => ({\r\n      date: new Date(audit.auditDate).getTime(),\r\n      findings: audit.findings.split(' ').length, // Counting number of words in findings\r\n    })).sort((a, b) => a.date - b.date);\r\n    setAuditFindingsTrends(findingsTrends);\r\n  };\r\n\r\n  // Highcharts options for Tag Distribution\r\n  const tagChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Audit Tags Distribution' },\r\n    series: [{\r\n      name: 'Tags',\r\n      colorByPoint: true,\r\n      data: tagsDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Audit Findings Trends\r\n  const findingsTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Audit Findings Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Audit Date' } },\r\n    yAxis: { title: { text: 'Number of Words in Findings' } },\r\n    series: [{\r\n      name: 'Findings',\r\n      data: auditFindingsTrends.map(item => [item.date, item.findings]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Energy Audits Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Audits</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAudits}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Tag Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Audit Findings Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={findingsTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["EnergyAuditsDashboard","_ref","fetchItems","auditData","setAuditData","useState","totalAudits","setTotalAudits","tagsDistribution","setTagsDistribution","auditFindingsTrends","setAuditFindingsTrends","loading","setLoading","useEffect","async","data","processAuditData","fetchDataAsync","length","tagCounts","reduce","acc","audit","tags","forEach","tag","Object","keys","map","key","name","charAt","toUpperCase","slice","y","findingsTrends","date","Date","auditDate","getTime","findings","split","sort","a","b","tagChartOptions","chart","type","title","text","series","colorByPoint","findingsTrendChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}