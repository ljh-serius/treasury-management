{"version":3,"file":"static/js/55700.d266b6b0.chunk.js","mappings":"wTAOe,SAASA,EAAuBC,GAAkB,IAAjB,WAAEC,GAAYD,EAC5D,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAwBC,IAA6BF,EAAAA,EAAAA,UAAS,KAC9DG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEvCK,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAaV,IACnBE,EAAcQ,GACdC,EAAkBD,GAClBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAACZ,IAEJ,MAAMW,EAAqBD,IAEzB,MAAMG,EAAmBH,EAAKI,QAAO,CAACC,EAAKC,KACzCD,EAAIC,EAAOC,aAAeF,EAAIC,EAAOC,aAAe,GAAK,EAClDF,IACN,CAAC,GAEJV,EAA0Ba,OAAOC,KAAKN,GAAkBO,KAAIC,IAAG,CAC7DC,KAAMD,EACNE,EAAGV,EAAiBQ,OAClB,EAGAG,EAAyB,CAC7BC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,oCACfC,OAAQ,CAAC,CAAEP,KAAM,UAAWQ,cAAc,EAAMpB,KAAMN,KAGxD,OACE2B,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMtC,EAAQ+B,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,+BAGtCN,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,SAAA,EAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,2BACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,OAAON,GAAI,CAAEyB,WAAY,QAAStB,SAC9DpC,EAAW2D,UAEdtB,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAOZ,SAAC,6CAMlCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAASxC,cAM9D,C","sources":["pages/Analysis/OperationsAssetManagement/ProductLifecycleManagement/ProductUpdates.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function ProductUpdatesDashboard({ fetchItems }) {\r\n  const [updateData, setUpdateData] = useState([]);\r\n  const [updateTypeDistribution, setUpdateTypeDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setUpdateData(data);\r\n      processUpdateData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processUpdateData = (data) => {\r\n    // Update Type Distribution\r\n    const updateTypeCounts = data.reduce((acc, update) => {\r\n      acc[update.updateType] = (acc[update.updateType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setUpdateTypeDistribution(Object.keys(updateTypeCounts).map(key => ({\r\n      name: key,\r\n      y: updateTypeCounts[key],\r\n    })));\r\n  };\r\n\r\n  const updateTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Product Update Type Distribution' },\r\n    series: [{ name: 'Updates', colorByPoint: true, data: updateTypeDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Product Updates Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* Total Number of Updates */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Product Updates</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {updateData.length}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total number of product updates.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={updateTypeChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ProductUpdatesDashboard","_ref","fetchItems","updateData","setUpdateData","useState","updateTypeDistribution","setUpdateTypeDistribution","loading","setLoading","useEffect","async","data","processUpdateData","fetchData","updateTypeCounts","reduce","acc","update","updateType","Object","keys","map","key","name","y","updateTypeChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","length","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}