{"version":3,"file":"static/js/62055.22b6f3be.chunk.js","mappings":"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","sources":["pages/Analysis/ExternalRelationships/StakeholderManagement/StakeholderCommunication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst StakeholderCommunicationAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalCommunications: 0,\r\n    emailCount: 0,\r\n    meetingCount: 0,\r\n    phoneCallCount: 0,\r\n    presentationCount: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const communications = await fetchItems();\r\n      setData(communications);\r\n      calculateKPIs(communications);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (items) => {\r\n    const totalCommunications = items.length;\r\n    const emailCount = items.filter((item) => item.communicationMethod === 'email').length;\r\n    const meetingCount = items.filter((item) => item.communicationMethod === 'meeting').length;\r\n    const phoneCallCount = items.filter((item) => item.communicationMethod === 'phone-call').length;\r\n    const presentationCount = items.filter((item) => item.communicationMethod === 'presentation').length;\r\n\r\n    setKpis({\r\n      totalCommunications,\r\n      emailCount,\r\n      meetingCount,\r\n      phoneCallCount,\r\n      presentationCount,\r\n    });\r\n  };\r\n\r\n  const methodChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Communication Method Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Communications',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Email', y: kpis.emailCount },\r\n          { name: 'Meeting', y: kpis.meetingCount },\r\n          { name: 'Phone Call', y: kpis.phoneCallCount },\r\n          { name: 'Presentation', y: kpis.presentationCount },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Stakeholder Communication Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Communications</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalCommunications}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Email Communications</Typography>\r\n              <Typography variant=\"h4\">{kpis.emailCount}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Meetings</Typography>\r\n              <Typography variant=\"h4\">{kpis.meetingCount}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Phone Calls</Typography>\r\n              <Typography variant=\"h4\">{kpis.phoneCallCount}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Presentations</Typography>\r\n              <Typography variant=\"h4\">{kpis.presentationCount}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={methodChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StakeholderCommunicationAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalCommunications","emailCount","meetingCount","phoneCallCount","presentationCount","useEffect","async","communications","calculateKPIs","loadData","items","length","filter","item","communicationMethod","methodChart","chart","type","title","text","series","name","colorByPoint","y","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}