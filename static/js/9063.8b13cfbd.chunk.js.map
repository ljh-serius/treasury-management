{"version":3,"file":"static/js/9063.8b13cfbd.chunk.js","mappings":"uMAAO,MAAMA,EAAe,CACxBC,SAAU,CAAEC,MAAO,YAAaC,KAAM,OAAQC,MAAO,iBACrDC,WAAY,CAAEH,MAAO,cAAeC,KAAM,OAAQC,MAAO,uBACzDE,cAAe,CACXJ,MAAO,iBACPC,KAAM,SACNI,QAAS,CACL,CAAEC,GAAI,YAAaN,MAAO,aAC1B,CAAEM,GAAI,WAAYN,MAAO,YACzB,CAAEM,GAAI,SAAUN,MAAO,UACvB,CAAEM,GAAI,OAAQN,MAAO,SAEzBE,MAAO,uBAEXK,eAAgB,CAAEP,MAAO,kBAAmBC,KAAM,SAAUC,MAAO,kBACnEM,QAAS,CAAER,MAAO,UAAWC,KAAM,SAAUC,MAAO,kBACpDO,UAAW,CAAET,MAAO,aAAcC,KAAM,OAAQC,MAAO,aACvDQ,QAAS,CAAEV,MAAO,WAAYC,KAAM,OAAQC,MAAO,eACnDS,KAAM,CACFX,MAAO,OACPC,KAAM,SACNI,QAAS,GACTO,UAAU,EACVV,MAAO,eAEXW,OAAQ,CACJb,MAAO,SACPC,KAAM,SACNI,QAAS,CACL,CAAEC,GAAI,SAAUN,MAAO,UACvB,CAAEM,GAAI,UAAWN,MAAO,WACxB,CAAEM,GAAI,UAAWN,MAAO,YAE5BE,MAAO,uBAEXY,UAAW,CAAEd,MAAO,aAAcC,KAAM,OAAQC,MAAO,iBACvDa,eAAgB,CAAEf,MAAO,mBAAoBC,KAAM,OAAQC,MAAO,iBAClEc,YAAa,CAAEhB,MAAO,eAAgBC,KAAM,OAAQC,MAAO,aAC3De,iBAAkB,CAAEjB,MAAO,qBAAsBC,KAAM,OAAQC,MAAO,gBAG7DgB,EAAa,qBACbC,EAAiB,oB","sources":["components/Management/ComplianceLegal/Insurance/InsurancePolicies.js"],"sourcesContent":["export const fieldsConfig = {\r\n    policyId: { label: 'Policy ID', type: 'text', faker: 'datatype.uuid' },\r\n    policyName: { label: 'Policy Name', type: 'text', faker: 'company.catchPhrase' },\r\n    insuranceType: {\r\n        label: 'Insurance Type',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'liability', label: 'Liability' },\r\n            { id: 'property', label: 'Property' },\r\n            { id: 'health', label: 'Health' },\r\n            { id: 'auto', label: 'Auto' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    coverageAmount: { label: 'Coverage Amount', type: 'number', faker: 'finance.amount' },\r\n    premium: { label: 'Premium', type: 'number', faker: 'finance.amount' },\r\n    startDate: { label: 'Start Date', type: 'date', faker: 'date.past' },\r\n    endDate: { label: 'End Date', type: 'date', faker: 'date.future' },\r\n    tags: {\r\n        label: 'Tags',\r\n        type: 'select',\r\n        options: [],  // Populate with actual tags\r\n        multiple: true,\r\n        faker: 'lorem.words',\r\n    },\r\n    status: {\r\n        label: 'Status',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'active', label: 'Active' },\r\n            { id: 'expired', label: 'Expired' },\r\n            { id: 'pending', label: 'Pending' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    createdBy: { label: 'Created By', type: 'text', faker: 'name.fullName' },\r\n    lastModifiedBy: { label: 'Last Modified By', type: 'text', faker: 'name.fullName' },\r\n    createdDate: { label: 'Created Date', type: 'date', faker: 'date.past' },\r\n    lastModifiedDate: { label: 'Last Modified Date', type: 'date', faker: 'date.recent' },\r\n};\r\n\r\nexport const entityName = 'Insurance Policies';\r\nexport const collectionName = 'insurance-policies';"],"names":["fieldsConfig","policyId","label","type","faker","policyName","insuranceType","options","id","coverageAmount","premium","startDate","endDate","tags","multiple","status","createdBy","lastModifiedBy","createdDate","lastModifiedDate","entityName","collectionName"],"sourceRoot":""}