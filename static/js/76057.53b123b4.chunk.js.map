{"version":3,"file":"static/js/76057.53b123b4.chunk.js","mappings":"wTAOe,SAASA,EAAuBC,GAAkB,IAAjB,WAAEC,GAAYD,EAC5D,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,KACtDG,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,KACtDK,EAA6BC,IAAkCN,EAAAA,EAAAA,UAAS,KACxEO,EAAmBC,IAAwBR,EAAAA,EAAAA,UAAS,KACpDS,EAAkBC,IAAuBV,EAAAA,EAAAA,UAAS,KAClDW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,IACtCa,EAAiBC,IAAsBd,EAAAA,EAAAA,UAAS,IAChDe,EAAmBC,IAAwBhB,EAAAA,EAAAA,UAAS,IACpDiB,EAAqBC,IAA0BlB,EAAAA,EAAAA,UAAS,IACxDmB,EAASC,IAAcpB,EAAAA,EAAAA,WAAS,IAEvCqB,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,MAAMG,QAAa1B,IACnBE,EAAawB,GACbC,EAAiBD,GACjBH,GAAW,EAAM,EAGnBK,EAAW,GACV,CAAC5B,IAEJ,MAAM2B,EAAoBD,IAExBX,EAAcW,EAAKG,QAGnB,MAAMb,EAAkBU,EAAKI,QAAO,CAACC,EAAKC,IAASD,EAAME,OAAOD,EAAKE,aAAa,GAClFjB,EAAmBD,GAGnBG,EAAqBH,EAAkBU,EAAKG,QAG5C,MAAMM,EAAoBT,EAAKI,QAAO,CAACC,EAAKC,IAASD,EAAME,OAAOD,EAAKI,eAAe,GACtFf,EAAuBc,EAAoBT,EAAKG,QAGhD,MAAMQ,EAAeX,EAAKI,QAAO,CAACC,EAAKC,KACrCD,EAAIC,EAAKM,SAAWP,EAAIC,EAAKM,SAAW,GAAK,EACtCP,IACN,CAAC,GAEJ1B,EAAsBkC,OAAOC,KAAKH,GAAcI,KAAIC,IAAG,CACrDC,KAAMD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAC9CC,EAAGV,EAAaK,QAIlB,MAAMpC,EAAqBoB,EAAKI,QAAO,CAACC,EAAKC,KAC3CD,EAAIC,EAAKM,SAAWP,EAAIC,EAAKM,SAAW,GAAKL,OAAOD,EAAKE,YAClDH,IACN,CAAC,GAEJxB,EAAsBgC,OAAOC,KAAKlC,GAAoBmC,KAAIC,IAAG,CAC3DC,KAAMD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAC9CC,EAAGzC,EAAmBoC,QAIxB,MAAMM,EAAuBtB,EAAKI,QAAO,CAACC,EAAKC,KAC7CD,EAAIC,EAAKM,QAAUP,EAAIC,EAAKM,SAAW,CAAEH,kBAAmB,EAAGc,MAAO,GACtElB,EAAIC,EAAKM,QAAQH,mBAAqBF,OAAOD,EAAKI,cAClDL,EAAIC,EAAKM,QAAQW,OAAS,EACnBlB,IACN,CAAC,GAEJtB,EAA+B8B,OAAOC,KAAKQ,GAAsBP,KAAIC,IAAG,CACtEC,KAAMD,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAC9CC,EAAGC,EAAqBN,GAAKP,kBAAoBa,EAAqBN,GAAKO,OAAS,OAItF,MAAMC,EAAexB,EAAKI,QAAO,CAACC,EAAKC,KACrC,MAAMmB,EAAQ,IAAIC,KAAKpB,EAAKqB,WAAWC,WAAa,EAEpD,OADAvB,EAAIoB,IAAUpB,EAAIoB,IAAU,GAAK,EAC1BpB,CAAG,GACT,CAAC,GAEJpB,EAAqB4B,OAAOC,KAAKU,GAAcT,KAAIC,IAAG,CACpDC,KAAM,SAASD,IACfK,EAAGG,EAAaR,QAIlB,MAAMa,EAAa7B,EAAKI,QAAO,CAACC,EAAKC,KACnCA,EAAKwB,KAAKC,SAAQC,IAChB3B,EAAI2B,IAAQ3B,EAAI2B,IAAQ,GAAK,CAAC,IAEzB3B,IACN,CAAC,GAEJlB,EAAoB0B,OAAOC,KAAKe,GAAYd,KAAIC,IAAG,CACjDC,KAAMD,EACNK,EAAGQ,EAAWb,OACZ,EAIAiB,EAAqB,CACzBC,MAAO,CACLC,KAAM,OAERC,MAAO,CACLC,KAAM,mBAERC,OAAQ,CACN,CACErB,KAAM,SACNsB,cAAc,EACdvC,KAAMtB,KAKN8D,EAAiC,CACrCN,MAAO,CACLC,KAAM,UAERC,MAAO,CACLC,KAAM,+BAERC,OAAQ,CACN,CACErB,KAAM,cACNjB,KAAMpB,KAKN6D,EAA0C,CAC9CP,MAAO,CACLC,KAAM,OAERC,MAAO,CACLC,KAAM,mCAERC,OAAQ,CACN,CACErB,KAAM,oBACNjB,KAAMlB,KAKN4D,EAA4B,CAChCR,MAAO,CACLC,KAAM,QAERC,MAAO,CACLC,KAAM,mBAERM,MAAO,CACLC,WAAY5D,EAAkB+B,KAAIf,GAAQA,EAAKiB,QAEjDqB,OAAQ,CACN,CACErB,KAAM,kBACNjB,KAAMhB,EAAkB+B,KAAIf,GAAQA,EAAKqB,OAKzCwB,EAAmB,CACvBX,MAAO,CACLC,KAAM,UAERC,MAAO,CACLC,KAAM,qBAERC,OAAQ,CACN,CACErB,KAAM,OACNjB,KAAMd,KAKZ,OACE4D,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAM/D,EAAQwD,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,+BAGtCN,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,SAAA,EAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,iBACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEyB,WAAY,QAAStB,SAC/DhE,YAKTiE,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,uBACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,OAAON,GAAI,CAAEyB,WAAY,QAAStB,SAAA,CAAC,IAC9D9D,EAAgBqF,QAAQ,cAKlCtB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,yBACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,SAASN,GAAI,CAAEyB,WAAY,QAAStB,SAAA,CAAC,IAChE5D,EAAkBmF,QAAQ,cAKpCtB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAAApB,UACHN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAArB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,2BACzBN,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,SAASN,GAAI,CAAEyB,WAAY,QAAStB,SAAA,CAChE1D,EAAoBiF,QAAQ,GAAG,eAOxCtB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAAS9C,OAEpDoB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAASvC,OAEpDa,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAAStC,OAEpDY,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnB,UACvBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAASrC,OAEpDW,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAGnB,UACxBC,EAAAA,EAAAA,KAACuB,IAAe,CAACC,WAAYC,IAAYC,QAASlC,cAM9D,C","sources":["pages/Analysis/FinancialManagement/Debts/LoanAgreements.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function LoanAgreementsDashboard({ fetchItems }) {\r\n  const [loansData, setLoansData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [loanAmountByStatus, setLoanAmountByStatus] = useState([]);\r\n  const [averageInterestRateByStatus, setAverageInterestRateByStatus] = useState([]);\r\n  const [loansOverTimeData, setLoansOverTimeData] = useState([]);\r\n  const [tagsDistribution, setTagsDistribution] = useState([]);\r\n  const [totalLoans, setTotalLoans] = useState(0);\r\n  const [totalLoanAmount, setTotalLoanAmount] = useState(0);\r\n  const [averageLoanAmount, setAverageLoanAmount] = useState(0);\r\n  const [averageInterestRate, setAverageInterestRate] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setLoansData(data);\r\n      processLoansData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processLoansData = (data) => {\r\n    // Total Number of Loans\r\n    setTotalLoans(data.length);\r\n\r\n    // Total Loan Amount\r\n    const totalLoanAmount = data.reduce((acc, loan) => acc + Number(loan.loanAmount), 0);\r\n    setTotalLoanAmount(totalLoanAmount);\r\n\r\n    // Average Loan Amount\r\n    setAverageLoanAmount(totalLoanAmount / data.length);\r\n\r\n    // Average Interest Rate\r\n    const totalInterestRate = data.reduce((acc, loan) => acc + Number(loan.interestRate), 0);\r\n    setAverageInterestRate(totalInterestRate / data.length);\r\n\r\n    // Loans by Status\r\n    const statusCounts = data.reduce((acc, loan) => {\r\n      acc[loan.status] = (acc[loan.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),  // Capitalize status\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Total Loan Amount by Status\r\n    const loanAmountByStatus = data.reduce((acc, loan) => {\r\n      acc[loan.status] = (acc[loan.status] || 0) + Number(loan.loanAmount);\r\n      return acc;\r\n    }, {});\r\n\r\n    setLoanAmountByStatus(Object.keys(loanAmountByStatus).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: loanAmountByStatus[key],\r\n    })));\r\n\r\n    // Average Interest Rate by Status\r\n    const interestRateByStatus = data.reduce((acc, loan) => {\r\n      acc[loan.status] = acc[loan.status] || { totalInterestRate: 0, count: 0 };\r\n      acc[loan.status].totalInterestRate += Number(loan.interestRate);\r\n      acc[loan.status].count += 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setAverageInterestRateByStatus(Object.keys(interestRateByStatus).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: interestRateByStatus[key].totalInterestRate / interestRateByStatus[key].count || 0,\r\n    })));\r\n\r\n    // Loans Over Time\r\n    const loansByMonth = data.reduce((acc, loan) => {\r\n      const month = new Date(loan.startDate).getMonth() + 1;\r\n      acc[month] = (acc[month] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setLoansOverTimeData(Object.keys(loansByMonth).map(key => ({\r\n      name: `Month ${key}`,\r\n      y: loansByMonth[key],\r\n    })));\r\n\r\n    // Tags Distribution\r\n    const tagsCounts = data.reduce((acc, loan) => {\r\n      loan.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagsDistribution(Object.keys(tagsCounts).map(key => ({\r\n      name: key,\r\n      y: tagsCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const statusChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Loans by Status',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Status',\r\n        colorByPoint: true,\r\n        data: statusDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const loanAmountByStatusChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Total Loan Amount by Status',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Loan Amount',\r\n        data: loanAmountByStatus,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const averageInterestRateByStatusChartOptions = {\r\n    chart: {\r\n      type: 'bar',\r\n    },\r\n    title: {\r\n      text: 'Average Interest Rate by Status',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Interest Rate (%)',\r\n        data: averageInterestRateByStatus,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const loansOverTimeChartOptions = {\r\n    chart: {\r\n      type: 'line',\r\n    },\r\n    title: {\r\n      text: 'Loans Over Time',\r\n    },\r\n    xAxis: {\r\n      categories: loansOverTimeData.map(data => data.name),\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Number of Loans',\r\n        data: loansOverTimeData.map(data => data.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tagsChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Tags Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        data: tagsDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Loan Agreements Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Loans</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalLoans}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Loan Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalLoanAmount.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Loan Amount</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageLoanAmount.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Interest Rate</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageInterestRate.toFixed(2)}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={loanAmountByStatusChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={averageInterestRateByStatusChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={loansOverTimeChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["LoanAgreementsDashboard","_ref","fetchItems","loansData","setLoansData","useState","statusDistribution","setStatusDistribution","loanAmountByStatus","setLoanAmountByStatus","averageInterestRateByStatus","setAverageInterestRateByStatus","loansOverTimeData","setLoansOverTimeData","tagsDistribution","setTagsDistribution","totalLoans","setTotalLoans","totalLoanAmount","setTotalLoanAmount","averageLoanAmount","setAverageLoanAmount","averageInterestRate","setAverageInterestRate","loading","setLoading","useEffect","async","data","processLoansData","fetchData","length","reduce","acc","loan","Number","loanAmount","totalInterestRate","interestRate","statusCounts","status","Object","keys","map","key","name","charAt","toUpperCase","slice","y","interestRateByStatus","count","loansByMonth","month","Date","startDate","getMonth","tagsCounts","tags","forEach","tag","statusChartOptions","chart","type","title","text","series","colorByPoint","loanAmountByStatusChartOptions","averageInterestRateByStatusChartOptions","loansOverTimeChartOptions","xAxis","categories","tagsChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}