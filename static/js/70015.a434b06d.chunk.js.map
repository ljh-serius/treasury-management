{"version":3,"file":"static/js/70015.a434b06d.chunk.js","mappings":"wTAKe,SAASA,EAA8BC,GAAkB,IAAjB,WAAEC,GAAYD,EACnE,MAAOE,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAmBC,IAAwBF,EAAAA,EAAAA,UAAS,IACpDG,EAA8BC,IAAmCJ,EAAAA,EAAAA,UAAS,KAC1EK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,KAClDO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAEvCS,EAAAA,EAAAA,YAAU,KACeC,WACrBF,GAAW,GACX,MAAMG,QAAad,IACnBE,EAAkBY,GAClBC,EAAsBD,GACtBH,GAAW,EAAM,EAGnBK,EAAgB,GACf,CAAChB,IAEJ,MAAMe,EAAyBD,IAE7BT,EAAqBS,EAAKG,QAG1B,MAAMC,EAAqBJ,EAAKK,QAAO,CAACC,EAAKC,KAC3CD,EAAIC,EAAKC,mBAAqBF,EAAIC,EAAKC,mBAAqB,GAAK,EAC1DF,IACN,CAAC,GACJb,EAAgCgB,OAAOC,KAAKN,GAAoBO,KAAIC,IAAG,CACrEC,KAAMD,EAAIE,QAAQ,KAAM,KAAKC,cAC7BC,EAAGZ,EAAmBQ,QAIxB,MAAMK,EAAYjB,EAAKW,KAAIJ,IAAI,CAC7BW,KAAM,IAAIC,KAAKZ,EAAKa,aAAaC,cAC/BC,MAAK,CAACC,EAAGC,IAAMD,EAAEL,KAAOM,EAAEN,OAC9BvB,EAAoBsB,EAAU,EAI1BQ,EAA+B,CACnCC,MAAO,CAAEC,KAAM,OACfC,MAAO,CAAEC,KAAM,kCACfC,OAAQ,CAAC,CACPjB,KAAM,oBACNkB,cAAc,EACd/B,KAAMR,KAKJwC,EAA8B,CAClCN,MAAO,CAAEC,KAAM,QACfC,MAAO,CAAEC,KAAM,+BACfI,MAAO,CAAEN,KAAM,WAAYC,MAAO,CAAEC,KAAM,iBAC1CK,MAAO,CAAEN,MAAO,CAAEC,KAAM,2BACxBC,OAAQ,CAAC,CACPjB,KAAM,kBACNb,KAAMN,EAAiBiB,KAAIJ,GAAQ,CAACA,EAAKW,WAI7C,OACEiB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,WAAY,EAAGC,cAAe,GAAIC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACL,GAAI,CAAEM,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMpD,EAAQ6C,UACzFC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACL,MAAM,eAE1BT,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACZ,GAAI,CAAEa,QAAS,GAAIV,SAAA,EACtBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAb,SAAC,sCAItCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEhB,UAEzBC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChD,MAAI,EAACmD,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAAAnB,UACHN,EAAAA,EAAAA,MAAC0B,EAAAA,EAAW,CAAApB,SAAA,EACVC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIZ,SAAC,wBACzBC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKT,MAAM,QAAQN,GAAI,CAAEwB,WAAY,QAASrB,SAC/DnD,cAOX6C,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGnB,GAAI,CAAEyB,UAAW,GAAItB,SAAA,EAE/CC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChD,MAAI,EAACmD,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAAS1C,OAIpDiB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChD,MAAI,EAACmD,GAAI,GAAIC,GAAI,EAAElB,UACvBC,EAAAA,EAAAA,KAACsB,IAAe,CAACC,WAAYC,IAAYC,QAASnC,cAM9D,C","sources":["pages/Analysis/ProjectTaskManagement/Milestones/MilestoneDependencies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function MilestoneDependenciesDashboard({ fetchItems }) {\r\n  const [dependencyData, setDependencyData] = useState([]);\r\n  const [totalDependencies, setTotalDependencies] = useState(0);\r\n  const [relationshipTypeDistribution, setRelationshipTypeDistribution] = useState([]);\r\n  const [dependencyTrends, setDependencyTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setDependencyData(data);\r\n      processDependencyData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processDependencyData = (data) => {\r\n    // Total Dependencies\r\n    setTotalDependencies(data.length);\r\n\r\n    // Relationship Type Distribution for Pie Chart\r\n    const relationshipCounts = data.reduce((acc, item) => {\r\n      acc[item.relationshipType] = (acc[item.relationshipType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setRelationshipTypeDistribution(Object.keys(relationshipCounts).map(key => ({\r\n      name: key.replace(/-/g, ' ').toUpperCase(),\r\n      y: relationshipCounts[key],\r\n    })));\r\n\r\n    // Dependency Trends for Line Chart\r\n    const trendData = data.map(item => ({\r\n      date: new Date(item.createdDate).getTime(),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setDependencyTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Relationship Type Distribution\r\n  const relationshipTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Relationship Type Distribution' },\r\n    series: [{\r\n      name: 'Relationship Type',\r\n      colorByPoint: true,\r\n      data: relationshipTypeDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Dependency Trends\r\n  const dependencyTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Milestone Dependency Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Created Date' } },\r\n    yAxis: { title: { text: 'Number of Dependencies' } },\r\n    series: [{\r\n      name: 'Dependency Date',\r\n      data: dependencyTrends.map(item => [item.date]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Milestone Dependencies Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Dependencies</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalDependencies}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Relationship Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={relationshipTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Dependency Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={dependencyTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["MilestoneDependenciesDashboard","_ref","fetchItems","dependencyData","setDependencyData","useState","totalDependencies","setTotalDependencies","relationshipTypeDistribution","setRelationshipTypeDistribution","dependencyTrends","setDependencyTrends","loading","setLoading","useEffect","async","data","processDependencyData","fetchDataAsync","length","relationshipCounts","reduce","acc","item","relationshipType","Object","keys","map","key","name","replace","toUpperCase","y","trendData","date","Date","createdDate","getTime","sort","a","b","relationshipTypeChartOptions","chart","type","title","text","series","colorByPoint","dependencyTrendChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}