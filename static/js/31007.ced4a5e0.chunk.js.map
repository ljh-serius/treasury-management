{"version":3,"file":"static/js/31007.ced4a5e0.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/SalesOrders/OrderStatus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function OrderStatusDashboard({ fetchData }) {\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n  const [pendingOrders, setPendingOrders] = useState(0);\r\n  const [shippedOrders, setShippedOrders] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [orderTimeline, setOrderTimeline] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setOrderData(data);\r\n      processOrderData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processOrderData = (data) => {\r\n    // Total Orders\r\n    setTotalOrders(data.length);\r\n\r\n    // Count Pending and Shipped Orders\r\n    const pending = data.filter(order => order.status === 'pending').length;\r\n    const shipped = data.filter(order => order.status === 'shipped').length;\r\n    setPendingOrders(pending);\r\n    setShippedOrders(shipped);\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, order) => {\r\n      acc[order.status] = (acc[order.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Order Timeline for Line Chart\r\n    const timeline = data.map(order => ({\r\n      date: new Date(order.lastUpdated).getTime(),\r\n      status: order.status,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setOrderTimeline(timeline);\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Order Status Distribution' },\r\n    series: [{\r\n      name: 'Orders',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Order Timeline\r\n  const timelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Order Update Timeline' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Order Status' } },\r\n    series: [{\r\n      name: 'Orders Over Time',\r\n      data: orderTimeline.map(item => [item.date, item.status]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Order Status Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Orders</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalOrders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Pending Orders</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {pendingOrders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Shipped Orders</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {shippedOrders}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Order Timeline Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={timelineChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["OrderStatusDashboard","_ref","fetchData","orderData","setOrderData","useState","totalOrders","setTotalOrders","pendingOrders","setPendingOrders","shippedOrders","setShippedOrders","statusDistribution","setStatusDistribution","orderTimeline","setOrderTimeline","loading","setLoading","useEffect","async","data","processOrderData","fetchDataAsync","length","pending","filter","order","status","shipped","statusCounts","reduce","acc","Object","keys","map","key","name","charAt","toUpperCase","slice","y","timeline","date","Date","lastUpdated","getTime","sort","a","b","statusChartOptions","chart","type","title","text","series","colorByPoint","timelineChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}