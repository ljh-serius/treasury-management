{"version":3,"file":"static/js/989.2c87a27a.chunk.js","mappings":"4OAyFA,QAnFA,SAA0BA,GAAkB,IAAjB,WAAEC,GAAYD,EACvC,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAAEG,eAAgB,EAAGC,gBAAiB,EAAGC,WAAY,KAC/EC,EAASC,IAAcP,EAAAA,EAAAA,WAAS,IAEvCQ,EAAAA,EAAAA,YAAU,KACSC,WACfF,GAAW,GACX,MAAMG,QAAab,IACnBE,EAAiBW,GAGjB,MAAMP,EAAiBO,EAAKC,OACtBP,EAAkBM,EAAKE,QAAOC,GAAgC,WAApBA,EAASC,SAAqBH,OACxEN,EAAaF,EAAiB,EAClCO,EAAKK,QAAO,CAACC,EAAKH,IAAaG,GAAOH,EAASI,KAAO,IAAI,GAAKd,EAAiB,EAElFD,EAAQ,CAAEC,iBAAgBC,kBAAiBC,eAC3CE,GAAW,EAAM,EAGnBW,EAAU,GACT,IAEH,MAAMC,EAAkB,CACtBC,MAAO,CAAEC,KAAM,6BACfC,OAAQ,CACN,CACEC,KAAM,MACNb,KAAMZ,EAAc0B,KAAIX,GAAYA,EAASI,QAGjDQ,MAAO,CAAEC,WAAY5B,EAAc0B,KAAIX,GAAYA,EAASc,gBAC5DC,MAAO,CAAER,MAAO,CAAEC,KAAM,aAGpBQ,EAA8B,CAClCC,MAAO,CAAEC,KAAM,OACfX,MAAO,CAAEC,KAAM,gCACfC,OAAQ,CACN,CACEC,KAAM,YACNS,cAAc,EACdtB,KAAM,CACJ,CAAEa,KAAM,SAAUU,EAAGhC,EAAKG,iBAC1B,CAAEmB,KAAM,YAAaU,EAAGnC,EAAcc,QAAOC,GAAgC,cAApBA,EAASC,SAAwBH,QAC1F,CAAEY,KAAM,UAAWU,EAAGnC,EAAcc,QAAOC,GAAgC,YAApBA,EAASC,SAAsBH,QACtF,CAAEY,KAAM,YAAaU,EAAGnC,EAAcc,QAAOC,GAAgC,cAApBA,EAASC,SAAwBH,YAMlG,OACEuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,GAAI,CAAEC,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAAKC,KAAMrC,EAAQ6B,UACzFC,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAACL,MAAM,eAExBjC,IACA4B,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAV,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKY,MAAO,CAAEC,QAAS,OAAQC,eAAgB,gBAAiBb,SAAA,EAC9DD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIlC,EAAKE,qBAEX+B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIlC,EAAKG,sBAEX8B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIlC,EAAKI,WAAW4C,QAAQ,GAAG,cAGnCb,EAAAA,EAAAA,KAACc,IAAe,CAACC,WAAYC,IAAYC,QAASlC,KAClDiB,EAAAA,EAAAA,KAACc,IAAe,CAACC,WAAYC,IAAYC,QAASxB,SAK5D,C","sources":["pages/Analysis/Campaigns.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nfunction CampaignsAnalysis({ fetchItems }) {\r\n  const [campaignsData, setCampaignsData] = useState([]);\r\n  const [kpis, setKpis] = useState({ totalCampaigns: 0, activeCampaigns: 0, averageROI: 0 });\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setLoading(true); // Start loading\r\n      const data = await fetchItems();\r\n      setCampaignsData(data);\r\n\r\n      // Calculate KPIs\r\n      const totalCampaigns = data.length;\r\n      const activeCampaigns = data.filter(campaign => campaign.status === 'active').length;\r\n      const averageROI = totalCampaigns > 0 ? \r\n        data.reduce((sum, campaign) => sum + (campaign.roi || 0), 0) / totalCampaigns : 0;\r\n\r\n      setKpis({ totalCampaigns, activeCampaigns, averageROI });\r\n      setLoading(false); // Stop loading\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  const roiChartOptions = {\r\n    title: { text: 'Campaign ROI Distribution' },\r\n    series: [\r\n      {\r\n        name: 'ROI',\r\n        data: campaignsData.map(campaign => campaign.roi),\r\n      },\r\n    ],\r\n    xAxis: { categories: campaignsData.map(campaign => campaign.campaignName) },\r\n    yAxis: { title: { text: 'ROI (%)' } },\r\n  };\r\n\r\n  const campaignsStatusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Campaign Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Campaigns',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Active', y: kpis.activeCampaigns },\r\n          { name: 'Completed', y: campaignsData.filter(campaign => campaign.status === 'completed').length },\r\n          { name: 'On Hold', y: campaignsData.filter(campaign => campaign.status === 'on_hold').length },\r\n          { name: 'Cancelled', y: campaignsData.filter(campaign => campaign.status === 'cancelled').length },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Campaigns Dashboard</h2>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      {!loading && (\r\n        <>\r\n          <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n            <div>\r\n              <h3>Total Campaigns</h3>\r\n              <p>{kpis.totalCampaigns}</p>\r\n            </div>\r\n            <div>\r\n              <h3>Active Campaigns</h3>\r\n              <p>{kpis.activeCampaigns}</p>\r\n            </div>\r\n            <div>\r\n              <h3>Average ROI</h3>\r\n              <p>{kpis.averageROI.toFixed(2)}%</p>\r\n            </div>\r\n          </div>\r\n          <HighchartsReact highcharts={Highcharts} options={roiChartOptions} />\r\n          <HighchartsReact highcharts={Highcharts} options={campaignsStatusChartOptions} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CampaignsAnalysis;\r\n"],"names":["_ref","fetchItems","campaignsData","setCampaignsData","useState","kpis","setKpis","totalCampaigns","activeCampaigns","averageROI","loading","setLoading","useEffect","async","data","length","filter","campaign","status","reduce","sum","roi","loadData","roiChartOptions","title","text","series","name","map","xAxis","categories","campaignName","yAxis","campaignsStatusChartOptions","chart","type","colorByPoint","y","_jsxs","children","_jsx","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","_Fragment","style","display","justifyContent","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}