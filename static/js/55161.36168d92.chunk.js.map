{"version":3,"file":"static/js/55161.36168d92.chunk.js","mappings":"uRAKA,MAuFA,EAvFwCA,IAAqB,IAApB,WAAEC,GAAYD,EACnD,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAYvC,IAVAG,EAAAA,EAAAA,YAAU,KACWC,WACbF,GAAW,GACX,MAAMG,QAAcR,IACpBE,EAAQM,GACRH,GAAW,EAAM,EAErBI,EAAU,GACX,CAACT,IAEAI,EACA,OAAOM,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,IAI5B,MAAMC,EAAgBX,EAAKY,OACrBC,EAAeb,EAAKc,QAAOC,GAAwB,SAAhBA,EAAKC,SAAmBJ,OAC3DK,EAAkBjB,EAAKc,QAAOC,GAAwB,YAAhBA,EAAKC,SAAsBJ,OACjEM,EAAiBlB,EAAKc,QAAOC,GAAwB,WAAhBA,EAAKC,SAAqBJ,OAG/DO,EAAe,CACjBC,MAAO,CACHC,KAAM,OAEVC,MAAO,CACHC,KAAM,4BAEVC,OAAQ,CACJ,CACIC,KAAM,WACNC,cAAc,EACd1B,KAAM,CACF,CAAEyB,KAAM,OAAQE,EAAGd,GACnB,CAAEY,KAAM,UAAWE,EAAGV,GACtB,CAAEQ,KAAM,SAAUE,EAAGT,OAMrC,OACIU,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEC,SAAA,EAEvBvB,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACd,MAAI,EAACkB,GAAI,GAAIC,GAAI,EAAEF,UACrBvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAAH,UACDJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAJ,SAAA,EACRvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,oBACzBvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAErB,YAKtCF,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACd,MAAI,EAACkB,GAAI,GAAIC,GAAI,EAAEF,UACrBvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAAH,UACDJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAJ,SAAA,EACRvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,mBACzBvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAEnB,YAKtCJ,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACd,MAAI,EAACkB,GAAI,GAAIC,GAAI,EAAEF,UACrBvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAAH,UACDJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CAAAJ,SAAA,EACRvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,qBACzBvB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAEd,YAMtCT,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACd,MAAI,EAACkB,GAAI,GAAGD,UACdvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAAH,UACDvB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAW,CAAAJ,UACRvB,EAAAA,EAAAA,KAAC8B,IAAe,CAACC,WAAYC,IAAYC,QAASvB,YAI3D,C","sources":["pages/Analysis/CrisisRiskManagement/CrisisManagement/EmmergencyCommunication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst EmergencyCommunicationAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            setLoading(true);\r\n            const items = await fetchItems(); // Fetching data passed as a prop\r\n            setData(items);\r\n            setLoading(false);\r\n        };\r\n        loadData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    // KPIs calculation\r\n    const totalMessages = data.length;\r\n    const sentMessages = data.filter(item => item.status === 'sent').length;\r\n    const pendingMessages = data.filter(item => item.status === 'pending').length;\r\n    const failedMessages = data.filter(item => item.status === 'failed').length;\r\n\r\n    // Highcharts configuration for message status breakdown\r\n    const chartOptions = {\r\n        chart: {\r\n            type: 'pie',\r\n        },\r\n        title: {\r\n            text: 'Message Status Breakdown',\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Messages',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Sent', y: sentMessages },\r\n                    { name: 'Pending', y: pendingMessages },\r\n                    { name: 'Failed', y: failedMessages },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            {/* KPI Cards */}\r\n            <Grid item xs={12} sm={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Messages</Typography>\r\n                        <Typography variant=\"h4\">{totalMessages}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Sent Messages</Typography>\r\n                        <Typography variant=\"h4\">{sentMessages}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Failed Messages</Typography>\r\n                        <Typography variant=\"h4\">{failedMessages}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            {/* Highcharts Pie Chart */}\r\n            <Grid item xs={12}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EmergencyCommunicationAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","items","loadData","_jsx","CircularProgress","totalMessages","length","sentMessages","filter","item","status","pendingMessages","failedMessages","chartOptions","chart","type","title","text","series","name","colorByPoint","y","_jsxs","Grid","container","spacing","children","xs","sm","Card","CardContent","Typography","variant","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}