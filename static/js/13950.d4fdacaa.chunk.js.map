{"version":3,"file":"static/js/13950.d4fdacaa.chunk.js","mappings":"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","sources":["pages/Analysis/HrManagement/Attendance/LeaveBalances.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function LeaveBalancesDashboard({ fetchItems }) {\r\n  const [leaveData, setLeaveData] = useState([]);\r\n  const [totalEmployees, setTotalEmployees] = useState(0);\r\n  const [leaveTypeDistribution, setLeaveTypeDistribution] = useState([]);\r\n  const [usedLeavesChartData, setUsedLeavesChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setLeaveData(data);\r\n      processLeaveData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processLeaveData = (data) => {\r\n    setTotalEmployees(data.length);\r\n\r\n    // Aggregate Leave Types\r\n    const leaveTypeMap = {};\r\n    data.forEach((item) => {\r\n      const type = item.leaveType;\r\n      leaveTypeMap[type] = (leaveTypeMap[type] || 0) + 1;\r\n    });\r\n    const leaveTypeArray = Object.entries(leaveTypeMap).map(([type, count]) => ({\r\n      name: type,\r\n      y: count,\r\n    }));\r\n    setLeaveTypeDistribution(leaveTypeArray);\r\n\r\n    // Prepare chart data for used and remaining leaves\r\n    setUsedLeavesChartData(\r\n      data.map((item) => ({\r\n        name: `Employee ${item.employeeId}`,\r\n        used: item.usedLeaves,\r\n        remaining: item.remainingLeaves,\r\n      }))\r\n    );\r\n  };\r\n\r\n  // Highcharts options for Leave Type Distribution\r\n  const leaveTypeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Leave Type Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Leave Types',\r\n        data: leaveTypeDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Highcharts options for Used vs Remaining Leaves\r\n  const usedLeavesChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Used vs Remaining Leaves by Employee' },\r\n    xAxis: { type: 'category', title: { text: 'Employees' } },\r\n    yAxis: { title: { text: 'Number of Leaves' } },\r\n    series: [\r\n      {\r\n        name: 'Used Leaves',\r\n        data: usedLeavesChartData.map((item) => [item.name, item.used]),\r\n      },\r\n      {\r\n        name: 'Remaining Leaves',\r\n        data: usedLeavesChartData.map((item) => [item.name, item.remaining]),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Leave Balances Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Employees</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalEmployees}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Leave Type Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={leaveTypeChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Used vs Remaining Leaves Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={usedLeavesChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["LeaveBalancesDashboard","_ref","fetchItems","leaveData","setLeaveData","useState","totalEmployees","setTotalEmployees","leaveTypeDistribution","setLeaveTypeDistribution","usedLeavesChartData","setUsedLeavesChartData","loading","setLoading","useEffect","async","data","processLeaveData","fetchData","length","leaveTypeMap","forEach","item","type","leaveType","leaveTypeArray","Object","entries","map","_ref2","count","name","y","employeeId","used","usedLeaves","remaining","remainingLeaves","leaveTypeChartOptions","chart","title","text","series","usedLeavesChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}