{"version":3,"file":"static/js/87491.ee90e329.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Campaigns/RoiAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function ROIAnalysisDashboard({ fetchItems }) {\r\n  const [analysisData, setAnalysisData] = useState([]);\r\n  const [roiOverTime, setROIOverTime] = useState([]);\r\n  const [costAnalysis, setCostAnalysis] = useState([]);\r\n  const [conversionRate, setConversionRate] = useState(0);\r\n  const [totalROI, setTotalROI] = useState(0);\r\n  const [averageROI, setAverageROI] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setAnalysisData(data);\r\n      processAnalysisData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processAnalysisData = (data) => {\r\n    // Total ROI\r\n    const totalROIValue = data.reduce((acc, analysis) => acc + Number(analysis.roiValue), 0);\r\n    setTotalROI(totalROIValue);\r\n\r\n    // Average ROI\r\n    setAverageROI(totalROIValue / data.length);\r\n\r\n    // ROI Over Time\r\n    const roiTimeData = data.map(analysis => ({\r\n      date: new Date(analysis.recordedDate).getTime(),\r\n      value: Number(analysis.roiValue),\r\n    })).sort((a, b) => a.date - b.date);\r\n    setROIOverTime(roiTimeData);\r\n\r\n    // Conversion Rate (assuming we have this data in the description or tags)\r\n    const conversions = data.filter(analysis => analysis.tags.includes('conversion-rate'));\r\n    setConversionRate((conversions.length / data.length) * 100);\r\n\r\n    // Cost Analysis (for chart)\r\n    const costData = data.reduce((acc, analysis) => {\r\n      const campaignName = `Campaign ${analysis.campaignId.slice(-4)}`;\r\n      acc[campaignName] = (acc[campaignName] || 0) + Number(analysis.roiValue);\r\n      return acc;\r\n    }, {});\r\n    setCostAnalysis(Object.keys(costData).map(key => ({\r\n      name: key,\r\n      y: costData[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options\r\n  const roiChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'ROI Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'ROI Value' } },\r\n    series: [{ name: 'ROI', data: roiOverTime.map(item => [item.date, item.value]) }],\r\n  };\r\n\r\n  const conversionRateChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Conversion Rate' },\r\n    series: [{\r\n      name: 'Conversion Rate',\r\n      data: [\r\n        { name: 'Converted', y: conversionRate },\r\n        { name: 'Not Converted', y: 100 - conversionRate },\r\n      ],\r\n    }],\r\n  };\r\n\r\n  const costAnalysisChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Cost Analysis by Campaign' },\r\n    series: [{ name: 'Cost', data: costAnalysis }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          ROI Analysis Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total ROI</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalROI.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average ROI</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageROI.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Conversion Rate</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {conversionRate.toFixed(2)}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* ROI Over Time */}\r\n          <Grid item xs={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={roiChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Conversion Rate Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={conversionRateChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Cost Analysis Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={costAnalysisChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ROIAnalysisDashboard","_ref","fetchItems","analysisData","setAnalysisData","useState","roiOverTime","setROIOverTime","costAnalysis","setCostAnalysis","conversionRate","setConversionRate","totalROI","setTotalROI","averageROI","setAverageROI","loading","setLoading","useEffect","async","data","processAnalysisData","fetchDataAsync","totalROIValue","reduce","acc","analysis","Number","roiValue","length","roiTimeData","map","date","Date","recordedDate","getTime","value","sort","a","b","conversions","filter","tags","includes","costData","campaignName","campaignId","slice","Object","keys","key","name","y","roiChartOptions","chart","type","title","text","xAxis","yAxis","series","item","conversionRateChartOptions","costAnalysisChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}