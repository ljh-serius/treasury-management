{"version":3,"file":"static/js/20951.90013ab4.chunk.js","mappings":"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","sources":["pages/Analysis/MergersAcquisitions/PostMergerIntegration/SystemsIntegration.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function SystemsIntegrationDashboard({ fetchItems }) {\r\n  const [integrationData, setIntegrationData] = useState([]);\r\n  const [totalIntegrations, setTotalIntegrations] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [progressTrends, setProgressTrends] = useState([]);\r\n  const [timelineTrends, setTimelineTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setIntegrationData(data);\r\n      processIntegrationData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processIntegrationData = (data) => {\r\n    // Total Integrations\r\n    setTotalIntegrations(data.length);\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, integration) => {\r\n      acc[integration.status] = (acc[integration.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Progress Trends for Line Chart\r\n    const progressData = data.map(integration => ({\r\n      date: new Date(integration.startDate).getTime(),\r\n      progress: integration.progress,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setProgressTrends(progressData);\r\n\r\n    // Timeline Trends for Line Chart\r\n    const timelineData = data.map(integration => ({\r\n      start: new Date(integration.startDate).getTime(),\r\n      end: new Date(integration.endDate).getTime(),\r\n    })).sort((a, b) => a.start - b.start);\r\n    setTimelineTrends(timelineData);\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Systems Integration Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Progress Trends\r\n  const progressChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Progress Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Progress (%)' } },\r\n    series: [{\r\n      name: 'Progress',\r\n      data: progressTrends.map(item => [item.date, item.progress]),\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Timeline Trends\r\n  const timelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Systems Integration Timelines' },\r\n    xAxis: { type: 'datetime', title: { text: 'Start Date' } },\r\n    yAxis: { title: { text: 'End Date' } },\r\n    series: [{\r\n      name: 'Duration',\r\n      data: timelineTrends.map(item => [item.start, item.end]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Systems Integration Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Integrations</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalIntegrations}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Progress Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={progressChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Timeline Trends Chart */}\r\n          <Grid item xs={12} md={6} sx={{ marginTop: 4 }}>\r\n            <HighchartsReact highcharts={Highcharts} options={timelineChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["SystemsIntegrationDashboard","_ref","fetchItems","integrationData","setIntegrationData","useState","totalIntegrations","setTotalIntegrations","statusDistribution","setStatusDistribution","progressTrends","setProgressTrends","timelineTrends","setTimelineTrends","loading","setLoading","useEffect","async","data","processIntegrationData","fetchData","length","statusCounts","reduce","acc","integration","status","Object","keys","map","key","name","charAt","toUpperCase","slice","y","progressData","date","Date","startDate","getTime","progress","sort","a","b","timelineData","start","end","endDate","statusChartOptions","chart","type","title","text","series","colorByPoint","progressChartOptions","xAxis","yAxis","item","timelineChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}