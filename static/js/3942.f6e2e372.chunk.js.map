{"version":3,"file":"static/js/3942.f6e2e372.chunk.js","mappings":"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","sources":["pages/Analysis/MergersAcquisitions/MAStrategy/DueDiligence.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function DueDiligenceDashboard({ fetchData }) {\r\n  const [dueDiligenceData, setDueDiligenceData] = useState([]);\r\n  const [totalProcesses, setTotalProcesses] = useState(0);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [timelineTrends, setTimelineTrends] = useState([]);\r\n  const [riskAssessmentDistribution, setRiskAssessmentDistribution] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setDueDiligenceData(data);\r\n      processDueDiligenceData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processDueDiligenceData = (data) => {\r\n    // Total Processes\r\n    setTotalProcesses(data.length);\r\n\r\n    // Status Distribution for Pie Chart\r\n    const statusCounts = data.reduce((acc, item) => {\r\n      acc[item.status] = (acc[item.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Review Timelines for Line Chart\r\n    const trendData = data.map(item => ({\r\n      start: new Date(item.startDate).getTime(),\r\n      end: new Date(item.endDate).getTime(),\r\n    })).sort((a, b) => a.start - b.start);\r\n    setTimelineTrends(trendData);\r\n\r\n    // Risk Assessment Distribution for Pie Chart\r\n    const riskCounts = data.reduce((acc, item) => {\r\n      const riskLevel = item.riskAssessment.includes('high') ? 'High Risk' : 'Low Risk';\r\n      acc[riskLevel] = (acc[riskLevel] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setRiskAssessmentDistribution(Object.keys(riskCounts).map(key => ({\r\n      name: key,\r\n      y: riskCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Due Diligence Timeline Trends\r\n  const timelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Due Diligence Timelines' },\r\n    xAxis: { type: 'datetime', title: { text: 'Start Date' } },\r\n    yAxis: { title: { text: 'End Date' } },\r\n    series: [{\r\n      name: 'Duration',\r\n      data: timelineTrends.map(item => [item.start, item.end]),\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Risk Assessment Distribution\r\n  const riskAssessmentChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Risk Assessment Distribution' },\r\n    series: [{\r\n      name: 'Risk Level',\r\n      colorByPoint: true,\r\n      data: riskAssessmentDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Due Diligence Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Processes</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalProcesses}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Status Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Due Diligence Timeline Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={timelineChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Risk Assessment Distribution Chart */}\r\n          <Grid item xs={12} md={6} sx={{ marginTop: 4 }}>\r\n            <HighchartsReact highcharts={Highcharts} options={riskAssessmentChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["DueDiligenceDashboard","_ref","fetchData","dueDiligenceData","setDueDiligenceData","useState","totalProcesses","setTotalProcesses","statusDistribution","setStatusDistribution","timelineTrends","setTimelineTrends","riskAssessmentDistribution","setRiskAssessmentDistribution","loading","setLoading","useEffect","async","data","processDueDiligenceData","fetchDataAsync","length","statusCounts","reduce","acc","item","status","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","start","Date","startDate","getTime","end","endDate","sort","a","b","riskCounts","riskLevel","riskAssessment","includes","statusChartOptions","chart","type","title","text","series","colorByPoint","timelineChartOptions","xAxis","yAxis","riskAssessmentChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}