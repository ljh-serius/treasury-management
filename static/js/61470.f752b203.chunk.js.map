{"version":3,"file":"static/js/61470.f752b203.chunk.js","mappings":"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","sources":["pages/Analysis/CrisisRiskManagement/RiskAssessments/RiskIdentification.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst RiskIdentificationAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    const highRiskCount = data.filter(item => item.likelihood === 'high').length;\r\n    const mediumRiskCount = data.filter(item => item.likelihood === 'medium').length;\r\n    const lowRiskCount = data.filter(item => item.likelihood === 'low').length;\r\n\r\n    const highImpactCount = data.filter(item => item.impact === 'high').length;\r\n    const mediumImpactCount = data.filter(item => item.impact === 'medium').length;\r\n    const lowImpactCount = data.filter(item => item.impact === 'low').length;\r\n\r\n    const statusCounts = data.reduce((acc, item) => {\r\n        acc[item.status] = (acc[item.status] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const riskLikelihoodOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Risk Likelihood Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Likelihood',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'High', y: highRiskCount },\r\n                    { name: 'Medium', y: mediumRiskCount },\r\n                    { name: 'Low', y: lowRiskCount },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const riskImpactOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Risk Impact Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Impact',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'High', y: highImpactCount },\r\n                    { name: 'Medium', y: mediumImpactCount },\r\n                    { name: 'Low', y: lowImpactCount },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const statusOptions = {\r\n        chart: { type: 'column' },\r\n        title: { text: 'Risk Status Distribution' },\r\n        xAxis: { categories: Object.keys(statusCounts) },\r\n        series: [\r\n            {\r\n                name: 'Status',\r\n                data: Object.values(statusCounts),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">Risk Identification Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Risks</Typography>\r\n                        <Typography variant=\"h4\">{data.length}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">High Risk Likelihood</Typography>\r\n                        <Typography variant=\"h4\">{highRiskCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">High Risk Impact</Typography>\r\n                        <Typography variant=\"h4\">{highImpactCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={riskLikelihoodOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={riskImpactOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <HighchartsReact highcharts={Highcharts} options={statusOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default RiskIdentificationAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","highRiskCount","filter","item","likelihood","length","mediumRiskCount","lowRiskCount","highImpactCount","impact","mediumImpactCount","lowImpactCount","statusCounts","reduce","acc","status","riskLikelihoodOptions","chart","type","title","text","series","name","colorByPoint","y","riskImpactOptions","statusOptions","xAxis","categories","Object","keys","values","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}