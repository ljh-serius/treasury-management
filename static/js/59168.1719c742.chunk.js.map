{"version":3,"file":"static/js/59168.1719c742.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/Investments/InvestmentReturns.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst InvestmentReturnsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalReturns: 0,\r\n    totalROI: 0,\r\n    receivedReturns: 0,\r\n    pendingReturns: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const returns = await fetchItems();\r\n      setData(returns);\r\n      calculateKPIs(returns);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (items) => {\r\n    const totalReturns = items.reduce((acc, curr) => acc + parseFloat(curr.returnAmount || 0), 0);\r\n    const totalROI = (\r\n      items.reduce((acc, curr) => acc + parseFloat(curr.roi || 0), 0) / items.length\r\n    ).toFixed(2);\r\n    const receivedReturns = items.filter((item) => item.status === 'received').length;\r\n    const pendingReturns = items.filter((item) => item.status === 'pending').length;\r\n\r\n    setKpis({\r\n      totalReturns,\r\n      totalROI,\r\n      receivedReturns,\r\n      pendingReturns,\r\n    });\r\n  };\r\n\r\n  const statusChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Return Status Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Returns',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Received', y: kpis.receivedReturns },\r\n          { name: 'Pending', y: kpis.pendingReturns },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const roiChart = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Return on Investment (ROI) by Investment Type',\r\n    },\r\n    xAxis: {\r\n      categories: data.map((item) => item.investmentType),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'ROI (%)',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'ROI',\r\n        data: data.map((item) => parseFloat(item.roi || 0)),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Investment Returns Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Returns ($)</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalReturns}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Average ROI (%)</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalROI}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Received Returns</Typography>\r\n              <Typography variant=\"h4\">{kpis.receivedReturns}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Pending Returns</Typography>\r\n              <Typography variant=\"h4\">{kpis.pendingReturns}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={statusChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={roiChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InvestmentReturnsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalReturns","totalROI","receivedReturns","pendingReturns","useEffect","async","returns","calculateKPIs","loadData","items","reduce","acc","curr","parseFloat","returnAmount","roi","length","toFixed","filter","item","status","statusChart","chart","type","title","text","series","name","colorByPoint","y","roiChart","xAxis","categories","map","investmentType","yAxis","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}