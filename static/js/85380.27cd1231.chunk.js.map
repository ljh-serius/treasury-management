{"version":3,"file":"static/js/85380.27cd1231.chunk.js","mappings":"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","sources":["pages/Analysis/CustomerSupport/ServiceContracts/ContractualObligations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst ObligationsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // KPI Calculations\r\n  const totalObligations = data.length;\r\n  const pendingObligations = data.filter((item) => item.status === 'pending').length;\r\n  const fulfilledObligations = data.filter((item) => item.status === 'fulfilled').length;\r\n  const overdueObligations = data.filter((item) => item.status === 'overdue').length;\r\n\r\n  // Highcharts options for obligations status distribution\r\n  const obligationsStatusOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Obligation Status Distribution' },\r\n    xAxis: {\r\n      categories: ['Pending', 'Fulfilled', 'Overdue'],\r\n      crosshair: true,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: { text: 'Number of Obligations' },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Obligations',\r\n        data: [pendingObligations, fulfilledObligations, overdueObligations],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Obligations</Typography>\r\n          <Typography variant=\"h4\">{totalObligations}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Pending</Typography>\r\n          <Typography variant=\"h4\">{pendingObligations}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Fulfilled</Typography>\r\n          <Typography variant=\"h4\">{fulfilledObligations}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={3}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Overdue</Typography>\r\n          <Typography variant=\"h4\">{overdueObligations}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12} md={12}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={obligationsStatusOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{`Obligation ${index + 1}:`}</Typography>\r\n              {record.tags.map((tag) => (\r\n                <Chip key={tag.id} label={tag.label} style={{ margin: '5px' }} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ObligationsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalObligations","length","pendingObligations","filter","item","status","fulfilledObligations","overdueObligations","obligationsStatusOptions","chart","type","title","text","xAxis","categories","crosshair","yAxis","min","series","name","_jsxs","Grid","container","spacing","xs","md","Card","variant","gutterBottom","HighchartsReact","highcharts","Highcharts","options","map","record","index","tags","tag","Chip","label","style","margin","id"],"sourceRoot":""}