"use strict";(self.webpackChunktresorerie_management=self.webpackChunktresorerie_management||[]).push([[226],{3226:(e,t,a)=>{a.a(e,(async(e,n)=>{try{a.r(t),a.d(t,{addItem:()=>y,deleteItem:()=>p,entityName:()=>c,fetchItemById:()=>u,fetchItems:()=>d,fieldsConfig:()=>l,headCells:()=>s,updateItem:()=>m});var r=a(1256);const i=async e=>(console.log("launched NOW"),(await d()).filter((t=>e.includes(t.type))).map((e=>({id:e.id,label:e.name})))),l={entityId:{label:"Cost ID",type:"text",faker:"datatype.uuid"},entityName:{label:"Cost Name",type:"text",faker:"name.fullName"},name:{label:"name",type:"text",faker:"company.name"},type:{label:"Type",type:"select",options:[{id:"store",label:"Store"},{id:"agency",label:"Agency"},{id:"department",label:"Department"},{id:"service",label:"Service"},{id:"organization",label:"Organization"}],multiple:!1,faker:"random.arrayElement"},entityId:{label:"Entity ID",type:"text",faker:"datatype.uuid"},parentId:{label:"Parent Entity ID",type:"select",options:await i(["store","agency","department","service","organization"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await i(["store","agency","department","service","organization"])},storeId:{label:"Parent Entity ID",type:"select",options:await i(["store"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await i(["store"])},agencyId:{label:"Parent Entity ID",type:"select",options:await i(["agency"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await i(["agency"])},departmentId:{label:"Parent Entity ID",type:"select",options:await i(["department"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await i(["department"])},serviceId:{label:"Parent Entity ID",type:"select",options:await i(["service"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await i(["service"])},orgnizationId:{label:"Parent Entity ID",type:"select",options:await i(["organization"]),multiple:!0,faker:"random.arrayElement",refreshOptions:async()=>await i(["organization"])},locationId:{label:"Location ID",type:"text",faker:"datatype.uuid"},regionId:{label:"Region ID",type:"text",faker:"datatype.uuid"},countryId:{label:"Country ID",type:"text",faker:"address.countryCode"},managerId:{label:"Manager ID",type:"select",options:[],multiple:!1,faker:"random.arrayElement"},status:{label:"Status",type:"select",options:[{id:"active",label:"Active"},{id:"inactive",label:"Inactive"}],faker:"random.arrayElement"},creationDate:{label:"Creation Date",type:"date",faker:"date.past"},modifiedDate:{label:"Modified Date",type:"date",faker:"date.recent"},notes:{label:"Notes",type:"text",faker:"lorem.paragraph"}},s=Object.keys(l).map((e=>({id:e,label:l[e].label}))),c="Entities";async function d(){return await(0,r.P_)("entities")}const y=e=>(0,r.tI)("entities",e),m=(e,t)=>(0,r.lU)("entities",e,t),p=e=>(0,r.Nn)("entities",e);async function u(e){return await(0,r._R)("entities",e)}n()}catch(o){n(o)}}),1)},1256:(e,t,a)=>{a.d(t,{Nn:()=>c,P_:()=>i,TU:()=>d,Xk:()=>y,_R:()=>m,lU:()=>s,tI:()=>l});var n=a(7794),r=a(5472);const o=JSON.parse(localStorage.getItem("userData")).organizationId,i=async e=>{try{const t=(0,r.rJ)(n.db,"organizations",o,e),a=await(0,r.GG)(t);return a.docs.map((e=>({id:e.id,...e.data()})))}catch(t){return console.error(`Error fetching documents from ${e}:`,t),[]}},l=async(e,t)=>{try{t.organizationId=o;const a=(0,r.rJ)(n.db,"organizations",o,e);return(await(0,r.gS)(a,t)).id}catch(a){throw console.error(`Error adding document to ${e}:`,a),new Error(`Could not add document to ${e}`)}},s=async(e,t,a)=>{try{const i=(0,r.H9)(n.db,"organizations",o,e,t);await(0,r.mZ)(i,a)}catch(i){throw console.error(`Error updating document in ${e}:`,i),new Error(`Could not update document in ${e}`)}},c=async(e,t)=>{try{const a=(0,r.H9)(n.db,"organizations",o,e,t);await(0,r.kd)(a)}catch(a){throw console.error(`Error deleting document from ${e}:`,a),new Error(`Could not delete document from ${e}`)}},d=async(e,t,a)=>{try{const i=(0,r.rJ)(n.db,"organizations",o,e),l=(0,r.P)(i,(0,r._M)(t,"array-contains",a)),s=await(0,r.GG)(l);return s.docs.map((e=>({id:e.id,...e.data()})))}catch(i){return console.error(`Error fetching documents from ${e}:`,i),[]}},y=async(e,t,a)=>{try{const i=(0,r.rJ)(n.db,"organizations",o,e),l=(0,r.P)(i,(0,r._M)(t,"==",a)),s=await(0,r.GG)(l);return s.docs.map((e=>({id:e.id,...e.data()})))}catch(i){return console.error(`Error fetching documents from ${e}:`,i),[]}},m=async(e,t)=>{console.log("Fetching document with ID:",t),console.log("In subcollection:",e),console.log("Under organization ID:",o);try{const a=(0,r.H9)(n.db,"organizations",o,e,t);console.log("Document Reference:",a.path);const i=await(0,r.x7)(a);return i.exists()?(console.log("Document data:",i.data()),{id:i.id,...i.data()}):(console.error(`No document found with ID ${t} in ${e}`),null)}catch(a){return console.error(`Error fetching document with ID ${t} from ${e}:`,a),null}}}}]);
//# sourceMappingURL=226.1c28fed8.chunk.js.map