{"version":3,"file":"static/js/57946.e7e3130d.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Opportunities/WinLossAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function WinLossAnalysisDashboard({ fetchItems }) {\r\n  const [analysisData, setAnalysisData] = useState([]);\r\n  const [totalAnalyses, setTotalAnalyses] = useState(0);\r\n  const [totalWins, setTotalWins] = useState(0);\r\n  const [totalLosses, setTotalLosses] = useState(0);\r\n  const [reasonDistribution, setReasonDistribution] = useState([]);\r\n  const [winLossTrends, setWinLossTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setAnalysisData(data);\r\n      processAnalysisData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processAnalysisData = (data) => {\r\n    // Total Analyses\r\n    setTotalAnalyses(data.length);\r\n\r\n    // Total Wins and Losses\r\n    const wins = data.filter(analysis => analysis.result === 'won').length;\r\n    const losses = data.filter(analysis => analysis.result === 'lost').length;\r\n    setTotalWins(wins);\r\n    setTotalLosses(losses);\r\n\r\n    // Reason Distribution for Pie Chart\r\n    const reasonCounts = data.reduce((acc, analysis) => {\r\n      analysis.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n    setReasonDistribution(Object.keys(reasonCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: reasonCounts[key],\r\n    })));\r\n\r\n    // Win/Loss Trends Over Time\r\n    const trends = data.map(analysis => ({\r\n      date: new Date(analysis.analysisDate).getTime(),\r\n      result: analysis.result === 'won' ? 1 : 0,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setWinLossTrends(trends);\r\n  };\r\n\r\n  // Highcharts options for Reason Distribution\r\n  const reasonChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Reasons for Losses/Win' },\r\n    series: [{\r\n      name: 'Occurrences',\r\n      colorByPoint: true,\r\n      data: reasonDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Win/Loss Trends Over Time\r\n  const winLossTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Win/Loss Trends Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Wins/Losses' } },\r\n    series: [{\r\n      name: 'Win/Loss',\r\n      data: winLossTrends.map(item => [item.date, item.result]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Win/Loss Analysis Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Analyses</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAnalyses}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Wins</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalWins}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Losses</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalLosses}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Reason Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={reasonChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Win/Loss Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={winLossTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["WinLossAnalysisDashboard","_ref","fetchItems","analysisData","setAnalysisData","useState","totalAnalyses","setTotalAnalyses","totalWins","setTotalWins","totalLosses","setTotalLosses","reasonDistribution","setReasonDistribution","winLossTrends","setWinLossTrends","loading","setLoading","useEffect","async","data","processAnalysisData","fetchDataAsync","length","wins","filter","analysis","result","losses","reasonCounts","reduce","acc","tags","forEach","tag","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trends","date","Date","analysisDate","getTime","sort","a","b","reasonChartOptions","chart","type","title","text","series","colorByPoint","winLossTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}