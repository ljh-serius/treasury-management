{"version":3,"file":"static/js/35359.eb8a9fe6.chunk.js","mappings":"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","sources":["pages/Analysis/ProjectTaskManagement/Projects/ResourceAllocation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function ResourceAllocationsDashboard({ fetchData }) {\r\n  const [allocationData, setAllocationData] = useState([]);\r\n  const [totalAllocations, setTotalAllocations] = useState(0);\r\n  const [urgentAllocations, setUrgentAllocations] = useState(0);\r\n  const [roleDistribution, setRoleDistribution] = useState([]);\r\n  const [allocationTrends, setAllocationTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setAllocationData(data);\r\n      processAllocationData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processAllocationData = (data) => {\r\n    // Total Allocations\r\n    setTotalAllocations(data.length);\r\n\r\n    // Urgent Allocations\r\n    const urgent = data.filter(allocation => allocation.tags.includes('urgent')).length;\r\n    setUrgentAllocations(urgent);\r\n\r\n    // Role Distribution for Pie Chart\r\n    const roleCounts = data.reduce((acc, allocation) => {\r\n      acc[allocation.role] = (acc[allocation.role] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setRoleDistribution(Object.keys(roleCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: roleCounts[key],\r\n    })));\r\n\r\n    // Allocation Trends for Line Chart\r\n    const trendData = data.map(allocation => ({\r\n      start: new Date(allocation.startDate).getTime(),\r\n      end: new Date(allocation.endDate).getTime(),\r\n      name: allocation.role,\r\n    })).sort((a, b) => a.start - b.start);\r\n    setAllocationTrends(trendData);\r\n  };\r\n\r\n  // Highcharts options for Role Distribution\r\n  const roleChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Role Distribution in Resource Allocations' },\r\n    series: [{\r\n      name: 'Roles',\r\n      colorByPoint: true,\r\n      data: roleDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Allocation Trends\r\n  const allocationTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Resource Allocation Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Start Date' } },\r\n    yAxis: { title: { text: 'End Date' } },\r\n    series: [{\r\n      name: 'Allocation Duration',\r\n      data: allocationTrends.map(item => [item.start, item.end]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Resource Allocations Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Allocations</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalAllocations}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Urgent Allocations</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {urgentAllocations}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Role Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={roleChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Allocation Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={allocationTrendChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ResourceAllocationsDashboard","_ref","fetchData","allocationData","setAllocationData","useState","totalAllocations","setTotalAllocations","urgentAllocations","setUrgentAllocations","roleDistribution","setRoleDistribution","allocationTrends","setAllocationTrends","loading","setLoading","useEffect","async","data","processAllocationData","fetchDataAsync","length","urgent","filter","allocation","tags","includes","roleCounts","reduce","acc","role","Object","keys","map","key","name","charAt","toUpperCase","slice","y","trendData","start","Date","startDate","getTime","end","endDate","sort","a","b","roleChartOptions","chart","type","title","text","series","colorByPoint","allocationTrendChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}