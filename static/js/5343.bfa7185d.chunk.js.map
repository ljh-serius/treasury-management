{"version":3,"file":"static/js/5343.bfa7185d.chunk.js","mappings":"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","sources":["pages/Analysis/IntellectualHumanCapital/RDProjects/ResearchProposals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst ResearchProposalsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response || []); // Ensure data is an array\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // Calculate KPIs\r\n  const totalBudget = data.reduce((sum, record) => sum + (Number(record.budget) || 0), 0);\r\n  const approvedProposals = data.filter(record => record.approvalStatus === 'approved').length;\r\n  const pendingProposals = data.filter(record => record.approvalStatus === 'pending').length;\r\n  const rejectedProposals = data.filter(record => record.approvalStatus === 'rejected').length;\r\n\r\n  // Highcharts options for proposal status distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Proposal Approval Status Distribution' },\r\n    series: [{\r\n      name: 'Proposals',\r\n      colorByPoint: true,\r\n      data: [\r\n        { name: 'Approved', y: approvedProposals },\r\n        { name: 'Pending', y: pendingProposals },\r\n        { name: 'Rejected', y: rejectedProposals },\r\n      ]\r\n    }]\r\n  };\r\n\r\n  // Highcharts options for budget allocation by department\r\n  const budgetChartOptions = {\r\n    chart: { type: 'bar' },\r\n    title: { text: 'Budget Allocation by Department' },\r\n    xAxis: { type: 'category', title: { text: 'Department' } },\r\n    yAxis: { title: { text: 'Budget' } },\r\n    series: [{\r\n      name: 'Budget',\r\n      data: data.map(record => ({\r\n        name: record.department || 'Unknown',\r\n        y: Number(record.budget) || 0\r\n      })),\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Budget</Typography>\r\n          <Typography variant=\"h4\">${totalBudget.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Approved Proposals</Typography>\r\n          <Typography variant=\"h4\">{approvedProposals}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Pending Proposals</Typography>\r\n          <Typography variant=\"h4\">{pendingProposals}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={budgetChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{record.proposalTitle}:</Typography>\r\n              {Array.isArray(record.tags) ? record.tags.map((tag, tagIndex) => (\r\n                <Chip key={tagIndex} label={tag.label} style={{ margin: '5px' }} />\r\n              )) : 'No Tags'}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResearchProposalsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalBudget","reduce","sum","record","Number","budget","approvedProposals","filter","approvalStatus","length","pendingProposals","statusChartOptions","chart","type","title","text","series","name","colorByPoint","y","budgetChartOptions","xAxis","yAxis","map","department","_jsxs","Grid","container","spacing","item","xs","md","Card","variant","gutterBottom","toFixed","HighchartsReact","highcharts","Highcharts","options","index","proposalTitle","Array","isArray","tags","tag","tagIndex","Chip","label","style","margin"],"sourceRoot":""}