{"version":3,"file":"static/js/5533.81776fdd.chunk.js","mappings":"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","sources":["pages/Analysis/CorporateSocialResponsibility/SustaibilityInitiatives/GreenInitiatives.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst GreenInitiativesAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalInitiatives: 0,\r\n    totalBudget: 0,\r\n    ongoingInitiatives: 0,\r\n    completedInitiatives: 0,\r\n    plannedInitiatives: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const initiatives = await fetchItems();\r\n      setData(initiatives);\r\n      calculateKPIs(initiatives);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (initiatives) => {\r\n    const totalInitiatives = initiatives.length;\r\n    const totalBudget = initiatives.reduce((sum, initiative) => sum + initiative.budget, 0);\r\n    const ongoingInitiatives = initiatives.filter((init) => init.status === 'ongoing').length;\r\n    const completedInitiatives = initiatives.filter((init) => init.status === 'completed').length;\r\n    const plannedInitiatives = initiatives.filter((init) => init.status === 'planned').length;\r\n\r\n    setKpis({\r\n      totalInitiatives,\r\n      totalBudget,\r\n      ongoingInitiatives,\r\n      completedInitiatives,\r\n      plannedInitiatives,\r\n    });\r\n  };\r\n\r\n  const initiativeStatusChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Initiative Status Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Initiatives',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Ongoing', y: kpis.ongoingInitiatives },\r\n          { name: 'Completed', y: kpis.completedInitiatives },\r\n          { name: 'Planned', y: kpis.plannedInitiatives },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const budgetChart = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Budget Allocation per Initiative',\r\n    },\r\n    xAxis: {\r\n      categories: data.map((initiative) => initiative.initiativeTitle),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'Budget ($)',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Budget',\r\n        data: data.map((initiative) => initiative.budget),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Green Initiatives Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Initiatives</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalInitiatives}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Budget</Typography>\r\n              <Typography variant=\"h4\">${kpis.totalBudget.toLocaleString()}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Ongoing Initiatives</Typography>\r\n              <Typography variant=\"h4\">{kpis.ongoingInitiatives}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Completed Initiatives</Typography>\r\n              <Typography variant=\"h4\">{kpis.completedInitiatives}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Planned Initiatives</Typography>\r\n              <Typography variant=\"h4\">{kpis.plannedInitiatives}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={initiativeStatusChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={budgetChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GreenInitiativesAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalInitiatives","totalBudget","ongoingInitiatives","completedInitiatives","plannedInitiatives","useEffect","async","initiatives","calculateKPIs","loadData","length","reduce","sum","initiative","budget","filter","init","status","initiativeStatusChart","chart","type","title","text","series","name","colorByPoint","y","budgetChart","xAxis","categories","map","initiativeTitle","yAxis","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","toLocaleString","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}