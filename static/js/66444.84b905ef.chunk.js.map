{"version":3,"file":"static/js/66444.84b905ef.chunk.js","mappings":"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","sources":["pages/Analysis/HrManagement/Attendance/ShiftSchedules.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function ShiftSchedulesAnalytics({ fetchItems }) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalShifts, setTotalShifts] = useState(0);\r\n  const [completedShifts, setCompletedShifts] = useState([]);\r\n  const [shiftTypeDistribution, setShiftTypeDistribution] = useState([]);\r\n  const [overtimeHoursTotal, setOvertimeHoursTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const fetchedData = await fetchItems();\r\n      setData(fetchedData);\r\n      calculateKPIs(fetchedData);\r\n      generateCharts(fetchedData);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (data) => {\r\n    setTotalShifts(data.length);\r\n    const completed = data.filter((shift) => shift.status === 'completed');\r\n    setCompletedShifts(completed);\r\n    const totalOvertime = data.reduce((acc, shift) => acc + shift.overtimeHours, 0);\r\n    setOvertimeHoursTotal(totalOvertime);\r\n  };\r\n\r\n  const generateCharts = (data) => {\r\n    const typeCounts = data.reduce((acc, shift) => {\r\n      acc[shift.shiftType] = (acc[shift.shiftType] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setShiftTypeDistribution(\r\n      Object.keys(typeCounts).map((key) => ({\r\n        name: key,\r\n        y: typeCounts[key],\r\n      }))\r\n    );\r\n  };\r\n\r\n  const shiftTypeDistributionChart = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Shift Type Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Shift Type',\r\n        colorByPoint: true,\r\n        data: shiftTypeDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Shift Schedules Analytics\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPIs */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Shifts</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalShifts}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total number of shifts scheduled.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Completed Shifts</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {completedShifts.length}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Shifts that have been completed.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Overtime Hours</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {overtimeHoursTotal}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total overtime hours worked across shifts.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Charts */}\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={shiftTypeDistributionChart} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ShiftSchedulesAnalytics","_ref","fetchItems","data","setData","useState","loading","setLoading","totalShifts","setTotalShifts","completedShifts","setCompletedShifts","shiftTypeDistribution","setShiftTypeDistribution","overtimeHoursTotal","setOvertimeHoursTotal","useEffect","async","fetchedData","calculateKPIs","generateCharts","fetchData","length","completed","filter","shift","status","totalOvertime","reduce","acc","overtimeHours","typeCounts","shiftType","Object","keys","map","key","name","y","shiftTypeDistributionChart","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}