{"version":3,"file":"static/js/25916.50027836.chunk.js","mappings":"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","sources":["pages/Analysis/ExternalRelationships/VendorManagement/VendorAssessments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst VendorAssessmentsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalAssessments: 0,\r\n    averageScore: 0,\r\n    urgentAssessments: 0,\r\n    completedAssessments: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const assessments = await fetchItems();\r\n      setData(assessments);\r\n      calculateKPIs(assessments);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (items) => {\r\n    const totalAssessments = items.length;\r\n    const averageScore = items.reduce((acc, curr) => acc + parseFloat(curr.score || 0), 0) / totalAssessments;\r\n    const urgentAssessments = items.filter((item) => item.tags.includes('urgent')).length;\r\n    const completedAssessments = items.filter((item) => item.tags.includes('completed')).length;\r\n\r\n    setKpis({\r\n      totalAssessments,\r\n      averageScore: averageScore.toFixed(2),\r\n      urgentAssessments,\r\n      completedAssessments,\r\n    });\r\n  };\r\n\r\n  const scoreDistributionChart = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Score Distribution by Vendor',\r\n    },\r\n    xAxis: {\r\n      categories: data.map((item) => item.vendorName),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'Score',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Score',\r\n        data: data.map((item) => parseFloat(item.score || 0)),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tagsDistributionChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Assessment Tags Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Urgent', y: kpis.urgentAssessments },\r\n          { name: 'Completed', y: kpis.completedAssessments },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Vendor Assessments Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Assessments</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalAssessments}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Average Score</Typography>\r\n              <Typography variant=\"h4\">{kpis.averageScore}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Urgent Assessments</Typography>\r\n              <Typography variant=\"h4\">{kpis.urgentAssessments}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Completed Assessments</Typography>\r\n              <Typography variant=\"h4\">{kpis.completedAssessments}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={scoreDistributionChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={tagsDistributionChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VendorAssessmentsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalAssessments","averageScore","urgentAssessments","completedAssessments","useEffect","async","assessments","calculateKPIs","loadData","items","length","reduce","acc","curr","parseFloat","score","filter","item","tags","includes","toFixed","scoreDistributionChart","chart","type","title","text","xAxis","categories","map","vendorName","yAxis","series","name","tagsDistributionChart","colorByPoint","y","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}