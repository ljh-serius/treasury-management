{"version":3,"file":"static/js/222.b99856a5.chunk.js","mappings":"4UAKA,MAkJA,EAlJ0CA,IAAqB,IAApB,WAAEC,GAAYD,EACvD,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAC/BG,gBAAiB,EACjBC,iBAAkB,EAClBC,kBAAmB,EACnBC,qBAAsB,EACtBC,oBAAqB,KAGvBC,EAAAA,EAAAA,YAAU,KACSC,WACf,MAAMC,QAAmBb,IACzBE,EAAQW,GACRC,EAAcD,EAAW,EAG3BE,EAAU,GACT,CAACf,IAEJ,MAAMc,EAAiBE,IACrB,MAAMV,EAAkBU,EAAMC,OACxBV,EAAmBS,EAAME,QAAQC,GAAyB,WAAhBA,EAAKC,SAAqBH,OACpET,EAAoBQ,EAAME,QAAQC,GAAyB,YAAhBA,EAAKC,SAAsBH,OACtER,EAAuBO,EAAME,QAAQC,GAAyB,eAAhBA,EAAKC,SAAyBH,OAC5EP,EACJM,EAAMK,QAAO,CAACC,EAAKC,IAASD,EAAME,WAAWD,EAAKE,cAAgB,IAAI,GAAKnB,EAE7ED,EAAQ,CACNC,kBACAC,mBACAC,oBACAC,uBACAC,oBAAqBA,EAAoBgB,QAAQ,IACjD,EAGEC,EAAc,CAClBC,MAAO,CACLC,KAAM,OAERC,MAAO,CACLC,KAAM,iCAERC,OAAQ,CACN,CACEC,KAAM,aACNC,cAAc,EACdjC,KAAM,CACJ,CAAEgC,KAAM,SAAUE,EAAG/B,EAAKG,kBAC1B,CAAE0B,KAAM,UAAWE,EAAG/B,EAAKI,mBAC3B,CAAEyB,KAAM,aAAcE,EAAG/B,EAAKK,0BAMhC2B,EAAoB,CACxBR,MAAO,CACLC,KAAM,UAERC,MAAO,CACLC,KAAM,4BAERM,MAAO,CACLC,WAAYrC,EAAKsC,KAAKpB,GAASA,EAAKqB,eAEtCC,MAAO,CACLX,MAAO,CACLC,KAAM,sBAGVC,OAAQ,CACN,CACEC,KAAM,gBACNhC,KAAMA,EAAKsC,KAAKpB,GAASK,WAAWL,EAAKM,cAAgB,QAK/D,OACEiB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,0CAItCF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEP,SAAA,EACzBC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC9B,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAAAV,UACHF,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,sBACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAExC,EAAKE,0BAKrCuC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC9B,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAAAV,UACHF,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,uBACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAExC,EAAKG,2BAKrCsC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC9B,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAAAV,UACHF,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,wBACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAExC,EAAKI,4BAKrCqC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC9B,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAAAV,UACHF,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,2BACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAExC,EAAKK,kCAMvCoC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGK,GAAI,EAAEZ,UAChCC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC9B,MAAI,EAACiC,GAAI,GAAIC,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAAAV,UACHF,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,+BACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAExC,EAAKM,gCAMvCmC,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAACa,GAAI,EAAEZ,UACTC,EAAAA,EAAAA,KAACY,IAAe,CAACC,WAAYC,IAAYC,QAASjC,OAGpDkB,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAACa,GAAI,EAAEZ,UACTC,EAAAA,EAAAA,KAACY,IAAe,CAACC,WAAYC,IAAYC,QAASxB,QAEhD,EAKGyB,EAAe,CACxBC,WAAY,CAAEC,MAAO,cAAelC,KAAM,OAAQmC,MAAO,iBACzDC,gBAAiB,CAAEF,MAAO,mBAAoBlC,KAAM,OAAQmC,MAAO,iBACnEE,aAAc,CAAEH,MAAO,gBAAiBlC,KAAM,OAAQmC,MAAO,aAC7DG,eAAgB,CACZJ,MAAO,kBACPlC,KAAM,SACN+B,QAAS,CACL,CAAEQ,GAAI,OAAQL,MAAO,QACrB,CAAEK,GAAI,SAAUL,MAAO,UACvB,CAAEK,GAAI,MAAOL,MAAO,QAExBC,MAAO,uBAEXK,cAAe,CACXN,MAAO,iBACPlC,KAAM,SACN+B,QAAS,CACL,CAAEQ,GAAI,OAAQL,MAAO,QACrB,CAAEK,GAAI,SAAUL,MAAO,UACvB,CAAEK,GAAI,MAAOL,MAAO,QAExBC,MAAO,uBAEXM,SAAU,CAAEP,MAAO,WAAYlC,KAAM,OAAQmC,MAAO,mBACpDO,SAAU,CAAER,MAAO,WAAYlC,KAAM,OAAQmC,MAAO,kBACpDQ,UAAW,CAAET,MAAO,aAAclC,KAAM,OAAQmC,MAAO,iBACvDS,YAAa,CAAEV,MAAO,eAAgBlC,KAAM,OAAQmC,MAAO,aAC3DU,KAAM,CACFX,MAAO,OACPlC,KAAM,SACN+B,QAAS,CACL,CAAEQ,GAAI,SAAUL,MAAO,UACvB,CAAEK,GAAI,SAAUL,MAAO,UACvB,CAAEK,GAAI,YAAaL,MAAO,aAC1B,CAAEK,GAAI,YAAaL,MAAO,aAC1B,CAAEK,GAAI,YAAaL,MAAO,cAE9BY,UAAU,EACVX,MAAO,wBAIFY,EAAa,uBACbC,EAAiB,sB","sources":["components/Management/ExternalRelationships/StakeholderManagement/StakeholderAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst RevenueSharingAgreementsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalAgreements: 0,\r\n    activeAgreements: 0,\r\n    expiredAgreements: 0,\r\n    terminatedAgreements: 0,\r\n    averageRevenueShare: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const agreements = await fetchItems();\r\n      setData(agreements);\r\n      calculateKPIs(agreements);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (items) => {\r\n    const totalAgreements = items.length;\r\n    const activeAgreements = items.filter((item) => item.status === 'active').length;\r\n    const expiredAgreements = items.filter((item) => item.status === 'expired').length;\r\n    const terminatedAgreements = items.filter((item) => item.status === 'terminated').length;\r\n    const averageRevenueShare =\r\n      items.reduce((acc, curr) => acc + parseFloat(curr.revenueShare || 0), 0) / totalAgreements;\r\n\r\n    setKpis({\r\n      totalAgreements,\r\n      activeAgreements,\r\n      expiredAgreements,\r\n      terminatedAgreements,\r\n      averageRevenueShare: averageRevenueShare.toFixed(2),\r\n    });\r\n  };\r\n\r\n  const statusChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Agreement Status Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Agreements',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Active', y: kpis.activeAgreements },\r\n          { name: 'Expired', y: kpis.expiredAgreements },\r\n          { name: 'Terminated', y: kpis.terminatedAgreements },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const revenueShareChart = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Revenue Share by Partner',\r\n    },\r\n    xAxis: {\r\n      categories: data.map((item) => item.partnerName),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'Revenue Share (%)',\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Revenue Share',\r\n        data: data.map((item) => parseFloat(item.revenueShare || 0)),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Revenue Sharing Agreements Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Agreements</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalAgreements}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Active Agreements</Typography>\r\n              <Typography variant=\"h4\">{kpis.activeAgreements}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Expired Agreements</Typography>\r\n              <Typography variant=\"h4\">{kpis.expiredAgreements}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Terminated Agreements</Typography>\r\n              <Typography variant=\"h4\">{kpis.terminatedAgreements}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3} mt={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Average Revenue Share (%)</Typography>\r\n              <Typography variant=\"h4\">{kpis.averageRevenueShare}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={statusChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={revenueShareChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RevenueSharingAgreementsAnalytics;\r\nexport const fieldsConfig = {\r\n    analysisId: { label: 'Analysis ID', type: 'text', faker: 'datatype.uuid' },\r\n    stakeholderName: { label: 'Stakeholder Name', type: 'text', faker: 'name.fullName' },\r\n    analysisDate: { label: 'Analysis Date', type: 'date', faker: 'date.past' },\r\n    influenceLevel: {\r\n        label: 'Influence Level',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'high', label: 'High' },\r\n            { id: 'medium', label: 'Medium' },\r\n            { id: 'low', label: 'Low' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    interestLevel: {\r\n        label: 'Interest Level',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'high', label: 'High' },\r\n            { id: 'medium', label: 'Medium' },\r\n            { id: 'low', label: 'Low' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    strategy: { label: 'Strategy', type: 'text', faker: 'lorem.paragraph' },\r\n    outcomes: { label: 'Outcomes', type: 'text', faker: 'lorem.sentence' },\r\n    createdBy: { label: 'Created By', type: 'text', faker: 'name.fullName' },\r\n    createdDate: { label: 'Created Date', type: 'date', faker: 'date.past' },\r\n    tags: {\r\n        label: 'Tags',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'urgent', label: 'Urgent' },\r\n            { id: 'review', label: 'Review' },\r\n            { id: 'important', label: 'Important' },\r\n            { id: 'completed', label: 'Completed' },\r\n            { id: 'follow-up', label: 'Follow-Up' },\r\n        ],\r\n        multiple: true,\r\n        faker: 'random.arrayElement',\r\n    },\r\n};\r\n\r\nexport const entityName = 'Stakeholder Analysis';\r\nexport const collectionName = 'stakeholder-analysis';\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalAgreements","activeAgreements","expiredAgreements","terminatedAgreements","averageRevenueShare","useEffect","async","agreements","calculateKPIs","loadData","items","length","filter","item","status","reduce","acc","curr","parseFloat","revenueShare","toFixed","statusChart","chart","type","title","text","series","name","colorByPoint","y","revenueShareChart","xAxis","categories","map","partnerName","yAxis","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","mt","HighchartsReact","highcharts","Highcharts","options","fieldsConfig","analysisId","label","faker","stakeholderName","analysisDate","influenceLevel","id","interestLevel","strategy","outcomes","createdBy","createdDate","tags","multiple","entityName","collectionName"],"sourceRoot":""}