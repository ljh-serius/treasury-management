{"version":3,"file":"static/js/69194.2fbec250.chunk.js","mappings":"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","sources":["pages/Analysis/FinancialManagement/BankAccounts/BankTransfers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function CreditManagementAnalysisDashboard({ fetchItems }) {\r\n  const [creditData, setCreditData] = useState([]);\r\n  const [currencyDistribution, setCurrencyDistribution] = useState([]);\r\n  const [riskLevelDistribution, setRiskLevelDistribution] = useState([]);\r\n  const [totalCreditLimit, setTotalCreditLimit] = useState(0);\r\n  const [totalOutstandingBalance, setTotalOutstandingBalance] = useState(0);\r\n  const [totalLateFees, setTotalLateFees] = useState(0);\r\n  const [ecoContributionTotal, setEcoContributionTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setCreditData(data);\r\n      processCreditData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processCreditData = (data) => {\r\n    // Currency Distribution\r\n    const currencyCounts = data.reduce((acc, credit) => {\r\n      acc[credit.currency] = (acc[credit.currency] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setCurrencyDistribution(Object.keys(currencyCounts).map(key => ({\r\n      name: key,\r\n      y: currencyCounts[key],\r\n    })));\r\n\r\n    // Risk Level Distribution\r\n    const riskLevelCounts = data.reduce((acc, credit) => {\r\n      acc[credit.riskLevel] = (acc[credit.riskLevel] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setRiskLevelDistribution(Object.keys(riskLevelCounts).map(key => ({\r\n      name: key,\r\n      y: riskLevelCounts[key],\r\n    })));\r\n\r\n    // Total Credit Limit, Outstanding Balance, and Late Payment Fees\r\n    const totals = data.reduce(\r\n      (acc, credit) => {\r\n        acc.creditLimit += Number(credit.creditLimit) || 0;\r\n        acc.outstandingBalance += Number(credit.outstandingBalance) || 0;\r\n        acc.lateFees += Number(credit.latePaymentFee) || 0;\r\n        acc.ecoContribution += Number(credit.ecoContribution) || 0;\r\n        return acc;\r\n      },\r\n      { creditLimit: 0, outstandingBalance: 0, lateFees: 0, ecoContribution: 0 }\r\n    );\r\n\r\n    setTotalCreditLimit(totals.creditLimit);\r\n    setTotalOutstandingBalance(totals.outstandingBalance);\r\n    setTotalLateFees(totals.lateFees);\r\n    setEcoContributionTotal(totals.ecoContribution);\r\n  };\r\n\r\n  const currencyChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Currency Distribution' },\r\n    series: [{ name: 'Currencies', colorByPoint: true, data: currencyDistribution }],\r\n  };\r\n\r\n  const riskLevelChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Risk Level Distribution' },\r\n    series: [{ name: 'Risk Levels', data: riskLevelDistribution }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Credit Management Analysis Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Credit Limit</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalCreditLimit.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total credit limit across all customers.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Outstanding Balance</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalOutstandingBalance.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total outstanding balance across all customers.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Late Payment Fees</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalLateFees.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total late payment fees across all accounts.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Eco Contribution</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${ecoContributionTotal.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total eco-tax contributions (French-specific).</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={currencyChartOptions} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={riskLevelChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CreditManagementAnalysisDashboard","_ref","fetchItems","creditData","setCreditData","useState","currencyDistribution","setCurrencyDistribution","riskLevelDistribution","setRiskLevelDistribution","totalCreditLimit","setTotalCreditLimit","totalOutstandingBalance","setTotalOutstandingBalance","totalLateFees","setTotalLateFees","ecoContributionTotal","setEcoContributionTotal","loading","setLoading","useEffect","async","data","processCreditData","fetchData","currencyCounts","reduce","acc","credit","currency","Object","keys","map","key","name","y","riskLevelCounts","riskLevel","totals","creditLimit","Number","outstandingBalance","lateFees","latePaymentFee","ecoContribution","currencyChartOptions","chart","type","title","text","series","colorByPoint","riskLevelChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}