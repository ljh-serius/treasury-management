{"version":3,"file":"static/js/68968.7c7c9f4c.chunk.js","mappings":"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","sources":["pages/Analysis/ExternalRelationships/StakeholderManagement/StakeholderFeedback.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst StakeholderFeedbackAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [kpis, setKpis] = useState({\r\n    totalFeedbacks: 0,\r\n    positiveFeedbacks: 0,\r\n    neutralFeedbacks: 0,\r\n    negativeFeedbacks: 0,\r\n    respondedCount: 0,\r\n    notRespondedCount: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const feedbacks = await fetchItems();\r\n      setData(feedbacks);\r\n      calculateKPIs(feedbacks);\r\n    };\r\n\r\n    loadData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (items) => {\r\n    const totalFeedbacks = items.length;\r\n    const positiveFeedbacks = items.filter((item) => item.feedbackType === 'positive').length;\r\n    const neutralFeedbacks = items.filter((item) => item.feedbackType === 'neutral').length;\r\n    const negativeFeedbacks = items.filter((item) => item.feedbackType === 'negative').length;\r\n    const respondedCount = items.filter((item) => item.responseStatus === 'responded').length;\r\n    const notRespondedCount = items.filter((item) => item.responseStatus === 'not-responded').length;\r\n\r\n    setKpis({\r\n      totalFeedbacks,\r\n      positiveFeedbacks,\r\n      neutralFeedbacks,\r\n      negativeFeedbacks,\r\n      respondedCount,\r\n      notRespondedCount,\r\n    });\r\n  };\r\n\r\n  const feedbackTypeChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Feedback Type Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Feedbacks',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Positive', y: kpis.positiveFeedbacks },\r\n          { name: 'Neutral', y: kpis.neutralFeedbacks },\r\n          { name: 'Negative', y: kpis.negativeFeedbacks },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const responseStatusChart = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Response Status Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Response Status',\r\n        colorByPoint: true,\r\n        data: [\r\n          { name: 'Responded', y: kpis.respondedCount },\r\n          { name: 'Not Responded', y: kpis.notRespondedCount },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Stakeholder Feedback Analytics\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Total Feedbacks</Typography>\r\n              <Typography variant=\"h4\">{kpis.totalFeedbacks}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Positive Feedbacks</Typography>\r\n              <Typography variant=\"h4\">{kpis.positiveFeedbacks}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Neutral Feedbacks</Typography>\r\n              <Typography variant=\"h4\">{kpis.neutralFeedbacks}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Negative Feedbacks</Typography>\r\n              <Typography variant=\"h4\">{kpis.negativeFeedbacks}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3} mt={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Responded Feedbacks</Typography>\r\n              <Typography variant=\"h4\">{kpis.respondedCount}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Not Responded Feedbacks</Typography>\r\n              <Typography variant=\"h4\">{kpis.notRespondedCount}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={feedbackTypeChart} />\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <HighchartsReact highcharts={Highcharts} options={responseStatusChart} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StakeholderFeedbackAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","kpis","setKpis","totalFeedbacks","positiveFeedbacks","neutralFeedbacks","negativeFeedbacks","respondedCount","notRespondedCount","useEffect","async","feedbacks","calculateKPIs","loadData","items","length","filter","item","feedbackType","responseStatus","feedbackTypeChart","chart","type","title","text","series","name","colorByPoint","y","responseStatusChart","_jsxs","Box","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","mt","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}