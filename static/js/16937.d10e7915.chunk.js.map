{"version":3,"file":"static/js/16937.d10e7915.chunk.js","mappings":"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","sources":["pages/Analysis/CorporateCommunication/CrisisManagement/CrisisCommunicationLogs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst CrisisCommunicationLogsAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    const emailLogs = data.filter(item => item.communicationMethod === 'email').length;\r\n    const phoneCallLogs = data.filter(item => item.communicationMethod === 'phone-call').length;\r\n    const pressConferenceLogs = data.filter(item => item.communicationMethod === 'press-conference').length;\r\n\r\n    const communicationStatusOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Communication Method Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Communications',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Email', y: emailLogs },\r\n                    { name: 'Phone Call', y: phoneCallLogs },\r\n                    { name: 'Press Conference', y: pressConferenceLogs },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const statusCounts = data.reduce((acc, item) => {\r\n        acc[item.status] = (acc[item.status] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const statusOptions = {\r\n        chart: { type: 'column' },\r\n        title: { text: 'Communication Status Breakdown' },\r\n        xAxis: { categories: Object.keys(statusCounts) },\r\n        series: [\r\n            {\r\n                name: 'Communications',\r\n                data: Object.values(statusCounts),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">Crisis Communication Logs Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Logs</Typography>\r\n                        <Typography variant=\"h4\">{data.length}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Emails Sent</Typography>\r\n                        <Typography variant=\"h4\">{emailLogs}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Phone Calls</Typography>\r\n                        <Typography variant=\"h4\">{phoneCallLogs}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={communicationStatusOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={statusOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CrisisCommunicationLogsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","emailLogs","filter","item","communicationMethod","length","phoneCallLogs","communicationStatusOptions","chart","type","title","text","series","name","colorByPoint","y","statusCounts","reduce","acc","status","statusOptions","xAxis","categories","Object","keys","values","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}