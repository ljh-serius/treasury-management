{"version":3,"file":"static/js/28045.5af8b0f9.chunk.js","mappings":"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","sources":["pages/Analysis/TrainingDevelopment/LeadershipPrograms/MentorshipProrgams.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function MentorshipProgramsDashboard({ fetchItems }) {\r\n  const [programsData, setProgramsData] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n  const [averageProgress, setAverageProgress] = useState(0);\r\n  const [mentorsMenteesData, setMentorsMenteesData] = useState([]);\r\n  const [totalPrograms, setTotalPrograms] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setProgramsData(data);\r\n      processProgramsData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processProgramsData = (data) => {\r\n    // Total Programs\r\n    setTotalPrograms(data.length);\r\n\r\n    // Programs by Status\r\n    const statusCounts = data.reduce((acc, program) => {\r\n      acc[program.status] = (acc[program.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setStatusDistribution(Object.keys(statusCounts).map(key => ({\r\n      name: key,\r\n      y: statusCounts[key],\r\n    })));\r\n\r\n    // Average Progress\r\n    const totalProgress = data.reduce((acc, program) => acc + Number(program.progress), 0);\r\n    setAverageProgress(totalProgress / data.length);\r\n\r\n    // Mentors and Mentees Data\r\n    const mentorsMenteesList = data.map(program => ({\r\n      programTitle: program.programTitle,\r\n      mentor: program.mentorName,\r\n      mentee: program.menteeName,\r\n    }));\r\n    setMentorsMenteesData(mentorsMenteesList);\r\n  };\r\n\r\n  // Chart options for each chart\r\n  const statusChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Programs by Status',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Status',\r\n        colorByPoint: true,\r\n        data: statusDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Mentorship Programs Dashboard\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPI Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Programs</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalPrograms}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Progress (%)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageProgress.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Chart Section */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Mentors and Mentees Section */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Mentors and Mentees</Typography>\r\n                <ul>\r\n                  {mentorsMenteesData.map((program, index) => (\r\n                    <li key={index}>\r\n                      <strong>{program.programTitle}</strong> - Mentor: {program.mentor}, Mentee: {program.mentee}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["MentorshipProgramsDashboard","_ref","fetchItems","programsData","setProgramsData","useState","statusDistribution","setStatusDistribution","averageProgress","setAverageProgress","mentorsMenteesData","setMentorsMenteesData","totalPrograms","setTotalPrograms","loading","setLoading","useEffect","async","data","processProgramsData","fetchData","length","statusCounts","reduce","acc","program","status","Object","keys","map","key","name","y","totalProgress","Number","progress","mentorsMenteesList","programTitle","mentor","mentorName","mentee","menteeName","statusChartOptions","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options","index"],"sourceRoot":""}