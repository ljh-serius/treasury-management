{"version":3,"file":"static/js/28619.630b2506.chunk.js","mappings":"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","sources":["pages/Analysis/MergersAcquisitions/PostMergerIntegration/SynergyTracking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst SynergyTrackingAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response || []); // Ensure data is an array\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // KPIs\r\n  const totalSynergyValue = data.reduce((sum, record) => sum + Number(record.synergyValue || 0), 0);\r\n  const averageSynergyValue = (totalSynergyValue / (data.length || 1)).toFixed(2);\r\n\r\n  const statusCounts = data.reduce((acc, record) => {\r\n    acc[record.status] = (acc[record.status] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const statusDistribution = Object.keys(statusCounts).map(status => ({\r\n    name: status.charAt(0).toUpperCase() + status.slice(1),\r\n    y: statusCounts[status],\r\n  }));\r\n\r\n  // Highcharts options for Synergy Value Over Time\r\n  const synergyValueChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Synergy Value Over Time' },\r\n    xAxis: {\r\n      categories: data.map(record => new Date(record.trackingDate).getFullYear()),\r\n      title: { text: 'Year' }\r\n    },\r\n    yAxis: { title: { text: 'Synergy Value (USD)' } },\r\n    series: [{\r\n      name: 'Synergy Value',\r\n      data: data.map(record => record.synergyValue || 0),\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Status Distribution\r\n  const statusChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Synergy Status Distribution' },\r\n    series: [{\r\n      name: 'Status',\r\n      colorByPoint: true,\r\n      data: statusDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Synergy Value (USD)</Typography>\r\n          <Typography variant=\"h4\">${totalSynergyValue.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Average Synergy Value (USD)</Typography>\r\n          <Typography variant=\"h4\">${averageSynergyValue}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Synergies Tracked</Typography>\r\n          <Typography variant=\"h4\">{data.length}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={synergyValueChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={statusChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Synergy Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{record.expectedSynergies}:</Typography>\r\n              {(record.tags || []).map((tag, idx) => (\r\n                <Chip key={idx} label={tag.label || tag} style={{ margin: '5px' }} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SynergyTrackingAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalSynergyValue","reduce","sum","record","Number","synergyValue","averageSynergyValue","length","toFixed","statusCounts","acc","status","statusDistribution","Object","keys","map","name","charAt","toUpperCase","slice","y","synergyValueChartOptions","chart","type","title","text","xAxis","categories","Date","trackingDate","getFullYear","yAxis","series","statusChartOptions","colorByPoint","_jsxs","Grid","container","spacing","item","xs","md","Card","variant","gutterBottom","HighchartsReact","highcharts","Highcharts","options","index","expectedSynergies","tags","tag","idx","Chip","label","style","margin"],"sourceRoot":""}