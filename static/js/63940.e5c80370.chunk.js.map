{"version":3,"file":"static/js/63940.e5c80370.chunk.js","mappings":"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","sources":["pages/Analysis/CorporateCommunication/ExternalCommunication/MediaRelations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst MediaRelationsAnalytics = ({ fetchItems }) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetchItems();\r\n            setData(result);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [fetchItems]);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    // Calculate KPIs\r\n    const totalRelations = data.length;\r\n    const urgentRelations = data.filter(item => item.tags.includes('urgent')).length;\r\n    const completedRelations = data.filter(item => item.tags.includes('completed')).length;\r\n\r\n    // Highcharts options\r\n    const methodDistributionOptions = {\r\n        chart: { type: 'pie' },\r\n        title: { text: 'Communication Method Distribution' },\r\n        series: [\r\n            {\r\n                name: 'Methods',\r\n                colorByPoint: true,\r\n                data: [\r\n                    { name: 'Email', y: data.filter(item => item.communicationMethod === 'email').length },\r\n                    { name: 'Phone Call', y: data.filter(item => item.communicationMethod === 'phone-call').length },\r\n                    { name: 'Meeting', y: data.filter(item => item.communicationMethod === 'meeting').length },\r\n                    { name: 'Press Conference', y: data.filter(item => item.communicationMethod === 'press-conference').length },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const outcomeCounts = data.reduce((acc, item) => {\r\n        const outcome = item.outcome;\r\n        acc[outcome] = (acc[outcome] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const outcomeOptions = {\r\n        chart: { type: 'column' },\r\n        title: { text: 'Outcomes Distribution' },\r\n        xAxis: { categories: Object.keys(outcomeCounts) },\r\n        series: [\r\n            {\r\n                name: 'Outcomes',\r\n                data: Object.values(outcomeCounts),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\">Media Relations Analytics</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Total Relations</Typography>\r\n                        <Typography variant=\"h4\">{totalRelations}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Urgent Relations</Typography>\r\n                        <Typography variant=\"h4\">{urgentRelations}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">Completed Relations</Typography>\r\n                        <Typography variant=\"h4\">{completedRelations}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={methodDistributionOptions} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <HighchartsReact highcharts={Highcharts} options={outcomeOptions} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MediaRelationsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","result","fetchData","_jsx","CircularProgress","totalRelations","length","urgentRelations","filter","item","tags","includes","completedRelations","methodDistributionOptions","chart","type","title","text","series","name","colorByPoint","y","communicationMethod","outcomeCounts","reduce","acc","outcome","outcomeOptions","xAxis","categories","Object","keys","values","_jsxs","Grid","container","spacing","children","xs","Typography","variant","md","Card","CardContent","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}