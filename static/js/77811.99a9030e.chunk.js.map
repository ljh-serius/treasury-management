{"version":3,"file":"static/js/77811.99a9030e.chunk.js","mappings":"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","sources":["pages/Analysis/RealEstatePropertyManagement/Leases/TenantRecords.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function TenantRecordsAnalytics({ fetchItems }) {\r\n  const [tenantData, setTenantData] = useState([]);\r\n  const [totalTenants, setTotalTenants] = useState(0);\r\n  const [expiringLeases, setExpiringLeases] = useState(0);\r\n  const [totalRent, setTotalRent] = useState(0);\r\n  const [tagDistribution, setTagDistribution] = useState([]);\r\n  const [rentTrends, setRentTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setTenantData(data);\r\n      processTenantData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processTenantData = (data) => {\r\n    // Total Tenants\r\n    setTotalTenants(data.length);\r\n\r\n    // Count Expiring Leases\r\n    const expiring = data.filter(tenant => new Date(tenant.leaseEndDate) < new Date(new Date().setMonth(new Date().getMonth() + 3))).length;\r\n    setExpiringLeases(expiring);\r\n\r\n    // Total Rent Income\r\n    const totalRentIncome = data.reduce((acc, tenant) => acc + Number(tenant.monthlyRent), 0);\r\n    setTotalRent(totalRentIncome);\r\n\r\n    // Rent Trends for Line Chart\r\n    const trends = data.map(tenant => ({\r\n      date: new Date(tenant.leaseStartDate).getTime(),\r\n      rent: Number(tenant.monthlyRent),\r\n    }));\r\n    setRentTrends(trends);\r\n\r\n    // Tag Distribution for Pie Chart\r\n    const tagCounts = data.reduce((acc, tenant) => {\r\n      if (Array.isArray(tenant.tags)) {\r\n        tenant.tags.forEach(tag => {\r\n          acc[tag] = (acc[tag] || 0) + 1;\r\n        });\r\n      }\r\n      return acc;\r\n    }, {});\r\n    setTagDistribution(Object.keys(tagCounts).map(key => ({\r\n      name: key.charAt(0).toUpperCase() + key.slice(1),\r\n      y: tagCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Rent Trends\r\n  const rentTrendChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Monthly Rent Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Lease Start Date' } },\r\n    yAxis: { title: { text: 'Monthly Rent' } },\r\n    series: [{\r\n      name: 'Monthly Rent',\r\n      data: rentTrends.map(item => [item.date, item.rent]),\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Tag Distribution\r\n  const tagChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Tenant Tags Distribution' },\r\n    series: [{\r\n      name: 'Tags',\r\n      colorByPoint: true,\r\n      data: tagDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Tenant Records Analytics\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Tenants</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalTenants}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Expiring Leases (Next 3 Months)</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {expiringLeases}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Rent Income</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalRent.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Rent Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={rentTrendChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Tag Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["TenantRecordsAnalytics","_ref","fetchItems","tenantData","setTenantData","useState","totalTenants","setTotalTenants","expiringLeases","setExpiringLeases","totalRent","setTotalRent","tagDistribution","setTagDistribution","rentTrends","setRentTrends","loading","setLoading","useEffect","async","data","processTenantData","fetchData","length","expiring","filter","tenant","Date","leaseEndDate","setMonth","getMonth","totalRentIncome","reduce","acc","Number","monthlyRent","trends","map","date","leaseStartDate","getTime","rent","tagCounts","Array","isArray","tags","forEach","tag","Object","keys","key","name","charAt","toUpperCase","slice","y","rentTrendChartOptions","chart","type","title","text","xAxis","yAxis","series","item","tagChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}