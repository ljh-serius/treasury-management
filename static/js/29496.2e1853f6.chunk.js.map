{"version":3,"file":"static/js/29496.2e1853f6.chunk.js","mappings":"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","sources":["pages/Analysis/InformationTechnology/NetworkManagement/FirewallConfigurations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function FirewallConfigurationsDashboard({ fetchItems }) {\r\n  const [firewallData, setFirewallData] = useState([]);\r\n  const [totalConfigs, setTotalConfigs] = useState(0);\r\n  const [allowedProtocolsData, setAllowedProtocolsData] = useState([]);\r\n  const [blockedIPsData, setBlockedIPsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setFirewallData(data);\r\n      processFirewallData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processFirewallData = (data) => {\r\n    setTotalConfigs(data.length);\r\n\r\n    // Aggregate Allowed Protocols\r\n    const protocolsMap = {};\r\n    data.forEach((item) => {\r\n      const protocols = item.allowedProtocols.split(' ');\r\n      protocols.forEach((protocol) => {\r\n        protocolsMap[protocol] = (protocolsMap[protocol] || 0) + 1;\r\n      });\r\n    });\r\n    const protocolsArray = Object.entries(protocolsMap).map(([protocol, count]) => ({\r\n      name: protocol,\r\n      y: count,\r\n    }));\r\n    setAllowedProtocolsData(protocolsArray);\r\n\r\n    // Aggregate Blocked IPs\r\n    setBlockedIPsData(data.map(item => ({\r\n      name: item.networkName,\r\n      y: item.blockedIPs.split(',').length,\r\n    })));\r\n  };\r\n\r\n  // Highcharts options for Allowed Protocols\r\n  const protocolsChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Allowed Protocols Distribution' },\r\n    series: [{\r\n      name: 'Protocols',\r\n      data: allowedProtocolsData,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Blocked IPs\r\n  const blockedIPsChartOptions = {\r\n    chart: { type: 'bar' },\r\n    title: { text: 'Blocked IPs Count by Network' },\r\n    xAxis: { type: 'category', title: { text: 'Network Name' } },\r\n    yAxis: { title: { text: 'Blocked IPs' } },\r\n    series: [{\r\n      name: 'Blocked IPs',\r\n      data: blockedIPsData,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Firewall Configurations Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Configurations</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalConfigs}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Allowed Protocols Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={protocolsChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Blocked IPs Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={blockedIPsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["FirewallConfigurationsDashboard","_ref","fetchItems","firewallData","setFirewallData","useState","totalConfigs","setTotalConfigs","allowedProtocolsData","setAllowedProtocolsData","blockedIPsData","setBlockedIPsData","loading","setLoading","useEffect","async","data","processFirewallData","fetchData","length","protocolsMap","forEach","item","allowedProtocols","split","protocol","protocolsArray","Object","entries","map","_ref2","count","name","y","networkName","blockedIPs","protocolsChartOptions","chart","type","title","text","series","blockedIPsChartOptions","xAxis","yAxis","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}