{"version":3,"file":"static/js/99570.ab311d22.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Compaigns/CampaignPlanning.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function CampaignAnalyticsDashboard({ fetchData }) {\r\n  const [campaignData, setCampaignData] = useState([]);\r\n  const [budgetDistribution, setBudgetDistribution] = useState([]);\r\n  const [tagDistribution, setTagDistribution] = useState([]);\r\n  const [averageBudget, setAverageBudget] = useState(0);\r\n  const [totalBudget, setTotalBudget] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchData();\r\n      setCampaignData(data);\r\n      processCampaignData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchData]);\r\n\r\n  const processCampaignData = (data) => {\r\n    // Total Budget\r\n    const total = data.reduce((acc, campaign) => acc + Number(campaign.budget), 0);\r\n    setTotalBudget(total);\r\n\r\n    // Average Budget\r\n    setAverageBudget(total / data.length);\r\n\r\n    // Budget Distribution\r\n    const budgetCounts = data.reduce((acc, campaign) => {\r\n      acc[campaign.campaignName] = (acc[campaign.campaignName] || 0) + Number(campaign.budget);\r\n      return acc;\r\n    }, {});\r\n\r\n    setBudgetDistribution(Object.keys(budgetCounts).map(key => ({\r\n      name: key,\r\n      y: budgetCounts[key],\r\n    })));\r\n\r\n    // Tags Distribution\r\n    const tagCounts = data.reduce((acc, campaign) => {\r\n      campaign.tags.forEach(tag => {\r\n        acc[tag] = (acc[tag] || 0) + 1;\r\n      });\r\n      return acc;\r\n    }, {});\r\n\r\n    setTagDistribution(Object.keys(tagCounts).map(key => ({\r\n      name: key,\r\n      y: tagCounts[key],\r\n    })));\r\n  };\r\n\r\n  // Chart options\r\n  const budgetChartOptions = {\r\n    chart: {\r\n      type: 'column',\r\n    },\r\n    title: {\r\n      text: 'Budget Distribution by Campaign',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Budget',\r\n        data: budgetDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tagChartOptions = {\r\n    chart: {\r\n      type: 'pie',\r\n    },\r\n    title: {\r\n      text: 'Tags Distribution',\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tags',\r\n        colorByPoint: true,\r\n        data: tagDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Campaign Analytics Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Budget</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalBudget.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Budget</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  ${averageBudget.toFixed(2)}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Budget Distribution */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={budgetChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Tags Distribution */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={tagChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CampaignAnalyticsDashboard","_ref","fetchData","campaignData","setCampaignData","useState","budgetDistribution","setBudgetDistribution","tagDistribution","setTagDistribution","averageBudget","setAverageBudget","totalBudget","setTotalBudget","loading","setLoading","useEffect","async","data","processCampaignData","fetchDataAsync","total","reduce","acc","campaign","Number","budget","length","budgetCounts","campaignName","Object","keys","map","key","name","y","tagCounts","tags","forEach","tag","budgetChartOptions","chart","type","title","text","series","tagChartOptions","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}