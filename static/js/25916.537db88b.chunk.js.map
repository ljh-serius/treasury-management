{"version":3,"file":"static/js/25916.537db88b.chunk.js","mappings":"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","sources":["pages/Analysis/ExternalRelationships/VendorManagement/VendorAssessments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Card, Grid, Typography, Chip } from '@mui/material';\r\n\r\nconst VendorAssessmentsAnalytics = ({ fetchItems }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetchItems();\r\n      setData(response || []); // Ensure data is an array\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  if (loading) return <Typography>Loading...</Typography>;\r\n\r\n  // KPIs\r\n  const totalAssessments = data.length;\r\n  const avgScore = totalAssessments > 0\r\n    ? data.reduce((sum, record) => sum + (Number(record.score) || 0), 0) / totalAssessments\r\n    : 0;\r\n\r\n  // Count assessments by outcome\r\n  const outcomeCounts = data.reduce((acc, record) => {\r\n    acc[record.outcome] = (acc[record.outcome] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const outcomeDistribution = Object.keys(outcomeCounts).map(outcome => ({\r\n    name: outcome.charAt(0).toUpperCase() + outcome.slice(1),\r\n    y: outcomeCounts[outcome],\r\n  }));\r\n\r\n  // Highcharts options for outcome distribution\r\n  const outcomeChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Outcome Distribution of Vendor Assessments' },\r\n    series: [{\r\n      name: 'Outcomes',\r\n      colorByPoint: true,\r\n      data: outcomeDistribution,\r\n    }]\r\n  };\r\n\r\n  // Highcharts options for assessment scores\r\n  const scoreChartOptions = {\r\n    chart: { type: 'bar' },\r\n    title: { text: 'Assessment Scores by Vendor' },\r\n    xAxis: { categories: data.map(record => record.vendorName || 'Unknown') },\r\n    yAxis: { title: { text: 'Score' } },\r\n    series: [{\r\n      name: 'Score',\r\n      data: data.map(record => Number(record.score) || 0),\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {/* KPI Cards */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Total Assessments</Typography>\r\n          <Typography variant=\"h4\">{totalAssessments}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Average Score</Typography>\r\n          <Typography variant=\"h4\">{avgScore.toFixed(2)}</Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Highcharts */}\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={outcomeChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <HighchartsReact highcharts={Highcharts} options={scoreChartOptions} />\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* Tags */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Typography variant=\"h6\" gutterBottom>Tags</Typography>\r\n          {data.map((record, index) => (\r\n            <div key={index}>\r\n              <Typography variant=\"subtitle1\">{record.vendorName}:</Typography>\r\n              {Array.isArray(record.tags) ? record.tags.map((tag, tagIndex) => (\r\n                <Chip key={tagIndex} label={tag.label} style={{ margin: '5px' }} />\r\n              )) : 'No Tags'}\r\n            </div>\r\n          ))}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VendorAssessmentsAnalytics;\r\n"],"names":["_ref","fetchItems","data","setData","useState","loading","setLoading","useEffect","async","response","fetchData","_jsx","Typography","children","totalAssessments","length","avgScore","reduce","sum","record","Number","score","outcomeCounts","acc","outcome","outcomeChartOptions","chart","type","title","text","series","name","colorByPoint","Object","keys","map","charAt","toUpperCase","slice","y","scoreChartOptions","xAxis","categories","vendorName","yAxis","_jsxs","Grid","container","spacing","item","xs","md","Card","variant","gutterBottom","toFixed","HighchartsReact","highcharts","Highcharts","options","index","Array","isArray","tags","tag","tagIndex","Chip","label","style","margin"],"sourceRoot":""}