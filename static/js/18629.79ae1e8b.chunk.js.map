{"version":3,"file":"static/js/18629.79ae1e8b.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/Pricing/DiscountStructures.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function DiscountStructuresDashboard({ fetchItems }) {\r\n  const [discountData, setDiscountData] = useState([]);\r\n  const [totalDiscounts, setTotalDiscounts] = useState(0);\r\n  const [averageDiscount, setAverageDiscount] = useState(0);\r\n  const [seasonalDiscounts, setSeasonalDiscounts] = useState(0);\r\n  const [clearanceDiscounts, setClearanceDiscounts] = useState(0);\r\n  const [discountPerformance, setDiscountPerformance] = useState([]);\r\n  const [validityTrends, setValidityTrends] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setDiscountData(data);\r\n      processDiscountData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processDiscountData = (data) => {\r\n    // Total Discounts\r\n    setTotalDiscounts(data.length);\r\n\r\n    // Average Discount Percentage\r\n    const totalDiscount = data.reduce((acc, discount) => acc + Number(discount.discountPercentage), 0);\r\n    setAverageDiscount(totalDiscount / data.length);\r\n\r\n    // Count Seasonal and Clearance Discounts\r\n    const seasonal = data.filter(discount => discount.tags.includes('seasonal')).length;\r\n    const clearance = data.filter(discount => discount.tags.includes('clearance')).length;\r\n    setSeasonalDiscounts(seasonal);\r\n    setClearanceDiscounts(clearance);\r\n\r\n    // Discount Performance for Column Chart\r\n    const performanceData = data.map(discount => ({\r\n      name: `Discount ${discount.discountId.slice(-4)}`,\r\n      y: Number(discount.discountPercentage),\r\n    }));\r\n    setDiscountPerformance(performanceData);\r\n\r\n    // Validity Trends Over Time\r\n    const trends = data.map(discount => ({\r\n      start: new Date(discount.validFrom).getTime(),\r\n      end: new Date(discount.validTo).getTime(),\r\n      name: discount.discountName,\r\n    })).sort((a, b) => a.start - b.start);\r\n    setValidityTrends(trends);\r\n  };\r\n\r\n  // Highcharts options for Discount Performance\r\n  const performanceChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Discount Performance by Percentage' },\r\n    series: [{\r\n      name: 'Discount Percentage',\r\n      data: discountPerformance,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Validity Trends Over Time\r\n  const validityTrendsChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Discount Validity Trends' },\r\n    xAxis: { type: 'datetime', title: { text: 'Date' } },\r\n    yAxis: { title: { text: 'Discount Validity Period' } },\r\n    series: [{\r\n      name: 'Discount Validity',\r\n      data: validityTrends.map(item => [item.start, item.end]),\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Discount Structures Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Discounts</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalDiscounts}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Average Discount (%)</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {averageDiscount.toFixed(2)}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Seasonal Discounts</Typography>\r\n                <Typography variant=\"h4\" color=\"orange\" sx={{ fontWeight: 'bold' }}>\r\n                  {seasonalDiscounts}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Clearance Discounts</Typography>\r\n                <Typography variant=\"h4\" color=\"purple\" sx={{ fontWeight: 'bold' }}>\r\n                  {clearanceDiscounts}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Discount Performance Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={performanceChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Validity Trends Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={validityTrendsChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["DiscountStructuresDashboard","_ref","fetchItems","discountData","setDiscountData","useState","totalDiscounts","setTotalDiscounts","averageDiscount","setAverageDiscount","seasonalDiscounts","setSeasonalDiscounts","clearanceDiscounts","setClearanceDiscounts","discountPerformance","setDiscountPerformance","validityTrends","setValidityTrends","loading","setLoading","useEffect","async","data","processDiscountData","fetchDataAsync","length","totalDiscount","reduce","acc","discount","Number","discountPercentage","seasonal","filter","tags","includes","clearance","performanceData","map","name","discountId","slice","y","trends","start","Date","validFrom","getTime","end","validTo","discountName","sort","a","b","performanceChartOptions","chart","type","title","text","series","validityTrendsChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}