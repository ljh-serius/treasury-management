{"version":3,"file":"static/js/63363.66975fa8.chunk.js","mappings":"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","sources":["pages/Analysis/HrManagement/Recruitment/JobDescriptions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function JobDescriptionsAnalytics({ fetchItems }) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalJobs, setTotalJobs] = useState(0);\r\n  const [openJobs, setOpenJobs] = useState([]);\r\n  const [statusDistribution, setStatusDistribution] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const fetchedData = await fetchItems();\r\n      setData(fetchedData);\r\n      calculateKPIs(fetchedData);\r\n      generateCharts(fetchedData);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKPIs = (data) => {\r\n    setTotalJobs(data.length);\r\n    const open = data.filter((job) => job.status === 'open');\r\n    setOpenJobs(open);\r\n  };\r\n\r\n  const generateCharts = (data) => {\r\n    const statusCounts = data.reduce((acc, job) => {\r\n      acc[job.status] = (acc[job.status] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setStatusDistribution(\r\n      Object.keys(statusCounts).map((key) => ({\r\n        name: key,\r\n        y: statusCounts[key],\r\n      }))\r\n    );\r\n  };\r\n\r\n  const statusDistributionChart = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Job Status Distribution' },\r\n    series: [\r\n      {\r\n        name: 'Status',\r\n        colorByPoint: true,\r\n        data: statusDistribution,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Job Descriptions Analytics\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPIs */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Jobs</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalJobs}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total number of job descriptions created.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Open Jobs</Typography>\r\n                <Typography variant=\"h4\" color=\"yellow\" sx={{ fontWeight: 'bold' }}>\r\n                  {openJobs.length}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Job descriptions with open status.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Charts */}\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={statusDistributionChart} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["JobDescriptionsAnalytics","_ref","fetchItems","data","setData","useState","loading","setLoading","totalJobs","setTotalJobs","openJobs","setOpenJobs","statusDistribution","setStatusDistribution","useEffect","async","fetchedData","calculateKPIs","generateCharts","fetchData","length","open","filter","job","status","statusCounts","reduce","acc","Object","keys","map","key","name","y","statusDistributionChart","chart","type","title","text","series","colorByPoint","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}