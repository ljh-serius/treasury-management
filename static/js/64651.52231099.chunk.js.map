{"version":3,"file":"static/js/64651.52231099.chunk.js","mappings":"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","sources":["pages/Analysis/CustomerSupport/Feedback/CustomerSurveys.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function CustomerSurveysDashboard({ fetchItems }) {\r\n  const [surveyData, setSurveyData] = useState([]);\r\n  const [totalSurveys, setTotalSurveys] = useState(0);\r\n  const [satisfactionDistribution, setSatisfactionDistribution] = useState([]);\r\n  const [surveyTimeline, setSurveyTimeline] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setSurveyData(data);\r\n      processSurveyData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const processSurveyData = (data) => {\r\n    // Total Surveys\r\n    setTotalSurveys(data.length);\r\n\r\n    // Satisfaction Score Distribution for Pie Chart\r\n    const scoreCounts = data.reduce((acc, survey) => {\r\n      acc[survey.satisfactionScore] = (acc[survey.satisfactionScore] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    setSatisfactionDistribution(Object.keys(scoreCounts).map(key => ({\r\n      name: `Score ${key}`,\r\n      y: scoreCounts[key],\r\n    })));\r\n\r\n    // Survey Timeline for Line Chart\r\n    const timelineData = data.map(survey => ({\r\n      date: new Date(survey.surveyDate).getTime(),\r\n      label: `Survey ${survey.surveyId.slice(-4)}`,\r\n    })).sort((a, b) => a.date - b.date);\r\n    setSurveyTimeline(timelineData);\r\n  };\r\n\r\n  // Highcharts options for Satisfaction Score Distribution\r\n  const satisfactionChartOptions = {\r\n    chart: { type: 'pie' },\r\n    title: { text: 'Satisfaction Score Distribution' },\r\n    series: [{\r\n      name: 'Satisfaction Score',\r\n      colorByPoint: true,\r\n      data: satisfactionDistribution,\r\n    }],\r\n  };\r\n\r\n  // Highcharts options for Survey Timeline\r\n  const surveyTimelineChartOptions = {\r\n    chart: { type: 'line' },\r\n    title: { text: 'Surveys Conducted Over Time' },\r\n    xAxis: { type: 'datetime', title: { text: 'Survey Date' } },\r\n    yAxis: { title: { text: 'Surveys' } },\r\n    series: [{\r\n      name: 'Surveys',\r\n      data: surveyTimeline.map(item => [item.date, 1]), // Y-axis is constant (1) since we're counting the occurrences\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Customer Surveys Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Surveys</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalSurveys}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Satisfaction Score Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={satisfactionChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Survey Timeline Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={surveyTimelineChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CustomerSurveysDashboard","_ref","fetchItems","surveyData","setSurveyData","useState","totalSurveys","setTotalSurveys","satisfactionDistribution","setSatisfactionDistribution","surveyTimeline","setSurveyTimeline","loading","setLoading","useEffect","async","data","processSurveyData","fetchData","length","scoreCounts","reduce","acc","survey","satisfactionScore","Object","keys","map","key","name","y","timelineData","date","Date","surveyDate","getTime","label","surveyId","slice","sort","a","b","satisfactionChartOptions","chart","type","title","text","series","colorByPoint","surveyTimelineChartOptions","xAxis","yAxis","item","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}