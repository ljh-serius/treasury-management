{"version":3,"file":"static/js/66388.5ef58bd6.chunk.js","mappings":"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","sources":["pages/Analysis/OperationsAssetManagement/Inventory/InventoryValuation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nexport default function InventoryValuationAnalytics({ fetchItems }) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalValuation, setTotalValuation] = useState(0);\r\n  const [rawMaterialValuation, setRawMaterialValuation] = useState(0);\r\n  const [valuationDistribution, setValuationDistribution] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const fetchedData = await fetchItems();\r\n      setData(fetchedData);\r\n      calculateKpis(fetchedData);\r\n      generateCharts(fetchedData);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchItems]);\r\n\r\n  const calculateKpis = (data) => {\r\n    const total = data.reduce((acc, item) => acc + item.totalValuation, 0);\r\n    setTotalValuation(total);\r\n\r\n    const rawMaterial = data.filter((item) => item.tags.includes('raw_material'));\r\n    const rawMaterialVal = rawMaterial.reduce((acc, item) => acc + item.totalValuation, 0);\r\n    setRawMaterialValuation(rawMaterialVal);\r\n  };\r\n\r\n  const generateCharts = (data) => {\r\n    const valuation = data.reduce((acc, item) => {\r\n      acc[item.productName] = (acc[item.productName] || 0) + item.totalValuation;\r\n      return acc;\r\n    }, {});\r\n\r\n    setValuationDistribution(\r\n      Object.keys(valuation).map((key) => ({\r\n        name: key,\r\n        y: valuation[key],\r\n      }))\r\n    );\r\n  };\r\n\r\n  const valuationDistributionChart = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Inventory Valuation by Product' },\r\n    xAxis: {\r\n      categories: valuationDistribution.map((item) => item.name),\r\n      title: { text: 'Products' },\r\n    },\r\n    yAxis: { title: { text: 'Total Valuation (USD)' } },\r\n    series: [\r\n      {\r\n        name: 'Valuation',\r\n        data: valuationDistribution.map((item) => item.y),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Inventory Valuation Analytics\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {/* KPIs */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Inventory Valuation</Typography>\r\n                <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>\r\n                  ${totalValuation.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Total valuation of all inventory items.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Raw Material Valuation</Typography>\r\n                <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>\r\n                  ${rawMaterialValuation.toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Valuation of inventory tagged as 'Raw Material'.</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Charts */}\r\n          <Grid item xs={12} md={12}>\r\n            <HighchartsReact highcharts={Highcharts} options={valuationDistributionChart} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["InventoryValuationAnalytics","_ref","fetchItems","data","setData","useState","loading","setLoading","totalValuation","setTotalValuation","rawMaterialValuation","setRawMaterialValuation","valuationDistribution","setValuationDistribution","useEffect","async","fetchedData","calculateKpis","generateCharts","fetchData","total","reduce","acc","item","rawMaterialVal","filter","tags","includes","valuation","productName","Object","keys","map","key","name","y","valuationDistributionChart","chart","type","title","text","xAxis","categories","yAxis","series","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","xs","md","Card","CardContent","fontWeight","toFixed","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}