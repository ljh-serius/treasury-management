{"version":3,"file":"static/js/74143.54aaf5d5.chunk.js","mappings":"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","sources":["pages/Analysis/SalesMarketing/ClientsCustomers/CustomerSegmentation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Box, Typography, Grid, Card, CardContent, Container, CircularProgress, Backdrop } from '@mui/material';\r\n\r\nexport default function CustomerSegmentationDashboard({ fetchItems }) {\r\n  const [segmentData, setSegmentData] = useState([]);\r\n  const [revenueDistribution, setRevenueDistribution] = useState([]);\r\n  const [customerCountDistribution, setCustomerCountDistribution] = useState([]);\r\n  const [growthSegments, setGrowthSegments] = useState(0);\r\n  const [declineSegments, setDeclineSegments] = useState(0);\r\n  const [totalSegments, setTotalSegments] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      const data = await fetchItems();\r\n      setSegmentData(data);\r\n      processSegmentData(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDataAsync();\r\n  }, [fetchItems]);\r\n\r\n  const processSegmentData = (data) => {\r\n    // Total Segments\r\n    setTotalSegments(data.length);\r\n\r\n    // Count Growth and Decline Segments\r\n    const growth = data.filter(segment => segment.tags.includes('growth-segment')).length;\r\n    const decline = data.filter(segment => segment.tags.includes('decline-segment')).length;\r\n    setGrowthSegments(growth);\r\n    setDeclineSegments(decline);\r\n\r\n    // Revenue Distribution by Segment\r\n    const revenueData = data.map(segment => ({\r\n      name: segment.segmentName,\r\n      y: Number(segment.revenueContribution),\r\n    }));\r\n    setRevenueDistribution(revenueData);\r\n\r\n    // Customer Count Distribution by Segment\r\n    const customerCountData = data.map(segment => ({\r\n      name: segment.segmentName,\r\n      y: Number(segment.customerCount),\r\n    }));\r\n    setCustomerCountDistribution(customerCountData);\r\n  };\r\n\r\n  // Highcharts options\r\n  const revenueChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Revenue Contribution by Segment' },\r\n    series: [{\r\n      name: 'Revenue',\r\n      data: revenueDistribution,\r\n    }],\r\n  };\r\n\r\n  const customerCountChartOptions = {\r\n    chart: { type: 'column' },\r\n    title: { text: 'Customer Count by Segment' },\r\n    series: [{\r\n      name: 'Customer Count',\r\n      data: customerCountDistribution,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ paddingTop: 3, paddingBottom: 7 }}>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Customer Segmentation Dashboard\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {/* KPIs Section */}\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Total Segments</Typography>\r\n                <Typography variant=\"h4\" color=\"green\" sx={{ fontWeight: 'bold' }}>\r\n                  {totalSegments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Growth Segments</Typography>\r\n                <Typography variant=\"h4\" color=\"blue\" sx={{ fontWeight: 'bold' }}>\r\n                  {growthSegments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Decline Segments</Typography>\r\n                <Typography variant=\"h4\" color=\"red\" sx={{ fontWeight: 'bold' }}>\r\n                  {declineSegments}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4} sx={{ marginTop: 4 }}>\r\n          {/* Revenue Contribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={revenueChartOptions} />\r\n          </Grid>\r\n\r\n          {/* Customer Count Distribution Chart */}\r\n          <Grid item xs={12} md={6}>\r\n            <HighchartsReact highcharts={Highcharts} options={customerCountChartOptions} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["CustomerSegmentationDashboard","_ref","fetchItems","segmentData","setSegmentData","useState","revenueDistribution","setRevenueDistribution","customerCountDistribution","setCustomerCountDistribution","growthSegments","setGrowthSegments","declineSegments","setDeclineSegments","totalSegments","setTotalSegments","loading","setLoading","useEffect","async","data","processSegmentData","fetchDataAsync","length","growth","filter","segment","tags","includes","decline","revenueData","map","name","segmentName","y","Number","revenueContribution","customerCountData","customerCount","revenueChartOptions","chart","type","title","text","series","customerCountChartOptions","_jsxs","Container","maxWidth","sx","paddingTop","paddingBottom","children","_jsx","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","Box","padding","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","md","Card","CardContent","fontWeight","marginTop","HighchartsReact","highcharts","Highcharts","options"],"sourceRoot":""}