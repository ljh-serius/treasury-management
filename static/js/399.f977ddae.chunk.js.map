{"version":3,"file":"static/js/399.f977ddae.chunk.js","mappings":"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","sources":["components/Management/Providers.js","data/countries.js","utils/firebaseCrudHelpers.js"],"sourcesContent":["import {\r\n    fetchDocuments,\r\n    addDocument,\r\n    updateDocument,\r\n    deleteDocument,\r\n    fetchDocumentsBySelectValue,\r\n    fetchDocumentsByFieldValue,\r\n    fetchDocumentById\r\n} from '../../utils/firebaseCrudHelpers';\r\n\r\nimport countries from '../../data/countries';\r\n\r\nexport const fieldsConfig = {\r\n    providerId: { label: 'Provider ID', type: 'text', faker: 'datatype.uuid' },\r\n    providerName: { label: 'Provider Name', type: 'text', faker: 'company.name' },\r\n    taxId: { label: 'Tax ID', type: 'text', faker: 'finance.iban' },\r\n    address: { label: 'Address', type: 'text', faker: 'address.streetAddress' },\r\n    contactEmail: { label: 'Email', type: 'email', faker: 'internet.email' },\r\n    contactPhone: { label: 'Phone', type: 'text', faker: 'phone.imei' },\r\n    companyType: {\r\n        label: 'Company Type',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'public', label: 'Public' },\r\n            { id: 'private', label: 'Private' },\r\n            { id: 'partnership', label: 'Partnership' },\r\n            { id: 'non_profit', label: 'Non-Profit' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    country: {\r\n        label: 'Country',\r\n        type: 'select',\r\n        multiple: true,\r\n        options: countries,\r\n        faker: 'random.arrayElement',\r\n    },\r\n    state: { label: 'State/Province', type: 'text', faker: 'address.state' },\r\n    zipCode: { label: 'Zip/Postal Code', type: 'text', faker: 'address.zipCode' },\r\n    website: { label: 'Website', type: 'text', faker: 'internet.url' },\r\n    industry: {\r\n        label: 'Industry',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'finance', label: 'Finance' },\r\n            { id: 'healthcare', label: 'Healthcare' },\r\n            { id: 'it', label: 'IT' },\r\n            { id: 'manufacturing', label: 'Manufacturing' },\r\n            { id: 'retail', label: 'Retail' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    establishedDate: { label: 'Established Date', type: 'date', faker: 'date.past' },\r\n    contractValue: { label: 'Contract Value', type: 'number', faker: 'finance.amount' },\r\n    paymentTerms: {\r\n        label: 'Payment Terms',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'net_30', label: 'Net 30' },\r\n            { id: 'net_60', label: 'Net 60' },\r\n            { id: 'net_90', label: 'Net 90' },\r\n            { id: 'upon_receipt', label: 'Upon Receipt' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    bankAccount: { label: 'Bank Account', type: 'text', faker: 'finance.account' },\r\n    swiftCode: { label: 'SWIFT Code', type: 'text', faker: 'finance.bic' },\r\n    accountManager: { label: 'Account Manager', type: 'text', faker: 'name.fullName' },\r\n    servicesProvided: {\r\n        label: 'Services Provided',\r\n        type: 'select',\r\n        multiple: true,\r\n        options: [\r\n            { id: 'health_insurance', label: 'Health Insurance' },\r\n            { id: 'software_development', label: 'Software Development' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    preferredContactMethod: {\r\n        label: 'Preferred Contact Method',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'email', label: 'Email' },\r\n            { id: 'phone', label: 'Phone' },\r\n            { id: 'in_person', label: 'In Person' },\r\n            { id: 'online_chat', label: 'Online Chat' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    rating: { label: 'Rating', type: 'number', faker: 'datatype.float' },\r\n    regulatoryCompliance: {\r\n        label: 'Regulatory Compliance',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'compliant', label: 'Compliant' },\r\n            { id: 'non_compliant', label: 'Non-Compliant' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    businessRegistrationNumber: { label: 'Business Registration Number', type: 'text', faker: 'finance.account' },\r\n    additionalContactName: { label: 'Additional Contact Name', type: 'text', faker: 'name.fullName' },\r\n    additionalContactEmail: { label: 'Additional Contact Email', type: 'email', faker: 'internet.email' },\r\n    additionalContactPhone: { label: 'Additional Contact Phone', type: 'text', faker: 'phone.imei' },\r\n    businessHours: { label: 'Business Hours', type: 'text', faker: 'lorem.sentence' },\r\n    emergencyContactName: { label: 'Emergency Contact Name', type: 'text', faker: 'name.fullName' },\r\n    emergencyContactPhone: { label: 'Emergency Contact Phone', type: 'text', faker: 'phone.imei' },\r\n    customerSupportEmail: { label: 'Customer Support Email', type: 'email', faker: 'internet.email' },\r\n    customerSupportPhone: { label: 'Customer Support Phone', type: 'text', faker: 'phone.imei' },\r\n    supportHours: { label: 'Support Hours', type: 'text', faker: 'lorem.sentence' },\r\n    tradeLicenseNumber: { label: 'Trade License Number', type: 'text', faker: 'finance.account' },\r\n    vatNumber: { label: 'VAT Number', type: 'text', faker: 'finance.iban' },\r\n    businessInsurance: {\r\n        label: 'Business Insurance',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'insured', label: 'Insured' },\r\n            { id: 'not_insured', label: 'Not Insured' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    legalEntity: {\r\n        label: 'Legal Entity',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'corporation', label: 'Corporation' },\r\n            { id: 'llc', label: 'LLC' },\r\n            { id: 'sole_proprietorship', label: 'Sole Proprietorship' },\r\n            { id: 'partnership', label: 'Partnership' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n    keyPersonnel: { label: 'Key Personnel', type: 'text', faker: 'name.jobTitle' },\r\n    socialMediaLinks: { label: 'Social Media Links', type: 'text', faker: 'internet.url' },\r\n    annualRevenue: { label: 'Annual Revenue', type: 'number', faker: 'finance.amount' },\r\n    numberOfEmployees: { label: 'Number of Employees', type: 'number', faker: 'datatype.number' },\r\n    headquartersLocation: { \r\n        label: 'Headquarters Location',\r\n        type: 'select',\r\n        multiple: true,\r\n        options: countries,\r\n        faker: 'random.arrayElement'\r\n    },\r\n    branchOffices: { label: 'Branch Offices', type: 'text', faker: 'address.streetAddress' },\r\n    certifications: { label: 'Certifications', type: 'text', faker: 'lorem.words' },\r\n    environmentalPolicy: {\r\n        label: 'Environmental Policy',\r\n        type: 'select',\r\n        options: [\r\n            { id: 'green', label: 'Green' },\r\n            { id: 'non_green', label: 'Non-Green' },\r\n        ],\r\n        faker: 'random.arrayElement',\r\n    },\r\n};\r\n\r\nexport const headCells = Object.keys(fieldsConfig).map(key => ({\r\n    id: key,\r\n    label: fieldsConfig[key].label,\r\n}));\r\n\r\nexport const entityName = 'Providers';\r\n\r\nexport async function fetchItems() {\r\n    return await fetchDocuments('providers');\r\n}\r\n\r\nexport async function fetchItemsBySelectValue(selectMenu, value) {\r\n    return await fetchDocumentsBySelectValue('providers', selectMenu, value);\r\n}\r\n\r\nexport const addItem = (item) => {\r\n    addDocument('providers', item);\r\n}\r\n\r\nexport const updateItem = (id, item) => {\r\n    updateDocument('providers', id, item);\r\n}\r\nexport const deleteItem = (id) => deleteDocument('providers', id);\r\n\r\nexport async function fetchItemById(id) {\r\n    return await fetchDocumentById('providers', id);\r\n}\r\n","export default [\r\n    { id: \"USA\", label: \"United States\" },\r\n    { id: \"CAN\", label: \"Canada\" },\r\n    { id: \"MEX\", label: \"Mexico\" },\r\n    { id: \"BRA\", label: \"Brazil\" },\r\n    { id: \"ARG\", label: \"Argentina\" },\r\n    { id: \"GBR\", label: \"United Kingdom\" },\r\n    { id: \"FRA\", label: \"France\" },\r\n    { id: \"GER\", label: \"Germany\" },\r\n    { id: \"ITA\", label: \"Italy\" },\r\n    { id: \"ESP\", label: \"Spain\" },\r\n    { id: \"RUS\", label: \"Russia\" },\r\n    { id: \"CHN\", label: \"China\" },\r\n    { id: \"JPN\", label: \"Japan\" },\r\n    { id: \"IND\", label: \"India\" },\r\n    { id: \"AUS\", label: \"Australia\" },\r\n    { id: \"NZL\", label: \"New Zealand\" },\r\n    { id: \"NGA\", label: \"Nigeria\" },\r\n    { id: \"KEN\", label: \"Kenya\" },\r\n    { id: \"KOR\", label: \"South Korea\" },\r\n    { id: \"SAU\", label: \"Saudi Arabia\" },\r\n    { id: \"ISR\", label: \"Israel\" },\r\n    { id: \"TUR\", label: \"Turkey\" },\r\n    { id: \"IRN\", label: \"Iran\" },\r\n    { id: \"PAK\", label: \"Pakistan\" },\r\n    { id: \"IDN\", label: \"Indonesia\" },\r\n    { id: \"THA\", label: \"Thailand\" },\r\n    { id: \"VNM\", label: \"Vietnam\" },\r\n    { id: \"PHL\", label: \"Philippines\" },\r\n    { id: \"MYS\", label: \"Malaysia\" },\r\n    { id: \"SGP\", label: \"Singapore\" },\r\n    { id: \"HKG\", label: \"Hong Kong\" },\r\n    { id: \"TWN\", label: \"Taiwan\" },\r\n    { id: \"CHE\", label: \"Switzerland\" },\r\n    { id: \"AUT\", label: \"Austria\" },\r\n    { id: \"BEL\", label: \"Belgium\" },\r\n    { id: \"NLD\", label: \"Netherlands\" },\r\n    { id: \"SWE\", label: \"Sweden\" },\r\n    { id: \"NOR\", label: \"Norway\" },\r\n    { id: \"DNK\", label: \"Denmark\" },\r\n    { id: \"FIN\", label: \"Finland\" },\r\n    { id: \"ISL\", label: \"Iceland\" },\r\n    { id: \"IRL\", label: \"Ireland\" },\r\n    { id: \"PRT\", label: \"Portugal\" },\r\n    { id: \"GRC\", label: \"Greece\" },\r\n    { id: \"POL\", label: \"Poland\" },\r\n    { id: \"CZE\", label: \"Czech Republic\" },\r\n    { id: \"HUN\", label: \"Hungary\" },\r\n    { id: \"ROU\", label: \"Romania\" },\r\n    { id: \"BGR\", label: \"Bulgaria\" },\r\n    { id: \"SRB\", label: \"Serbia\" },\r\n    { id: \"HRV\", label: \"Croatia\" },\r\n    { id: \"SVN\", label: \"Slovenia\" },\r\n    { id: \"SVK\", label: \"Slovakia\" },\r\n    { id: \"UKR\", label: \"Ukraine\" },\r\n    { id: \"BLR\", label: \"Belarus\" },\r\n    { id: \"GEO\", label: \"Georgia\" },\r\n    { id: \"ARM\", label: \"Armenia\" },\r\n    { id: \"AZE\", label: \"Azerbaijan\" },\r\n    { id: \"KAZ\", label: \"Kazakhstan\" },\r\n    { id: \"UZB\", label: \"Uzbekistan\" },\r\n    { id: \"TJK\", label: \"Tajikistan\" },\r\n    { id: \"KGZ\", label: \"Kyrgyzstan\" },\r\n    { id: \"AFG\", label: \"Afghanistan\" },\r\n    { id: \"IRQ\", label: \"Iraq\" },\r\n    { id: \"SYR\", label: \"Syria\" },\r\n    { id: \"JOR\", label: \"Jordan\" },\r\n    { id: \"LBN\", label: \"Lebanon\" },\r\n    { id: \"YEM\", label: \"Yemen\" },\r\n    { id: \"OMN\", label: \"Oman\" },\r\n    { id: \"ARE\", label: \"United Arab Emirates\" },\r\n    { id: \"QAT\", label: \"Qatar\" },\r\n    { id: \"BHR\", label: \"Bahrain\" },\r\n    { id: \"BHS\", label: \"Bahamas\" },\r\n    { id: \"CUB\", label: \"Cuba\" },\r\n    { id: \"JAM\", label: \"Jamaica\" },\r\n    { id: \"HTI\", label: \"Haiti\" },\r\n    { id: \"DOM\", label: \"Dominican Republic\" },\r\n    { id: \"PAN\", label: \"Panama\" },\r\n    { id: \"CRI\", label: \"Costa Rica\" },\r\n    { id: \"SLV\", label: \"El Salvador\" },\r\n    { id: \"GTM\", label: \"Guatemala\" },\r\n    { id: \"HND\", label: \"Honduras\" },\r\n    { id: \"NIC\", label: \"Nicaragua\" },\r\n    { id: \"COL\", label: \"Colombia\" },\r\n    { id: \"VEN\", label: \"Venezuela\" },\r\n    { id: \"PER\", label: \"Peru\" },\r\n    { id: \"CHL\", label: \"Chile\" },\r\n    { id: \"BOL\", label: \"Bolivia\" },\r\n    { id: \"PRY\", label: \"Paraguay\" },\r\n    { id: \"URY\", label: \"Uruguay\" },\r\n    { id: \"GUY\", label: \"Guyana\" },\r\n    { id: \"SUR\", label: \"Suriname\" },\r\n    { id: \"ECU\", label: \"Ecuador\" },\r\n    { id: \"FJI\", label: \"Fiji\" },\r\n    { id: \"PNG\", label: \"Papua New Guinea\" },\r\n    { id: \"SOL\", label: \"Solomon Islands\" },\r\n    { id: \"TON\", label: \"Tonga\" },\r\n    { id: \"WSM\", label: \"Samoa\" },\r\n    { id: \"VUT\", label: \"Vanuatu\" },\r\n    { id: \"FSM\", label: \"Micronesia\" },\r\n    { id: \"MHL\", label: \"Marshall Islands\" },\r\n    { id: \"PLW\", label: \"Palau\" },\r\n    { id: \"TLS\", label: \"Timor-Leste\" },\r\n    { id: \"KIR\", label: \"Kiribati\" },\r\n    { id: \"NRU\", label: \"Nauru\" },\r\n    { id: \"TUV\", label: \"Tuvalu\" },\r\n    { id: \"BRN\", label: \"Brunei\" },\r\n    { id: \"LAO\", label: \"Laos\" },\r\n    { id: \"MMR\", label: \"Myanmar\" },\r\n    { id: \"KHM\", label: \"Cambodia\" },\r\n    { id: \"BGD\", label: \"Bangladesh\" },\r\n    { id: \"NPL\", label: \"Nepal\" },\r\n    { id: \"BTN\", label: \"Bhutan\" },\r\n    { id: \"LKA\", label: \"Sri Lanka\" },\r\n    { id: \"MDV\", label: \"Maldives\" },\r\n    { id: \"PRK\", label: \"North Korea\" },\r\n    { id: \"MNG\", label: \"Mongolia\" },\r\n    { id: \"TKM\", label: \"Turkmenistan\" },\r\n    { id: \"PSE\", label: \"Palestine\" },\r\n    { id: \"KWT\", label: \"Kuwait\" },\r\n    { id: \"EGY\", label: \"Egypt\" },\r\n    { id: \"LBY\", label: \"Libya\" },\r\n    { id: \"TUN\", label: \"Tunisia\" },\r\n    { id: \"DZA\", label: \"Algeria\" },\r\n    { id: \"MAR\", label: \"Morocco\" },\r\n    { id: \"SDN\", label: \"Sudan\" },\r\n    { id: \"SOM\", label: \"Somalia\" },\r\n    { id: \"ETH\", label: \"Ethiopia\" },\r\n    { id: \"DJI\", label: \"Djibouti\" },\r\n    { id: \"UGA\", label: \"Uganda\" },\r\n    { id: \"RWA\", label: \"Rwanda\" },\r\n    { id: \"BDI\", label: \"Burundi\" },\r\n    { id: \"TZA\", label: \"Tanzania\" },\r\n    { id: \"ZMB\", label: \"Zambia\" },\r\n    { id: \"MWI\", label: \"Malawi\" },\r\n    { id: \"MOZ\", label: \"Mozambique\" },\r\n    { id: \"AGO\", label: \"Angola\" },\r\n    { id: \"ZWE\", label: \"Zimbabwe\" },\r\n    { id: \"NAM\", label: \"Namibia\" },\r\n    { id: \"BWA\", label: \"Botswana\" },\r\n    { id: \"ZAF\", label: \"South Africa\" },\r\n    { id: \"LSO\", label: \"Lesotho\" },\r\n    { id: \"SWZ\", label: \"Eswatini\" },\r\n    { id: \"MDG\", label: \"Madagascar\" },\r\n    { id: \"COM\", label: \"Comoros\" },\r\n    { id: \"SYC\", label: \"Seychelles\" },\r\n    { id: \"MUS\", label: \"Mauritius\" },\r\n    { id: \"MRT\", label: \"Mauritania\" },\r\n    { id: \"MLI\", label: \"Mali\" },\r\n    { id: \"NER\", label: \"Niger\" },\r\n    { id: \"TCD\", label: \"Chad\" },\r\n    { id: \"CMR\", label: \"Cameroon\" },\r\n    { id: \"CAF\", label: \"Central African Republic\" },\r\n    { id: \"GAB\", label: \"Gabon\" },\r\n    { id: \"COG\", label: \"Republic of the Congo\" },\r\n    { id: \"COD\", label: \"Democratic Republic of the Congo\" },\r\n    { id: \"STP\", label: \"Sao Tome and Principe\" },\r\n    { id: \"GNB\", label: \"Guinea-Bissau\" },\r\n    { id: \"GMB\", label: \"Gambia\" },\r\n    { id: \"SLE\", label: \"Sierra Leone\" },\r\n    { id: \"LBR\", label: \"Liberia\" },\r\n    { id: \"CIV\", label: \"Côte d'Ivoire\" },\r\n    { id: \"GHA\", label: \"Ghana\" },\r\n    { id: \"TGO\", label: \"Togo\" },\r\n    { id: \"BEN\", label: \"Benin\" },\r\n    { id: \"SEN\", label: \"Senegal\" },\r\n    { id: \"GIN\", label: \"Guinea\" },\r\n    { id: \"BFA\", label: \"Burkina Faso\" }\r\n];\r\n","import { db } from './firebaseConfig'; // Assuming you have a Firebase config file\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where, getDoc } from 'firebase/firestore';\r\n\r\nconst organizationId = JSON.parse(localStorage.getItem('userData')).organizationId;\r\n\r\n// Function to fetch documents specific to an organization from a subcollection\r\nexport const fetchDocuments = async(subcollectionName) => {\r\n  try {\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, subcollectionName);\r\n    const snapshot = await getDocs(subcollectionRef);\r\n    const documentsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    return documentsList;\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${subcollectionName}:`, error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Function to add a new document linked to an organization in a subcollection\r\nexport const addDocument = async(subcollectionName, documentData) => {\r\n  try {\r\n    documentData.organizationId = organizationId;\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, subcollectionName);\r\n    const docRef = await addDoc(subcollectionRef, documentData);\r\n    return docRef.id; // Return the ID of the newly created document\r\n  } catch (error) {\r\n    console.error(`Error adding document to ${subcollectionName}:`, error);\r\n    throw new Error(`Could not add document to ${subcollectionName}`);\r\n  }\r\n};\r\n\r\n// Function to update an existing document in a subcollection\r\nexport const updateDocument = async(subcollectionName, documentId, documentData) => {\r\n  try {\r\n    const docRef = doc(db, 'organizations', organizationId, subcollectionName, documentId);\r\n    await updateDoc(docRef, documentData);\r\n  } catch (error) {\r\n    console.error(`Error updating document in ${subcollectionName}:`, error);\r\n    throw new Error(`Could not update document in ${subcollectionName}`);\r\n  }\r\n};\r\n\r\n// Function to delete a document from a subcollection\r\nexport const deleteDocument = async(subcollectionName, documentId) => {\r\n  try {\r\n    const docRef = doc(db, 'organizations', organizationId, subcollectionName, documentId);\r\n    await deleteDoc(docRef);\r\n  } catch (error) {\r\n    console.error(`Error deleting document from ${subcollectionName}:`, error);\r\n    throw new Error(`Could not delete document from ${subcollectionName}`);\r\n  }\r\n};\r\n\r\n\r\nexport const fetchDocumentsBySelectValue = async(relativeCollection, foreignKey, foreignValue) => {\r\n  try {\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, relativeCollection);\r\n    \r\n    // Create a query against the collection\r\n    const q = query(subcollectionRef, where(foreignKey, 'array-contains', foreignValue));\r\n    \r\n    // Execute the query and get the documents\r\n    const snapshot = await getDocs(q);\r\n    const documentsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n    return documentsList;\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${relativeCollection}:`, error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport const fetchDocumentsByFieldValue = async(relativeCollection, fieldName, fieldValue) => {\r\n  try {\r\n    const subcollectionRef = collection(db, 'organizations', organizationId, relativeCollection);\r\n    \r\n    // Create a query against the collection\r\n    const q = query(subcollectionRef, where(fieldName, '==', fieldValue));\r\n    \r\n    // Execute the query and get the documents\r\n    const snapshot = await getDocs(q);\r\n    const documentsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n    return documentsList;\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${relativeCollection}:`, error);\r\n    return [];\r\n  }\r\n}\r\nexport const fetchDocumentById = async(subcollectionName, documentId) => {\r\n  console.log(\"Fetching document with ID:\", documentId);\r\n  console.log(\"In subcollection:\", subcollectionName);\r\n  console.log(\"Under organization ID:\", organizationId);\r\n\r\n  try {\r\n    const docRef = doc(db, 'organizations', organizationId, subcollectionName, documentId);\r\n    console.log(\"Document Reference:\", docRef.path); // Log the path being queried\r\n\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n      console.log(\"Document data:\", docSnap.data()); // Log the retrieved data\r\n      return { id: docSnap.id, ...docSnap.data() };\r\n    } else {\r\n      console.error(`No document found with ID ${documentId} in ${subcollectionName}`);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching document with ID ${documentId} from ${subcollectionName}:`, error);\r\n    return null;\r\n  }\r\n};\r\n"],"names":["fieldsConfig","providerId","label","type","faker","providerName","taxId","address","contactEmail","contactPhone","companyType","options","id","country","multiple","countries","state","zipCode","website","industry","establishedDate","contractValue","paymentTerms","bankAccount","swiftCode","accountManager","servicesProvided","preferredContactMethod","rating","regulatoryCompliance","businessRegistrationNumber","additionalContactName","additionalContactEmail","additionalContactPhone","businessHours","emergencyContactName","emergencyContactPhone","customerSupportEmail","customerSupportPhone","supportHours","tradeLicenseNumber","vatNumber","businessInsurance","legalEntity","keyPersonnel","socialMediaLinks","annualRevenue","numberOfEmployees","headquartersLocation","branchOffices","certifications","environmentalPolicy","headCells","Object","keys","map","key","entityName","async","fetchItems","fetchDocuments","fetchItemsBySelectValue","selectMenu","value","fetchDocumentsBySelectValue","addItem","item","addDocument","updateItem","updateDocument","deleteItem","deleteDocument","fetchItemById","fetchDocumentById","organizationId","JSON","parse","localStorage","getItem","subcollectionRef","collection","db","subcollectionName","snapshot","getDocs","docs","doc","data","error","console","documentData","addDoc","Error","documentId","docRef","updateDoc","deleteDoc","relativeCollection","foreignKey","foreignValue","q","query","where","fetchDocumentsByFieldValue","fieldName","fieldValue","log","path","docSnap","getDoc","exists"],"sourceRoot":""}